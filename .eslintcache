[{"/home/alim/Documents/ju-housing-rent-web/src/index.js":"1","/home/alim/Documents/ju-housing-rent-web/src/serviceWorker.js":"2","/home/alim/Documents/ju-housing-rent-web/src/components/App.js":"3","/home/alim/Documents/ju-housing-rent-web/src/context/LayoutContext.js":"4","/home/alim/Documents/ju-housing-rent-web/src/context/UserContext.js":"5","/home/alim/Documents/ju-housing-rent-web/src/themes/index.js":"6","/home/alim/Documents/ju-housing-rent-web/src/context/index.js":"7","/home/alim/Documents/ju-housing-rent-web/src/components/Layout/Layout.js":"8","/home/alim/Documents/ju-housing-rent-web/src/pages/login/Login.js":"9","/home/alim/Documents/ju-housing-rent-web/src/pages/error/Error.js":"10","/home/alim/Documents/ju-housing-rent-web/src/themes/default.js":"11","/home/alim/Documents/ju-housing-rent-web/src/context/context.js":"12","/home/alim/Documents/ju-housing-rent-web/src/pages/error/styles.js":"13","/home/alim/Documents/ju-housing-rent-web/src/pages/login/styles.js":"14","/home/alim/Documents/ju-housing-rent-web/src/components/SnackBar/Notification.js":"15","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Controls.js":"16","/home/alim/Documents/ju-housing-rent-web/src/components/Form/useForm.js":"17","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileDetail.js":"18","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/Profile.js":"19","/home/alim/Documents/ju-housing-rent-web/src/components/Layout/styles.js":"20","/home/alim/Documents/ju-housing-rent-web/src/components/Footer/Footer.js":"21","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/Charts.js":"22","/home/alim/Documents/ju-housing-rent-web/src/pages/maps/Maps.js":"23","/home/alim/Documents/ju-housing-rent-web/src/pages/tables/Tables.js":"24","/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/Notifications.js":"25","/home/alim/Documents/ju-housing-rent-web/src/pages/typography/Typography.js":"26","/home/alim/Documents/ju-housing-rent-web/src/pages/icons/Icons.js":"27","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomImage.js":"28","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/ActionButton.js":"29","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Button.js":"30","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Select.js":"31","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Autocomplete.js":"32","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomAutocomplete.js":"33","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/Sidebar.js":"34","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/DatePicker.js":"35","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/Dashboard.js":"36","/home/alim/Documents/ju-housing-rent-web/src/components/Header/Header.js":"37","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Popup.js":"38","/home/alim/Documents/ju-housing-rent-web/src/components/FullScreenPopup/FullScreenPopup.js":"39","/home/alim/Documents/ju-housing-rent-web/src/components/FormDialog/FormDialog.js":"40","/home/alim/Documents/ju-housing-rent-web/src/utils/AxiosHeader.js":"41","/home/alim/Documents/ju-housing-rent-web/src/components/BreadCrumb/BreadCrumb.jsx":"42","/home/alim/Documents/ju-housing-rent-web/src/pages/typography/styles.js":"43","/home/alim/Documents/ju-housing-rent-web/src/components/Wrappers/Wrappers.js":"44","/home/alim/Documents/ju-housing-rent-web/src/components/Widget/Widget.js":"45","/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/PageTitle.js":"46","/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/styles.js":"47","/home/alim/Documents/ju-housing-rent-web/src/pages/icons/styles.js":"48","/home/alim/Documents/ju-housing-rent-web/src/components/Header/styles.js":"49","/home/alim/Documents/ju-housing-rent-web/src/components/Notification/Notification.js":"50","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/mock.js":"51","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/styles.js":"52","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/Table/Table.js":"53","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/BigStat.js":"54","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/Dot.js":"55","/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/UserAvatar.js":"56","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"57","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/styles.js":"58","/home/alim/Documents/ju-housing-rent-web/src/pages/maps/styles.js":"59","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexHeatmap.js":"60","/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/styles.js":"61","/home/alim/Documents/ju-housing-rent-web/src/components/Widget/styles.js":"62","/home/alim/Documents/ju-housing-rent-web/src/components/Notification/styles.js":"63","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/styles.js":"64","/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/styles.js":"65","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/styles.js":"66","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexLineChart.js":"67","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Upload.js":"68","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileUpdateForm.js":"69","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileForm.js":"70","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Input.js":"71","/home/alim/Documents/ju-housing-rent-web/src/components/Table/useTable.js":"72","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMember.js":"73","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMemberForm.js":"74","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContact.js":"75","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContactForm.js":"76","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/Driver.js":"77","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/Cleaner.js":"78","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/OtherForm.js":"79","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/OtherDetail.js":"80","/home/alim/Documents/ju-housing-rent-web/src/pages/tolet/ToLet.js":"81","/home/alim/Documents/ju-housing-rent-web/src/pages/tolet/ToLetForm.js":"82","/home/alim/Documents/ju-housing-rent-web/src/pages/tolet/ToLetDetail.js":"83","/home/alim/Documents/ju-housing-rent-web/src/pages/tolet/CheckInOut.js":"84","/home/alim/Documents/ju-housing-rent-web/src/pages/tolet/CheckInForm.js":"85"},{"size":869,"mtime":1629456103812,"results":"86","hashOfConfig":"87"},{"size":4948,"mtime":1629474813902,"results":"88","hashOfConfig":"87"},{"size":1750,"mtime":1655724232613,"results":"89","hashOfConfig":"87"},{"size":1392,"mtime":1629456103812,"results":"90","hashOfConfig":"87"},{"size":3018,"mtime":1654055454950,"results":"91","hashOfConfig":"87"},{"size":502,"mtime":1629456103820,"results":"92","hashOfConfig":"87"},{"size":148,"mtime":1655724240301,"results":"93","hashOfConfig":"87"},{"size":2364,"mtime":1656480862983,"results":"94","hashOfConfig":"87"},{"size":18639,"mtime":1656755399558,"results":"95","hashOfConfig":"87"},{"size":1571,"mtime":1647144516113,"results":"96","hashOfConfig":"87"},{"size":2987,"mtime":1629456103820,"results":"97","hashOfConfig":"87"},{"size":947,"mtime":1655724099312,"results":"98","hashOfConfig":"87"},{"size":1334,"mtime":1629456103812,"results":"99","hashOfConfig":"87"},{"size":3636,"mtime":1655312406847,"results":"100","hashOfConfig":"87"},{"size":960,"mtime":1629456103812,"results":"101","hashOfConfig":"87"},{"size":483,"mtime":1646649743943,"results":"102","hashOfConfig":"87"},{"size":670,"mtime":1655723413646,"results":"103","hashOfConfig":"87"},{"size":6132,"mtime":1656308357684,"results":"104","hashOfConfig":"87"},{"size":1228,"mtime":1655965429584,"results":"105","hashOfConfig":"87"},{"size":1003,"mtime":1646649743947,"results":"106","hashOfConfig":"87"},{"size":1039,"mtime":1655618967077,"results":"107","hashOfConfig":"87"},{"size":5556,"mtime":1629456103812,"results":"108","hashOfConfig":"87"},{"size":971,"mtime":1629456103816,"results":"109","hashOfConfig":"87"},{"size":2082,"mtime":1629456103816,"results":"110","hashOfConfig":"87"},{"size":13470,"mtime":1629456103816,"results":"111","hashOfConfig":"87"},{"size":4506,"mtime":1629456103816,"results":"112","hashOfConfig":"87"},{"size":377833,"mtime":1629456103812,"results":"113","hashOfConfig":"87"},{"size":267,"mtime":1646649743943,"results":"114","hashOfConfig":"87"},{"size":838,"mtime":1629456103808,"results":"115","hashOfConfig":"87"},{"size":708,"mtime":1650789247649,"results":"116","hashOfConfig":"87"},{"size":956,"mtime":1629456103808,"results":"117","hashOfConfig":"87"},{"size":778,"mtime":1655723341914,"results":"118","hashOfConfig":"87"},{"size":897,"mtime":1655723348814,"results":"119","hashOfConfig":"87"},{"size":3200,"mtime":1656480882783,"results":"120","hashOfConfig":"87"},{"size":834,"mtime":1646649743943,"results":"121","hashOfConfig":"87"},{"size":6871,"mtime":1655724627602,"results":"122","hashOfConfig":"87"},{"size":8130,"mtime":1656825677775,"results":"123","hashOfConfig":"87"},{"size":1353,"mtime":1629456103808,"results":"124","hashOfConfig":"87"},{"size":2256,"mtime":1629456103808,"results":"125","hashOfConfig":"87"},{"size":1537,"mtime":1629456103808,"results":"126","hashOfConfig":"87"},{"size":211,"mtime":1654055454950,"results":"127","hashOfConfig":"87"},{"size":1425,"mtime":1656320787647,"results":"128","hashOfConfig":"87"},{"size":374,"mtime":1629456103816,"results":"129","hashOfConfig":"87"},{"size":3790,"mtime":1629456103812,"results":"130","hashOfConfig":"87"},{"size":1883,"mtime":1655723718671,"results":"131","hashOfConfig":"87"},{"size":427,"mtime":1629456103812,"results":"132","hashOfConfig":"87"},{"size":1858,"mtime":1629456103816,"results":"133","hashOfConfig":"87"},{"size":780,"mtime":1629456103812,"results":"134","hashOfConfig":"87"},{"size":3868,"mtime":1629456103812,"results":"135","hashOfConfig":"87"},{"size":3296,"mtime":1629456103812,"results":"136","hashOfConfig":"87"},{"size":4105,"mtime":1629456103812,"results":"137","hashOfConfig":"87"},{"size":3028,"mtime":1646649743951,"results":"138","hashOfConfig":"87"},{"size":1274,"mtime":1629456103812,"results":"139","hashOfConfig":"87"},{"size":4039,"mtime":1629456103812,"results":"140","hashOfConfig":"87"},{"size":862,"mtime":1629456103812,"results":"141","hashOfConfig":"87"},{"size":593,"mtime":1629456103812,"results":"142","hashOfConfig":"87"},{"size":4574,"mtime":1629456103812,"results":"143","hashOfConfig":"87"},{"size":1304,"mtime":1629456103812,"results":"144","hashOfConfig":"87"},{"size":171,"mtime":1629456103816,"results":"145","hashOfConfig":"87"},{"size":1794,"mtime":1629456103812,"results":"146","hashOfConfig":"87"},{"size":462,"mtime":1629456103812,"results":"147","hashOfConfig":"87"},{"size":969,"mtime":1629456103812,"results":"148","hashOfConfig":"87"},{"size":993,"mtime":1629456103812,"results":"149","hashOfConfig":"87"},{"size":1027,"mtime":1629456103812,"results":"150","hashOfConfig":"87"},{"size":276,"mtime":1629456103812,"results":"151","hashOfConfig":"87"},{"size":1440,"mtime":1629456103812,"results":"152","hashOfConfig":"87"},{"size":1328,"mtime":1629456103812,"results":"153","hashOfConfig":"87"},{"size":1341,"mtime":1629456103808,"results":"154","hashOfConfig":"87"},{"size":5014,"mtime":1655724930431,"results":"155","hashOfConfig":"87"},{"size":11253,"mtime":1656231932092,"results":"156","hashOfConfig":"87"},{"size":425,"mtime":1646649743943,"results":"157","hashOfConfig":"87"},{"size":3868,"mtime":1629456103812,"results":"158","hashOfConfig":"87"},{"size":7483,"mtime":1656331609137,"results":"159","hashOfConfig":"87"},{"size":4239,"mtime":1655879958245,"results":"160","hashOfConfig":"87"},{"size":7475,"mtime":1656331701969,"results":"161","hashOfConfig":"87"},{"size":3788,"mtime":1655963239811,"results":"162","hashOfConfig":"87"},{"size":8066,"mtime":1656331074002,"results":"163","hashOfConfig":"87"},{"size":8078,"mtime":1656330975362,"results":"164","hashOfConfig":"87"},{"size":4879,"mtime":1655967236808,"results":"165","hashOfConfig":"87"},{"size":2037,"mtime":1655976645762,"results":"166","hashOfConfig":"87"},{"size":21611,"mtime":1656850019775,"results":"167","hashOfConfig":"87"},{"size":7746,"mtime":1656841460668,"results":"168","hashOfConfig":"87"},{"size":3028,"mtime":1656824990425,"results":"169","hashOfConfig":"87"},{"size":13145,"mtime":1656569815224,"results":"170","hashOfConfig":"87"},{"size":3135,"mtime":1656749309149,"results":"171","hashOfConfig":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"1f2oyhz",{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"191","usedDeprecatedRules":"174"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"174"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"174"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"218","usedDeprecatedRules":"174"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"174"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"174"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"174"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"174"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"174"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"174"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"174"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"174"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"174"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"174"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"174"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"174"},"/home/alim/Documents/ju-housing-rent-web/src/index.js",[],["361","362"],"/home/alim/Documents/ju-housing-rent-web/src/serviceWorker.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/App.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/LayoutContext.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/UserContext.js",[],"/home/alim/Documents/ju-housing-rent-web/src/themes/index.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/index.js",["363"],"/home/alim/Documents/ju-housing-rent-web/src/components/Layout/Layout.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/login/Login.js",["364","365","366"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n  FormControl,\n  InputLabel,\n  Select as MuiSelect,\n  MenuItem\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/core/styles\";\n// styles\nimport useStyles from \"./styles\";\n\n// context\nimport { useUserDispatch } from \"../../context/UserContext\";\n\nconst GreenTextTypography = withStyles({\n  root: {\n    color: \"#00FF00\"\n  }\n})(Typography);\n\n\nvar initialRenterValues = {\n  id: 0,\n  first_name: \"\",\n  last_name: \"\",\n  email: \"\",\n  phone: \"\",\n  role: \"\",\n  password: \"\",\n  password2: \"\"\n};\n\nvar loginValues = {\n  username: \"\",\n  password: \"\"\n}\n\nvar holdPassword = ''\n\nconst duplicateUserNameCheck = (list, value)=> {\n  var check = true\n  if(list.length === 0){\n    return check\n  }else{\n    for (let i=0; i< list.length; i ++){\n        if(value === list[i].email){       \n          return check = false\n        }\n      }\n    }\n    return check;\n}\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var dispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  const [ userList, setUserList] = useState([]);\n  const [ groupList, setGroupList] = useState([]);\n  const [message, setMessage] = useState(null)\n\n\n  const validationSchema = yup.object().shape({\n    first_name: yup.string().required(\"First Name is required\"),\n    last_name: yup.string().required(\"Last Name is required\"),\n    phone: yup\n    .number()\n    .typeError(\"Invalid Input: numbers please\")\n    // .max(11, \"Not more than 11\")\n    .positive(\"Must be greater than zero\")\n    .required(\"Phone number is required.\")\n    .integer(),\n    email: yup.string().required(\"Email is required\")\n    .test(\"Unique\", \"Email already exist.Try other.\", (values) => {\n      return duplicateUserNameCheck(userList, values)\n    }),\n    password: yup\n    .string()\n    .required(\"Password is required\")\n    .test((values)=>{\n      holdPassword = values\n      return true\n    }),\n    password2: yup\n    .string()\n    .required(\"Confirm Password is required\")\n    .test(\"Match\", \"Password doesn't match!\", (values) => {\n      if (values === holdPassword){\n        return true\n      }\n      return false\n    }),\n  });\n\n\n  const RenterFormik = useFormik({\n    initialValues: initialRenterValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n\n  const LoginFormik = useFormik({\n    initialValues: loginValues,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      login(values);\n      resetForm();\n    },\n  });\n\n  const login = async (values) => {\n    setIsLoading(true);\n    const requestOptions = {\n      headers: {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n      },\n    };\n\n    try {\n      axios\n      .post(\"/api/token/\", values, requestOptions)\n      .then((res) => {\n        setTimeout(() => {\n          localStorage.setItem('refresh_token', res.data.refresh)\n          localStorage.setItem('access_token', res.data.access)\n          localStorage.setItem('id', res.data.id)\n          localStorage.setItem('first_name', res.data.first_name)\n          localStorage.setItem('last_name', res.data.last_name)\n          localStorage.setItem('user_type', res.data.user_type)\n          localStorage.setItem('nid', res.data.nid)\n          setError(null)\n          dispatch({ type: 'LOGIN_SUCCESS', payload: res.data })\n          setIsLoading(false);\n          props.history.push('/app/dashboard')\n        }, 1000);\n      })\n      .catch((err) => {\n        // dispatch({ type: \"LOGIN_FAILURE\" });\n        setError(true);\n        setIsLoading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const userRegistration = async (values, setSubmitting) => {\n    setIsLoading(true);\n    const requestOptions = {\n      headers: {\n        method: \"POST\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    };\n\n    try {\n      await axios\n        .post(\"/api/registration/\", values, {\n          requestOptions,\n        })\n        .then((resp) => {\n          setTimeout(() => {\n            setMessage(resp.data.message)\n            setIsLoading(false);\n            setSubmitting(false);\n          }, 1000);\n        });\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n    }\n  };\n\n  const addOrEdit = (userData, resetForm, setSubmitting) => {\n    if (userData.id === 0) userRegistration(userData, setSubmitting);\n    resetForm();\n  };\n\n  useEffect(() => {\n    async function getUsers() {\n      const response = await fetch(\"/api/user/list/\");\n      const body = await response.json();\n      setUserList(body);\n    }\n    getUsers();\n    async function getGroups() {\n      const response = await fetch(\"/api/group/list/\");\n      const body = await response.json();\n      setGroupList(body);\n    }\n    getGroups();\n  }, []);\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        {/* <Typography className={classes.logotypeText}>Jahangirnogar University</Typography> */}\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                <a href=\"https://juniv.edu/\" target=\"_blank\" style={{color: \"green\"}}>Jahangirnagar University</a>\n              </Typography>\n              <Typography variant=\"h3\" className={classes.greeting1}>\n                House Renting System\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :\n                </Typography>\n              </Fade>\n              <Form onSubmit={LoginFormik.handleSubmit}>\n                <Grid container justify=\"space-between\" alignItems=\"flex-start\" spacing={0}>\n                    <Grid item md={12} sm={12} xs={12}>\n                      <TextField \n                        label=\"Email\"\n                        name=\"username\"\n                        InputProps={{\n                          classes: {\n                            underline: classes.textFieldUnderline,\n                            input: classes.textField,\n                          },\n                        }}\n                        value={LoginFormik.values.username}\n                        onChange={LoginFormik.handleChange}\n                        onBlur={LoginFormik.handleBlur}\n                        margin=\"normal\"\n                        type=\"email\"\n                        error={LoginFormik.touched.username && Boolean(LoginFormik.errors.username)}\n                        helperText={LoginFormik.touched.username && LoginFormik.errors.username}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item md={12} sm={12} xs={12}>\n                      <TextField\n                        label=\"Password\"\n                        name=\"password\"\n                        id=\"password\"\n                        InputProps={{\n                          classes: {\n                            underline: classes.textFieldUnderline,\n                            input: classes.textField,\n                          },\n                        }}\n                        value={LoginFormik.values.password}\n                        onChange={LoginFormik.handleChange}\n                        onBlur={LoginFormik.handleBlur}\n                        margin=\"normal\"\n                        type=\"password\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item md={12} sm={12} xs={12}>\n                    {isLoading ? (\n                        <CircularProgress size={26} className={classes.loginLoader} />\n                      ) : (\n                      <Controls.Button\n                          type=\"submit\"\n                          disabled={\n                            LoginFormik.isSubmitting, \n                            LoginFormik.values.username.length === 0 || LoginFormik.values.password.length === 0\n                          }\n                          text=\"Login\"\n                      />\n                      )}\n                    </Grid>\n                </Grid>\n              </Form>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={message}>\n                <GreenTextTypography variant=\"subtitle1\">\n                  {message}\n                </GreenTextTypography>\n              </Fade>\n              <Form onSubmit={RenterFormik.handleSubmit}>\n                <Grid container justify=\"space-between\" alignItems=\"flex-start\" spacing={0}>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField\n                      label=\"First Name\"\n                      name=\"first_name\"\n                      id=\"name\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.first_name}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"text\"\n                      error={RenterFormik.touched.first_name && Boolean(RenterFormik.errors.first_name)}\n                      helperText={RenterFormik.touched.first_name && RenterFormik.errors.first_name}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Last Name\"\n                      name=\"last_name\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.last_name}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"text\"\n                      error={RenterFormik.touched.last_name && Boolean(RenterFormik.errors.last_name)}\n                      helperText={RenterFormik.touched.last_name && RenterFormik.errors.last_name}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Phone\"\n                      name=\"phone\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.phone}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"number\"\n                      error={RenterFormik.touched.phone && Boolean(RenterFormik.errors.phone)}\n                      helperText={RenterFormik.touched.phone && RenterFormik.errors.phone}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Email\"\n                      name=\"email\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.email}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"email\"\n                      error={RenterFormik.touched.email && Boolean(RenterFormik.errors.email)}\n                      helperText={RenterFormik.touched.email && RenterFormik.errors.email}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                      <FormControl fullWidth\n                        {...(error && {error:true})}>\n                            <InputLabel>Role</InputLabel>\n                            <MuiSelect\n                                label=\"Role\"\n                                name=\"role\"\n                                value={RenterFormik.values.role}\n                                onChange={RenterFormik.handleChange}\n                                onBlur={RenterFormik.handleBlur}\n                                error={RenterFormik.touched.role && Boolean(RenterFormik.errors.role)}\n                                helperText={RenterFormik.touched.role && RenterFormik.errors.role}\n                                >\n                                <MenuItem value=\"\">None</MenuItem>\n                                {\n                                    groupList.map(\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>)\n                                    )\n                                }\n                            </MuiSelect>\n                        </FormControl>\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Password\"\n                      name=\"password\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.password}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"password\"\n                      error={RenterFormik.touched.password && Boolean(RenterFormik.errors.password)}\n                      helperText={RenterFormik.touched.password && RenterFormik.errors.password}\n                      fullWidth  \n                   />\n                  </Grid>\n                \n                <Grid item md={12} sm={12} xs={12}>\n                  <TextField \n                    label=\"Confirm Password\"\n                    name=\"password2\"\n                    InputProps={{\n                      classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    value={RenterFormik.values.password2}\n                    onChange={RenterFormik.handleChange}\n                    onBlur={RenterFormik.handleBlur}\n                    margin=\"normal\"\n                    type=\"password\"\n                    error={RenterFormik.touched.password2 && Boolean(RenterFormik.errors.password2)}\n                    helperText={RenterFormik.touched.password2 && RenterFormik.errors.password2}\n                    fullWidth\n                  />\n                </Grid>\n                \n                <Grid item style={{ marginTop: 3 }} md={12} sm={12} xs={12}>\n                    <div className={classes.wrapper}>\n                    {isLoading ? (\n                        <CircularProgress size={26} className={classes.loginLoader} />\n                      ) : (\n                        <Controls.Button\n                            type=\"submit\"\n                            disabled={\n                              RenterFormik.isSubmitting,\n                              RenterFormik.values.first_name.length === 0 || RenterFormik.values.last_name.length === 0 || RenterFormik.values.phone.length === 0 ||\n                              RenterFormik.values.email.length === 0 || RenterFormik.values.role.length === 0 || RenterFormik.values.password.length === 0 || RenterFormik.values.password2.length === 0\n                            }\n                            text=\"Sign Up\"\n                        />\n                      )}\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick = {RenterFormik.resetForm}\n                        />\n                    </div> \n                </Grid>\n                </Grid>\n              </Form>\n            </React.Fragment>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n        © {new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.linkedin.com/in/md-abdul-alim-milon/\" rel=\"noopener noreferrer\" target=\"_blank\">Design & Develop by <span style={{color: \"purple\"}}>Md. Abdul Alim</span></a>\n        </Typography>\n        <Typography color=\"black\" className={classes.pmscs}>\n          Batch: <span style={{color: \"green\"}}>PMSCS 26</span>\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/home/alim/Documents/ju-housing-rent-web/src/pages/error/Error.js",[],"/home/alim/Documents/ju-housing-rent-web/src/themes/default.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/context.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/error/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/login/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/SnackBar/Notification.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Controls.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Form/useForm.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileDetail.js",["367","368"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Popup from \"../../components/Controls/Popup\";\nimport ProfileForm from './ProfileForm'\nimport axios from \"axios\";\nimport {\n  Paper,\n  Grid,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n} from \"@material-ui/core\";\n\nfunction ProfileDetail(props) {\n\n  const [openPopup, setOpenPopup] = useState(false);\n  const [userData, setUserData] = useState([])\n  const [profileData, setProfileData] = useState([])\n  const [updateSignal, setUpdateSignal] = useState(null);\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  async function fetchProfile() {\n\n    try {\n      await axios\n        .get(\"/api/profile/\", AxiosHeader)\n        .then((res) => {\n          setUserData(res.data.user);\n          setProfileData(res.data)\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const updateProfile = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .put(`/api/profile/update/`, values, AxiosHeader)\n        .then((resp) => {\n          setUpdateSignal(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addOrEdit = (userData, setSubmitting) => {\n    updateProfile(userData, setSubmitting);\n    setOpenPopup(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  useEffect(() => {\n    fetchProfile();\n  }, [updateSignal]);\n\n\n  return (\n    <div>\n      <Paper\n        elevation={3}\n        square={false}\n        style={{ paddingTop: 6, margin: \"16px\" }}\n      >\n        <div>\n          <Grid container alignItems=\"flex-start\" spacing={5}>\n            <Grid item md={6} sm={12} xs={12}>\n              <Table>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>Name:</TableCell>\n                    <TableCell align=\"right\">{userData.get_full_name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Email:</TableCell>\n                    <TableCell align=\"right\">{userData.email}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Phone:</TableCell>\n                    <TableCell align=\"right\">{userData.phone}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Birthday:</TableCell>\n                    <TableCell align=\"right\">{userData.birthday}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>NID:</TableCell>\n                    <TableCell align=\"right\">{userData.nid}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Passport:</TableCell>\n                    <TableCell align=\"right\">{userData.passport}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Occupation:</TableCell>\n                    <TableCell align=\"right\">{userData.occupation}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Grid>\n            <Grid item md={6} sm={12} xs={12}>\n                <Table>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell>Occupation Institution:</TableCell>\n                      <TableCell align=\"right\">{userData.occupation_institution}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Education Qualification:</TableCell>\n                      <TableCell align=\"right\">{userData.education_qualification}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Present Address:</TableCell>\n                      <TableCell align=\"right\">{userData.present_address}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Permanent Address:</TableCell>\n                      <TableCell align=\"right\">{userData.permanent_address}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Previous House Owner:</TableCell>\n                      <TableCell align=\"right\">{profileData.previous_house_owner}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Present House Owner:</TableCell>\n                      <TableCell align=\"right\">{profileData.present_house_owner}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Rent Of Date:</TableCell>\n                      <TableCell align=\"right\">{profileData.rent_of_date}</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item md={4} sm={4} xs={4}></Grid>\n            <Grid item md={4} sm={4} xs={4} style={{'text-align': 'center'}}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"mr-4 py-2\"\n                  style={{marginBottom: \"5px\"}}\n                  onClick={() => {\n                    setOpenPopup(true);\n                  }}\n                >\n                  Update\n                </Button>\n            </Grid>\n            <Grid item md={4} sm={4} xs={4}>\n              <Popup title=\"Profile update\" openPopup={openPopup} setOpenPopup={setOpenPopup}>\n                <ProfileForm addOrEdit={addOrEdit} userData={userData}/>\n              </Popup>\n            </Grid>\n          </Grid>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default ProfileDetail;\n","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/Profile.js",["369"],"import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ProfileUpdateForm from \"./ProfileUpdateForm\";\nimport ProfileDetail from './ProfileDetail'\nimport FamilyMember from \"./FamilyMember\";\nimport EmergencyContact from \"./EmergencyContact\";\nimport Cleaner from \"./Cleaner\";\nimport Driver from \"./Driver\";\nimport BreadCrumb from \"../../components/BreadCrumb/BreadCrumb\";\n\nfunction Profile() {\n  return (\n    <div>\n      <BreadCrumb routeSegments={[{ name: \"Profile\" }]} />\n          <Grid container>\n                <Grid item md={4} sm={12} xs={12}>\n                    <ProfileDetail/>\n                </Grid>\n                <Grid container item md={8} sm={12} xs={12}>\n                  <Grid item md={6} sm={6} xs={12}>\n                    <FamilyMember/>\n                  </Grid>\n                  <Grid item md={6} sm={6} xs={12}>\n                    <EmergencyContact/>\n                  </Grid>\n                  <Grid item md={6} sm={6} xs={12}>\n                    <Cleaner/>\n                  </Grid>\n                  <Grid item md={6} sm={6} xs={12}>\n                    <Driver/>\n                  </Grid>\n                </Grid>\n            </Grid>\n    </div>\n  );\n}\n\nexport default Profile;\n","/home/alim/Documents/ju-housing-rent-web/src/components/Layout/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Footer/Footer.js",["370"],"import React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"../Layout/styles\";\n\n\n\nexport default function Footer({ theme }) {\n  var classes = useStyles();\n\n  return (\n    <Box width={1}>\n      <div\n        className={`footer flex flex-middle ${classnames(classes.fixedBottom)}`}\n      >\n        <div className=\"flex flex-middle container px-sm-30 w-100\">\n            <p className=\"m-0\">PMSCS Batch:  \n            <Button variant=\"contained\" color=\"Primary\">\n              26\n            </Button>\n            </p>\n            \n          <span className=\"m-auto\"></span>\n          <p className=\"m-0\" style={{textAlign: 'right'}}>\n            Design and Developed by{\" \"}\n            <a href=\"https://www.linkedin.com/in/md-abdul-alim-milon/\" target=\"_blank\">\n              <Button variant=\"contained\" color=\"secondary\">\n                Md. Abdul Alim\n              </Button>\n            </a>\n          </p>\n        </div>\n      </div>\n    </Box>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/Charts.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/maps/Maps.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/tables/Tables.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/Notifications.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/typography/Typography.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/icons/Icons.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomImage.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/ActionButton.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Button.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Select.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Autocomplete.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomAutocomplete.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/Sidebar.js",["371"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  ArrowBack as ArrowBackIcon,\n  Person as PersonIcon,\n  Dashboard as DashboardIcon,\n  Apartment as ApartmentIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <DashboardIcon color='secondary'/> },\n  {\n    id: 1,\n    label: \"Profile\",\n    link: \"/app/profile\",\n    icon: <PersonIcon color='primary' />,\n  },\n  {\n    id: 2,\n    label: \"To Let\",\n    link: \"/app/to/let\",\n    icon: <ApartmentIcon/>,\n  },\n  {\n    id: 3,\n    label: \"Check in out\",\n    link: \"/app/check/in/out\",\n    icon: <CompareArrowsIcon style={{color: 'purple'}}/>,\n  },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function() {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/DatePicker.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/Dashboard.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Header/Header.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Popup.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/FullScreenPopup/FullScreenPopup.js",[],["372","373"],"/home/alim/Documents/ju-housing-rent-web/src/components/FormDialog/FormDialog.js",[],"/home/alim/Documents/ju-housing-rent-web/src/utils/AxiosHeader.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/BreadCrumb/BreadCrumb.jsx",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/typography/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Wrappers/Wrappers.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Widget/Widget.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/PageTitle.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/icons/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Header/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Notification/Notification.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/mock.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/Table/Table.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/BigStat.js",[],["374","375"],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/Dot.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/UserAvatar.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/maps/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexHeatmap.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Widget/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Notification/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexLineChart.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Upload.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileUpdateForm.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileForm.js",["376"],"import React, { useState, useEffect } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialFValues = {\n  id: 0,\n  first_name: \"\",\n  last_name: \"\",\n  email: \"\",\n  phone: \"\",\n  nid: \"\",\n  passport: \"\",\n  password: \"\",\n  password2: \"\",\n  present_address: \"\",\n  permanent_address: \"\",\n  birthday: new Date(),\n  married_status: \"\",\n  occupation: \"\",\n  occupation_institution: \"\",\n  religion: \"\",\n  education_qualification: \"\",\n};\n\nconst duplicateUserNameCheck = (list, value, own_email)=> {\n  var check = true\n  if(list.length === 0){\n    return check\n  }else{\n    for (let i=0; i< list.length; i ++){\n        if(value === list[i].email && value !==own_email){       \n          return check = false\n        }\n      }\n    }\n    return check;\n}\n\n\nconst ProfileForm = (props) => {\n\n  const [userList, setUserList] = useState([]);\n  const [religions, setReligions] = useState([]);\n  const [marriedStatus, setMarriedStatuses] = useState([]);\n\n\n  const {addOrEdit, userData } = props;\n\n  const validationSchema = yup.object().shape({\n    email: yup.string().required(\"Email is required\")\n    .test(\"Unique\", \"Email already exist.Try other.\", (values) => {\n      return duplicateUserNameCheck(userList, values, userData['email'])\n    }),\n    password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length'),\n    password2: yup\n    .string('Enter your password')\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n  });\n\n  \n\n  const classes = style();  \n\n  const formik = useFormik({\n    initialValues: initialFValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting }) => {\n        setSubmitting(false);\n        addOrEdit(values, setSubmitting);\n    },\n  });\n\n  useEffect(() => {\n    async function getReligions() {\n      const response = await fetch(\"/api/married/status/list\");\n      const body = await response.json();\n      setReligions(body);\n    }\n    getReligions();\n    async function getMarriedStatuses() {\n      const response = await fetch(\"/api/religion/list\");\n      const body = await response.json();\n      setMarriedStatuses(body);\n    }\n    getMarriedStatuses();\n    async function getUsers() {\n      const response = await fetch(\"/api/user/list\");\n      const body = await response.json();\n      setUserList(body);\n    }\n    getUsers();\n\n    if (userData != null)\n      userData['password'] = '';\n      userData['password2'] = '';\n      formik.setValues({\n        ...userData,\n      });\n  }, [userData]);\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={1}>\n      <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"First Name\"\n            name=\"first_name\"\n            value={formik.values.first_name}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.first_name && Boolean(formik.errors.first_name)}\n            helperText={formik.touched.first_name && formik.errors.first_name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Last Name\"\n            name=\"last_name\"\n            value={formik.values.last_name}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n            helperText={formik.touched.last_name && formik.errors.last_name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            type='number'\n            error={formik.touched.phone && Boolean(formik.errors.phone)}\n            helperText={formik.touched.phone && formik.errors.phone}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.DatePicker\n              label=\"Birthday\"\n              name=\"birthday\"\n              value={formik.values.birthday}\n              onChange={value => {\n                formik.setFieldValue(\"birthday\", value)\n              }}\n              onBlur={formik.handleBlur}\n              fullWidth\n            />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"NID\"\n            name=\"nid\"\n            value={formik.values.nid}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.nid && Boolean(formik.errors.nid)}\n            helperText={formik.touched.nid && formik.errors.nid}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Passport\"\n            name=\"passport\"\n            value={formik.values.passport}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.passport && Boolean(formik.errors.passport)}\n            helperText={formik.touched.passport && formik.errors.passport}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Select\n              label=\"Married Status\"\n              name=\"married_status\"\n              value={formik.values.married_status}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={marriedStatus}\n              error={formik.touched.married_status && Boolean(formik.errors.married_status)}\n              helperText={formik.touched.married_status && formik.errors.married_status}\n            />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Select\n              label=\"Religion\"\n              name=\"religion\"\n              value={formik.values.religion}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={religions}\n              error={formik.touched.religion && Boolean(formik.errors.religion)}\n              helperText={formik.touched.religion && formik.errors.religion}\n            />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Occupation\"\n            name=\"occupation\"\n            value={formik.values.occupation}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.occupation && Boolean(formik.errors.occupation)}\n            helperText={formik.touched.occupation && formik.errors.occupation}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Occupation Institution\"\n            name=\"occupation_institution\"\n            value={formik.values.occupation_institution}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.occupation_institution && Boolean(formik.errors.occupation_institution)}\n            helperText={formik.touched.occupation_institution && formik.errors.occupation_institution}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Education Qualification\"\n            name=\"education_qualification\"\n            value={formik.values.education_qualification}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.education_qualification && Boolean(formik.errors.education_qualification)}\n            helperText={formik.touched.education_qualification && formik.errors.education_qualification}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            type=\"password\"\n            onBlur={formik.handleBlur}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Confirm Password\"\n            name=\"password2\"\n            value={formik.values.password2}\n            onChange={formik.handleChange}\n            type=\"password\"\n            onBlur={formik.handleBlur}\n            error={formik.touched.password2 && Boolean(formik.errors.password2)}\n            helperText={formik.touched.password2 && formik.errors.password2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Present Address\"\n            name=\"present_address\"\n            value={formik.values.present_address}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.present_address && Boolean(formik.errors.present_address)}\n            helperText={formik.touched.present_address && formik.errors.present_address}\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Permanent Address\"\n            name=\"permanent_address\"\n            value={formik.values.permanent_address}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.permanent_address && Boolean(formik.errors.permanent_address)}\n            helperText={formik.touched.permanent_address && formik.errors.permanent_address}\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={12} sm={12} xs={12} >\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Update\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default ProfileForm;\n","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Input.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Table/useTable.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMember.js",["377"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popup from \"../../components/Controls/Popup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport {FamilyMemberForm} from \"./FamilyMemberForm\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  iconButtonColor: {\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"#0000ff\",\n    },\n  },\n}));\n\nexport default function FamilyMember() {\n  const classes = useStyles();\n  const [lineNameList, setLineNameList] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [familyMembersRecord, setFamilyMembersRecord] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n\n\n\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const getMuiTheme = () =>\n  createMuiTheme({\n    overrides: {\n      MUIDataTableToolbar: {\n        root: {\n          backgroundColor: \"#50d07d\",\n          color: \"#fff\",\n        },\n        icon: {\n          color: \"#fff\",\n          \"&:hover\": {\n            color: \"#0000ff\",\n          },\n        },\n      },\n      MuiTableCell: {\n        root: {  //This can be referred from Material UI API documentation. \n            padding: '6px',\n        },\n      },\n    },\n    typography: {\n      \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n      \"fontSize\": 14,\n      \"fontWeightLight\": 300,\n      \"fontWeightRegular\": 400,\n      \"fontWeightMedium\": 500\n     }\n  });\n\n  async function fetchFamilyMembers() {\n\n    try {\n      await axios\n        .get(\"/api/profile/family/member/list/\", AxiosHeader)\n        .then((res) => {\n          setLineNameList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const postFamilyMember = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .post(\"/api/profile/family/member/create/\", values, AxiosHeader)\n        .then((resp) => {\n          setFamilyMembersRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateFamilyMember = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .put(`/api/profile/family/member/update/`, values, AxiosHeader)\n        .then((resp) => {\n          setFamilyMembersRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteFamilyMember = async (values) => {\n    await axios\n      .delete(`/api/profile/family/member/delete/`, {\n        params: { member: values.id },\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n      }) \n      .then((resp) => {\n        setFamilyMembersRecord(resp.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchFamilyMembers();\n  }, [familyMembersRecord]);\n\n  const openInPopup = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"age\",\n      label: \"Age\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"phone\",\n      label: \"Phone\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"relation\",\n      label: \"Relation\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"occupation\",\n      label: \"Occupation\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabricType) {\n            if (fabricType.id === tableMeta.rowData[0])\n              return (item = fabricType);\n          });\n          return (\n            <>\n              <Grid container>\n                <Grid item md={6} sm={6} xs={6}>\n                  <Tooltip title={\"Update\"}>\n                    <IconButton\n                      color=\"primary\"\n                      onClick={() => {\n                        openInPopup(item);\n                      }}\n                    >\n                      <EditIcon fontSize=\"default\" />\n                    </IconButton>\n                  </Tooltip>\n                </Grid>\n                <Grid item md={6} sm={6} xs={6}>\n                  <Tooltip title={\"Delete\"}>\n                    <IconButton\n                      onClick={() => {\n                          deleteFamilyMember(item);\n                      }}\n                    >\n                      <DeleteIcon fontSize=\"default\" style={{color: \"red\"}} />\n                    </IconButton>\n                  </Tooltip>\n                </Grid>\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  const addOrEdit = (familyMember, resetForm, setSubmitting) => {\n    if (familyMember.id === 0) postFamilyMember(familyMember, setSubmitting);\n    else updateFamilyMember(familyMember, setSubmitting);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    customToolbar: () => {\n      return (\n        <Tooltip title={\"Add New\"}>\n          <IconButton className={classes.iconButtonColor}\n            onClick={() => {\n              setOpenPopup(true);\n              setRecordForEdit(null);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n      );\n    },\n    print: false,\n    download: false,\n  };\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme()}>\n    <div>\n      <MUIDataTable\n        title={\"Family Members\"}\n        data={lineNameList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n      <Popup\n        title=\"Family Member Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <FamilyMemberForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} />\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n    </MuiThemeProvider>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMemberForm.js",["378","379"],"import React, { useEffect, useState } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialValues = {\n  id: 0,\n  type: \"family\",\n  name: \"x\",\n  age: \"32\",\n  phone: \"324\",\n  relation: \"fs\",\n  occupation: \"ds\",\n};\n\n\n\nconst FamilyMemberForm = (props) => {\n\n  const { addOrEdit, recordForEdit } = props;\n\n  const validationSchema = yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    age: yup.string().required(\"Age is required\"),\n    relation: yup.string().required(\"Relation is required\"),\n  });\n\n  const classes = style();\n\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n        addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      formik.setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item md={12} sm={12} xs={12}>\n          <Controls.Input\n            label=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Age\"\n            name=\"age\"\n            value={formik.values.age}\n            onChange={formik.handleChange}\n            type=\"number\"\n            error={formik.touched.age && Boolean(formik.errors.age)}\n            helperText={formik.touched.age && formik.errors.age}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            error={formik.touched.phone && Boolean(formik.errors.phone)}\n            helperText={formik.touched.phone && formik.errors.phone}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Relation\"\n            name=\"relation\"\n            value={formik.values.relation}\n            onChange={formik.handleChange}\n            error={formik.touched.relation && Boolean(formik.errors.relation)}\n            helperText={formik.touched.relation && formik.errors.relation}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Occupation\"\n            name=\"occupation\"\n            value={formik.values.occupation}\n            onChange={formik.handleChange}\n            error={formik.touched.occupation && Boolean(formik.errors.occupation)}\n            helperText={formik.touched.occupation && formik.errors.occupation}\n            fullWidth\n          />\n        </Grid>\n        <Grid item style={{ marginTop: 16 }}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={(e)=>{\n                formik.resetForm(e)\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport {\n  FamilyMemberForm,\n}","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContact.js",["380"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popup from \"../../components/Controls/Popup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport {EmergencyContactForm} from \"./EmergencyContactForm\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  iconButtonColor: {\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"#0000ff\",\n    },\n  },\n}));\n\nexport default function EmergencyContact() {\n  const classes = useStyles();\n  const [emergencyContactList, setEmergencyContactList] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [emergencyContactsRecord, setEmergencyContactsRecord] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n\n\n\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const getMuiTheme = () =>\n  createMuiTheme({\n    overrides: {\n      MUIDataTableToolbar: {\n        root: {\n          backgroundColor: \"#50d07d\",\n          color: \"#fff\",\n        },\n        icon: {\n          color: \"#fff\",\n          \"&:hover\": {\n            color: \"#0000ff\",\n          },\n        },\n      },\n      MuiTableCell: {\n        root: {  //This can be referred from Material UI API documentation. \n            padding: '6px',\n        },\n      },\n    },\n    typography: {\n      \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n      \"fontSize\": 14,\n      \"fontWeightLight\": 300,\n      \"fontWeightRegular\": 400,\n      \"fontWeightMedium\": 500\n     }\n  });\n\n  async function fetchEmergencyContact() {\n\n    try {\n      await axios\n        .get(\"/api/profile/emergency/contact/list/\", AxiosHeader)\n        .then((res) => {\n          setEmergencyContactList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const postEmergencyContact = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .post(\"/api/profile/emergency/contact/create/\", values, AxiosHeader)\n        .then((resp) => {\n          setEmergencyContactsRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateEmergencyContact = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .put(`/api/profile/emergency/contact/update/`, values, AxiosHeader)\n        .then((resp) => {\n          setEmergencyContactsRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteFamilyMember = async (values) => {\n    await axios\n      .delete(`/api/profile/emergency/contact/delete/`, {\n        params: { member: values.id },\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n      }) \n      .then((resp) => {\n        setEmergencyContactsRecord(resp.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchEmergencyContact();\n  }, [emergencyContactsRecord]);\n\n  const openInPopup = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"phone\",\n      label: \"Phone\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"relation\",\n      label: \"Relation\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabricType) {\n            if (fabricType.id === tableMeta.rowData[0])\n              return (item = fabricType);\n          });\n          return (\n            <>\n              <Grid container>\n                <Grid item md={6} sm={6} xs={6}>\n                  <Tooltip title={\"Update\"}>\n                    <IconButton\n                      color=\"primary\"\n                      onClick={() => {\n                        openInPopup(item);\n                      }}\n                    >\n                      <EditIcon fontSize=\"default\" />\n                    </IconButton>\n                  </Tooltip>\n                </Grid>\n                <Grid item md={6} sm={6} xs={6}>\n                  <Tooltip title={\"Delete\"}>\n                    <IconButton\n                      onClick={() => {\n                          deleteFamilyMember(item);\n                      }}\n                    >\n                      <DeleteIcon fontSize=\"default\" style={{color: \"red\"}} />\n                    </IconButton>\n                  </Tooltip>\n                </Grid>\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  const addOrEdit = (familyMember, resetForm, setSubmitting) => {\n    if (familyMember.id === 0) postEmergencyContact(familyMember, setSubmitting);\n    else updateEmergencyContact(familyMember, setSubmitting);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    customToolbar: () => {\n      return (\n        <Tooltip title={\"Add New\"}>\n          <IconButton className={classes.iconButtonColor}\n            onClick={() => {\n              setOpenPopup(true);\n              setRecordForEdit(null);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n      );\n    },\n    print: false,\n    download: false,\n  };\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme()}>\n    <div>\n      <MUIDataTable\n        title={\"Emergency Contacts\"}\n        data={emergencyContactList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n      <Popup\n        title=\"Emergency Contact Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <EmergencyContactForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} />\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n    </MuiThemeProvider>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContactForm.js",["381","382"],"import React, { useEffect, useState } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialValues = {\n  id: 0,\n  name: \"x\",\n  phone: \"324\",\n  relation: \"fs\",\n  address: \"ds\",\n};\n\n\n\nconst EmergencyContactForm = (props) => {\n\n  const { addOrEdit, recordForEdit } = props;\n\n  const validationSchema = yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    phone: yup.string().required(\"Phone is required\"),\n    relation: yup.string().required(\"Relation is required\"),\n  });\n\n  const classes = style();\n\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n        addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      formik.setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            error={formik.touched.phone && Boolean(formik.errors.phone)}\n            helperText={formik.touched.phone && formik.errors.phone}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Relation\"\n            name=\"relation\"\n            value={formik.values.relation}\n            onChange={formik.handleChange}\n            error={formik.touched.relation && Boolean(formik.errors.relation)}\n            helperText={formik.touched.relation && formik.errors.relation}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Address\"\n            name=\"address\"\n            value={formik.values.address}\n            onChange={formik.handleChange}\n            error={formik.touched.address && Boolean(formik.errors.address)}\n            helperText={formik.touched.address && formik.errors.address}\n            fullWidth\n          />\n        </Grid>\n        <Grid item style={{ marginTop: 16 }}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={(e)=>{\n                formik.resetForm(e)\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport {\n  EmergencyContactForm,\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/Driver.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/Cleaner.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/OtherForm.js",["383","384"],"import React, { useEffect, useState } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialValues = {\n  id: 0,\n  name: \"x\",\n  age: 0,\n  phone: \"324\",\n  nid: 0,\n  present_address: \"ds\",\n  permanent_address: \"ds\",\n};\n\n\n\nconst OtherForm = (props) => {\n\n  const { addOrEdit, recordForEdit } = props;\n\n  const validationSchema = yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    age: yup.string().required(\"Age is required\"),\n    phone: yup.string().required(\"Phone is required\"),\n    nid: yup.string().required(\"Nid is required\"),\n    present_address: yup.string().required(\"Present Address is required\"),\n    permanent_address: yup.string().required(\"Permanent Address is required\"),\n  });\n\n  const classes = style();\n\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n        addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      formik.setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Age\"\n            name=\"age\"\n            value={formik.values.age}\n            onChange={formik.handleChange}\n            error={formik.touched.age && Boolean(formik.errors.age)}\n            helperText={formik.touched.age && formik.errors.age}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            error={formik.touched.phone && Boolean(formik.errors.phone)}\n            helperText={formik.touched.phone && formik.errors.phone}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Nid\"\n            name=\"nid\"\n            value={formik.values.nid}\n            onChange={formik.handleChange}\n            error={formik.touched.nid && Boolean(formik.errors.nid)}\n            helperText={formik.touched.nid && formik.errors.nid}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Present Address\"\n            name=\"present_address\"\n            value={formik.values.present_address}\n            onChange={formik.handleChange}\n            error={formik.touched.present_address && Boolean(formik.errors.present_address)}\n            helperText={formik.touched.present_address && formik.errors.present_address}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Permanent Address\"\n            name=\"permanent_address\"\n            value={formik.values.permanent_address}\n            onChange={formik.handleChange}\n            error={formik.touched.permanent_address && Boolean(formik.errors.permanent_address)}\n            helperText={formik.touched.permanent_address && formik.errors.permanent_address}\n            fullWidth\n          />\n        </Grid>\n        <Grid item style={{ marginTop: 16 }}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={(e)=>{\n                formik.resetForm(e)\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport {\n  OtherForm,\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/OtherDetail.js",["385","386","387","388","389","390","391"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Popup from \"../../components/Controls/Popup\";\nimport ProfileForm from './ProfileForm'\nimport axios from \"axios\";\nimport {\n  Paper,\n  Grid,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n} from \"@material-ui/core\";\n\nfunction OtherDetail(props) {\n\n  const [openPopup, setOpenPopup] = useState(false);\n  const { record } = props;\n\n\n\n\n\n  return (\n    <div>\n      <Paper\n        elevation={3}\n        square={false}\n        style={{ paddingTop: 6, margin: \"16px\" }}\n      >\n        <div>\n          <Grid container alignItems=\"flex-start\" spacing={0}>\n            <Grid item md={12} sm={12} xs={12}>\n              <Table>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>Name:</TableCell>\n                    <TableCell align=\"right\">{record.name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>AGe:</TableCell>\n                    <TableCell align=\"right\">{record.age}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Phone:</TableCell>\n                    <TableCell align=\"right\">{record.phone}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Nid:</TableCell>\n                    <TableCell align=\"right\">{record.nid}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Present Address:</TableCell>\n                    <TableCell align=\"right\">{record.present_address}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Permanent Address:</TableCell>\n                    <TableCell align=\"right\">{record.permanent_address}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Grid>\n          </Grid>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default OtherDetail;\n","/home/alim/Documents/ju-housing-rent-web/src/pages/tolet/ToLet.js",["392"],"/home/alim/Documents/ju-housing-rent-web/src/pages/tolet/ToLetForm.js",["393"],"import React, { useEffect, useState } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialValues = {\n  id: 0,\n  name: \"x\",\n  type: \"d\",\n  to_let_from: new Date(),\n  square_feet: 12,\n  bedrooms: 2,\n  phone: \"\",\n  rent: 2000,\n  check_in_permission_nid: '',\n  address: \"d\",\n  description: \"s\",\n};\n\nconst verifyNid = (renterNid, value)=> {\n  if(renterNid.length === 0){\n    return false;\n  }else{\n    for (let i=0; i< renterNid.length; i ++){\n      if(parseInt(renterNid[i].nid) === parseInt(value)){\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n\n\nconst ToLetForm = (props) => {\n\n  const { addOrEdit, recordForEdit } = props;\n  const [renterNid, setRenterNid] = useState([]);\n\n\n  const validationSchema = yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    type: yup.string().required(\"Type is required\"),\n    square_feet: yup.string().required(\"Square Feet is required\"),\n    bedrooms: yup.string().required(\"Bedroom is required\"),\n    rent: yup.string().required(\"Rent is required\"),\n    phone: yup\n    .string().required(\"Phone is required\")\n    .nullable(),\n    address: yup.string().required(\"Address is required\"),\n    check_in_permission_nid: yup\n    .number()\n    .integer()\n    .nullable()\n    .test(\"Not found\", \"NID not found.\", (value) => {\n      if(parseInt(value) > 0){\n        return verifyNid(renterNid, value)\n      }\n      return true\n    }),\n  });\n\n  const classes = style();\n\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n        addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n\n  useEffect(() => {\n    async function getRenterNid() {\n      const response = await fetch(\"/api/renter/nid/list/\");\n      const body = await response.json();\n      setRenterNid(body);\n    }\n    getRenterNid();\n\n    if (recordForEdit != null)\n      formik.setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Type\"\n            name=\"type\"\n            value={formik.values.type}\n            onChange={formik.handleChange}\n            error={formik.touched.type && Boolean(formik.errors.type)}\n            helperText={formik.touched.type && formik.errors.type}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.DatePicker\n            label=\"To Let Date\"\n            name=\"to_let_from\"\n            value={formik.values.to_let_from}\n            minDate={new Date()}\n            // minDate={new Date().setDate(new Date().getDate() - 7)}\n            maxDate={new Date().setDate(new Date().getDate() + 90)}\n            placeholder=\"To Let Date\"\n            onChange={value => {\n              formik.setFieldValue(\"to_let_from\", value)\n            }}\n            onBlur={formik.handleBlur}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            error={formik.touched.phone && Boolean(formik.errors.phone)}\n            helperText={formik.touched.phone && formik.errors.phone}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Square Feet\"\n            name=\"square_feet\"\n            value={formik.values.square_feet}\n            onChange={formik.handleChange}\n            error={formik.touched.square_feet && Boolean(formik.errors.square_feet)}\n            helperText={formik.touched.square_feet && formik.errors.square_feet}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Bedrooms\"\n            name=\"bedrooms\"\n            value={formik.values.bedrooms}\n            onChange={formik.handleChange}\n            error={formik.touched.bedrooms && Boolean(formik.errors.bedrooms)}\n            helperText={formik.touched.bedrooms && formik.errors.bedrooms}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Rent\"\n            name=\"rent\"\n            value={formik.values.rent}\n            onChange={formik.handleChange}\n            error={formik.touched.rent && Boolean(formik.errors.rent)}\n            helperText={formik.touched.rent && formik.errors.rent}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Check in Renter NID\"\n            name=\"check_in_permission_nid\"\n            value={formik.values.check_in_permission_nid}\n            onChange={formik.handleChange}\n            type='number'\n            error={formik.touched.check_in_permission_nid && Boolean(formik.errors.check_in_permission_nid)}\n            helperText={formik.touched.check_in_permission_nid && formik.errors.check_in_permission_nid}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Address\"\n            name=\"address\"\n            value={formik.values.address}\n            onChange={formik.handleChange}\n            error={formik.touched.address && Boolean(formik.errors.address)}\n            helperText={formik.touched.address && formik.errors.address}\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Description\"\n            name=\"description\"\n            value={formik.values.description}\n            onChange={formik.handleChange}\n            error={formik.touched.description && Boolean(formik.errors.description)}\n            helperText={formik.touched.description && formik.errors.description}\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item style={{ marginTop: 16 }}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={(e)=>{\n                formik.resetForm(e)\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport {\n  ToLetForm,\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/tolet/ToLetDetail.js",["394","395","396"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Paper,\n  Grid,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n} from \"@material-ui/core\";\n\nfunction ToLetDetail(props) {\n\n  const [openPopup, setOpenPopup] = useState(false);\n  const { record } = props;\n\n\n\n\n\n  return (\n    <div>\n      <Paper\n        elevation={3}\n        square={false}\n        style={{ paddingTop: 6, margin: \"16px\" }}\n      >\n        <div>\n          <Grid container alignItems=\"flex-start\" spacing={0}>\n            <Grid item md={12} sm={12} xs={12}>\n              <Table>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>Name:</TableCell>\n                    <TableCell align=\"right\">{record.name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Type:</TableCell>\n                    <TableCell align=\"right\">{record.type}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>SF:</TableCell>\n                    <TableCell align=\"right\">{record.square_feet}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Bedroom:</TableCell>\n                    <TableCell align=\"right\">{record.bedrooms}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Rent:</TableCell>\n                    <TableCell align=\"right\">{record.rent}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Address:</TableCell>\n                    <TableCell align=\"right\">{record.address}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Description:</TableCell>\n                    <TableCell align=\"right\">{record.description}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Check in Renter:</TableCell>\n                    <TableCell align=\"right\">{record.check_in_renter_name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Check in Date:</TableCell>\n                    <TableCell align=\"right\">{record.check_in}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Check out Renter:</TableCell>\n                    <TableCell align=\"right\">{record.check_out_renter_name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Check out Date:</TableCell>\n                    <TableCell align=\"right\">{record.check_out}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Description:</TableCell>\n                    <TableCell align=\"right\">{record.description}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Grid>\n          </Grid>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default ToLetDetail;\n","/home/alim/Documents/ju-housing-rent-web/src/pages/tolet/CheckInOut.js",["397"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popup from \"../../components/Controls/Popup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles } from \"@material-ui/core\";\nimport ToLetDetail from \"./ToLetDetail\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { CheckInForm } from \"./CheckInForm\";\nimport BreadCrumb from \"../../components/BreadCrumb/BreadCrumb\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  iconButtonColor: {\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"#0000ff\",\n    },\n  },\n}));\n\nexport default function CheckInOut() {\n  const classes = useStyles();\n\n  const user_type = localStorage.getItem(\"user_type\")\n\n  const [toLetList, setToLetList] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [toLetRecord, setToLetRecord] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [openPopup1, setOpenPopup2] = useState(false);\n\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const getMuiTheme = () =>\n  createMuiTheme({\n    overrides: {\n      MUIDataTableToolbar: {\n        root: {\n          backgroundColor: \"#50d07d\",\n          color: \"#fff\",\n        },\n        icon: {\n          color: \"#fff\",\n          \"&:hover\": {\n            color: \"#0000ff\",\n          },\n        },\n      },\n      MuiTableCell: {\n        root: {  //This can be referred from Material UI API documentation. \n            padding: '6px',\n        },\n      },\n    },\n    typography: {\n      \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n      \"fontSize\": 14,\n      \"fontWeightLight\": 300,\n      \"fontWeightRegular\": 400,\n      \"fontWeightMedium\": 500\n     }\n  });\n\n  const BootstrapTooltip = styled(({ className, ...props }) => (\n    <Tooltip {...props} arrow classes={{ popper: className }} />\n  ))(({ theme }) => ({\n    [`& .${tooltipClasses.arrow}`]: {\n      // color: theme.palette.common.black,\n      color: 'red',\n    },\n    [`& .${tooltipClasses.tooltip}`]: {\n      // backgroundColor: theme.palette.common.black,\n      color: 'white',\n      backgroundColor: 'rgba(139,0,0, 0.87)',\n    },\n  }));\n\n  async function fetchToLet() {\n\n    try {\n      await axios\n        .get(\"/api/to/let/list/\", AxiosHeader)\n        .then((res) => {\n          setToLetList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const postToLet = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .post(\"/api/to/let/create/\", values, AxiosHeader)\n        .then((resp) => {\n          setToLetRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateToLet = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .put(`/api/to/let/update/`, values, AxiosHeader)\n        .then((resp) => {\n          setToLetRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateToLetStatus = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .put(`/api/to/let/status/update/${values.id}/`, values, AxiosHeader)\n        .then((resp) => {\n          setToLetRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteToLet = async (values) => {\n    await axios\n      .delete(`/api/to/let/delete/`, {\n        params: { id: values.id},\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n      }) \n      .then((resp) => {\n        setToLetRecord(resp.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchToLet();\n  }, [toLetRecord]);\n\n  const openInPopup = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const openInPopup2 = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup2(true);\n  };\n\n  let columns = ''\n\n  const owner_columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"code\",\n      label: \"Code\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"type\",\n      label: \"Type\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"square_feet\",\n      label: \"Square Feet\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"bedrooms\",\n      label: \"Bedrooms\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"rent\",\n      label: \"Rent\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"description\",\n      label: \"Description\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_in_renter_name\",\n      label: \"Check in Renter\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_in\",\n      label: \"Check in Date\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_out_renter_name\",\n      label: \"Check out Renter\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_out\",\n      label: \"Check out Date\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (toLet) {\n            if (toLet.id === tableMeta.rowData[0])\n              return (item = toLet);\n          });\n          let to_let = JSON.parse(JSON.stringify(item))\n          return (\n            <>\n              <Grid container spacing={1}>\n                <Grid item md={3} sm={6} xs={6}>\n                  <Tooltip title={\"Update\"} placement=\"bottom\" arrow>\n                    <IconButton\n                      color=\"primary\"\n                      onClick={() => {\n                        openInPopup(item);\n                      }}\n                    >\n                      <EditIcon fontSize=\"default\" />\n                    </IconButton>\n                  </Tooltip>\n                </Grid>\n                <Grid item md={3} sm={6} xs={6}>\n                  <Tooltip title={\"Status\"} placement=\"bottom\" arrow>\n                    <IconButton\n                      onClick={() => {\n                        updateToLetStatus(item);\n                      }}\n                    >\n                      {\n                        to_let['status'] === 'True' ? <CheckIcon fontSize=\"default\" style={{color: \"green\"}} /> : <CloseIcon fontSize=\"default\" style={{color: \"red\"}} />\n                      }\n                    </IconButton>\n                  </Tooltip>\n                </Grid>\n                <Grid item md={3} sm={6} xs={6}>\n                  <Tooltip title={\"Detail\"} placement=\"bottom\" arrow>\n                    <IconButton\n                      onClick={() => {\n                        openInPopup2(item);\n                      }}\n                    >\n                      <DetailsIcon fontSize=\"default\" style={{color: \"violet\"}}/>\n                    </IconButton>\n                  </Tooltip>\n                </Grid>\n                <Grid item md={3} sm={6} xs={6}>\n                  <BootstrapTooltip title={\"Delete\"} placement=\"bottom\" disableFocusListener disableTouchListener arrow>\n                    <IconButton\n                      onClick={() => {\n                        deleteToLet(item);\n                      }}\n                    >\n                      <DeleteIcon fontSize=\"default\" style={{color: \"red\"}} />\n                    </IconButton>\n                  </BootstrapTooltip>\n                </Grid>\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n  ];\n  const renter_columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"type\",\n      label: \"Type\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"square_feet\",\n      label: \"Square Feet\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"bedrooms\",\n      label: \"Bedrooms\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"rent\",\n      label: \"Rent\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"description\",\n      label: \"Description\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (toLet) {\n            if (toLet.id === tableMeta.rowData[0])\n              return (item = toLet);\n          });\n          return (\n            <>\n              <Grid container>\n                <Grid item md={12} sm={12} xs={12}>\n                  <Tooltip title={\"Detail\"}>\n                    <IconButton\n                      onClick={() => {\n                        openInPopup2(item);\n                      }}\n                    >\n                      <DetailsIcon fontSize=\"default\"  style={{color: \"violet\"}}/>\n                    </IconButton>\n                  </Tooltip>\n                </Grid>\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  if(user_type === 'Owner'){\n    columns = owner_columns\n  }else{\n    columns = renter_columns\n  }\n\n  const addOrEdit = (toLet, resetForm, setSubmitting) => {\n    if (toLet.id === 0) postToLet(toLet, setSubmitting);\n    else updateToLet(toLet, setSubmitting);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    customToolbar: () => {\n      return (\n        <>\n        {\n          user_type === 'Owner' ? <Tooltip title={\"Add New\"}>\n          <IconButton className={classes.iconButtonColor}\n            onClick={() => {\n              setOpenPopup(true);\n              setRecordForEdit(null);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip> : ''\n        }\n        </>\n      );\n    },\n    print: false,\n    download: false,\n  };\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme()}>\n      <BreadCrumb routeSegments={[{ name: \"Check In\" }]} />\n    <div>\n      <MUIDataTable\n        title={\"Check In\"}\n        data={toLetList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n      <Popup\n        title=\"Check In Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <CheckInForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} />\n      </Popup>\n      <Popup\n        title=\"Check In Detail\"\n        openPopup={openPopup1}\n        setOpenPopup={setOpenPopup2}\n      >\n        <ToLetDetail record={recordForEdit} />\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n    </MuiThemeProvider>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/tolet/CheckInForm.js",["398","399","400"],"import React, { useEffect, useState } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\n\nvar initialValues = {\n  id: 0,\n  to_let_from: '',\n  remark: '',\n  code: '',\n};\n\n\nconst CheckInForm = (props) => {\n\n  const { addOrEditCheckIn, recordForEdit } = props;\n\n  const validationSchema = yup.object().shape({\n    to_let_from: yup.string().required(\"Date is required\"),\n  });\n\n  const classes = style();\n\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      console.log(values)\n        setSubmitting(true);\n        addOrEditCheckIn(values, resetForm, setSubmitting);\n    },\n  });\n\n\n  useEffect(() => {\n    if (recordForEdit != null){\n      formik.setFieldValue(\"to_let_from\", recordForEdit[\"to_let_from\"]);\n      formik.setFieldValue(\"code\", recordForEdit[\"code\"]);\n    }\n  }, [recordForEdit]);\n\n\n  return (\n    <>\n      <Form onSubmit={formik.handleSubmit}>\n          <Grid item md={12} sm={12} xs={12}>\n            <Controls.DatePicker\n              label=\"Check in date\"\n              name=\"to_let_from\"\n              value={formik.values.to_let_from}\n              minDate={recordForEdit !== null ? recordForEdit['to_let_from'] : new Date()}\n              maxDate={new Date().setDate(new Date().getDate() + 60)}\n              placeholder=\"Check in date\"\n              onChange={value => {\n                formik.setFieldValue(\"to_let_from\", value)\n              }}\n              onBlur={formik.handleBlur}\n              fullWidth\n            />\n          </Grid>\n          <Grid item md={12} sm={12} xs={12}>\n            <Controls.Input\n              label=\"Remark\"\n              name=\"remark\"\n              id=\"remark\"\n              value={formik.values.remark}\n              onChange={formik.handleChange}\n              error={formik.touched.remark && Boolean(formik.errors.remark)}\n              helperText={formik.touched.remark && formik.errors.remark}\n              multiline\n              rows={2}\n              fullWidth\n            />\n          </Grid>\n          {recordForEdit !== null ? parseInt(recordForEdit[\"check_in_permission_nid\"]) === parseInt(localStorage.getItem(\"nid\")) ?\n          <Grid item md={12} sm={12} xs={12} alignItems=\"center\">\n            <div className={classes.wrapper}>\n              <Controls.Button\n                type=\"submit\"\n                disabled={formik.isSubmitting}\n                text=\"Submit\"\n              />\n            </div>\n          </Grid> : <p style={{color: 'red'}}>You have no check in permission. Please contact with the owner.</p> : ''}\n      </Form>\n    </>\n  );\n};\n\nexport {\n  CheckInForm,\n}\n",{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","severity":1,"message":"406","line":1,"column":10,"nodeType":"407","messageId":"408","endLine":1,"endColumn":22},{"ruleId":"409","severity":1,"message":"410","line":241,"column":17,"nodeType":"411","messageId":"412","endLine":241,"endColumn":87,"fix":"413"},{"ruleId":"414","severity":1,"message":"415","line":299,"column":53,"nodeType":"416","messageId":"417","endLine":299,"endColumn":54},{"ruleId":"414","severity":1,"message":"415","line":475,"column":56,"nodeType":"416","messageId":"417","endLine":475,"endColumn":57},{"ruleId":"405","severity":1,"message":"418","line":22,"column":10,"nodeType":"407","messageId":"408","endLine":22,"endColumn":16},{"ruleId":"419","severity":1,"message":"420","line":79,"column":6,"nodeType":"421","endLine":79,"endColumn":20,"suggestions":"422"},{"ruleId":"405","severity":1,"message":"423","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":25},{"ruleId":"409","severity":1,"message":"410","line":28,"column":13,"nodeType":"411","messageId":"412","endLine":28,"endColumn":88,"fix":"424"},{"ruleId":"405","severity":1,"message":"425","line":4,"column":11,"nodeType":"407","messageId":"408","endLine":4,"endColumn":19},{"ruleId":"401","replacedBy":"426"},{"ruleId":"403","replacedBy":"427"},{"ruleId":"401","replacedBy":"428"},{"ruleId":"403","replacedBy":"429"},{"ruleId":"419","severity":1,"message":"430","line":122,"column":6,"nodeType":"421","endLine":122,"endColumn":16,"suggestions":"431"},{"ruleId":"419","severity":1,"message":"432","line":147,"column":6,"nodeType":"421","endLine":147,"endColumn":27,"suggestions":"433"},{"ruleId":"405","severity":1,"message":"434","line":1,"column":28,"nodeType":"407","messageId":"408","endLine":1,"endColumn":36},{"ruleId":"419","severity":1,"message":"430","line":66,"column":6,"nodeType":"421","endLine":66,"endColumn":21,"suggestions":"435"},{"ruleId":"419","severity":1,"message":"436","line":147,"column":6,"nodeType":"421","endLine":147,"endColumn":31,"suggestions":"437"},{"ruleId":"405","severity":1,"message":"434","line":1,"column":28,"nodeType":"407","messageId":"408","endLine":1,"endColumn":36},{"ruleId":"419","severity":1,"message":"430","line":64,"column":6,"nodeType":"421","endLine":64,"endColumn":21,"suggestions":"438"},{"ruleId":"405","severity":1,"message":"434","line":1,"column":28,"nodeType":"407","messageId":"408","endLine":1,"endColumn":36},{"ruleId":"419","severity":1,"message":"430","line":69,"column":6,"nodeType":"421","endLine":69,"endColumn":21,"suggestions":"439"},{"ruleId":"405","severity":1,"message":"440","line":1,"column":27,"nodeType":"407","messageId":"408","endLine":1,"endColumn":36},{"ruleId":"405","severity":1,"message":"441","line":2,"column":8,"nodeType":"407","messageId":"408","endLine":2,"endColumn":14},{"ruleId":"405","severity":1,"message":"442","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":13},{"ruleId":"405","severity":1,"message":"443","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":19},{"ruleId":"405","severity":1,"message":"444","line":5,"column":8,"nodeType":"407","messageId":"408","endLine":5,"endColumn":13},{"ruleId":"405","severity":1,"message":"445","line":17,"column":10,"nodeType":"407","messageId":"408","endLine":17,"endColumn":19},{"ruleId":"405","severity":1,"message":"446","line":17,"column":21,"nodeType":"407","messageId":"408","endLine":17,"endColumn":33},{"ruleId":"419","severity":1,"message":"447","line":233,"column":6,"nodeType":"421","endLine":233,"endColumn":19,"suggestions":"448"},{"ruleId":"419","severity":1,"message":"430","line":108,"column":6,"nodeType":"421","endLine":108,"endColumn":21,"suggestions":"449"},{"ruleId":"405","severity":1,"message":"440","line":1,"column":27,"nodeType":"407","messageId":"408","endLine":1,"endColumn":36},{"ruleId":"405","severity":1,"message":"445","line":13,"column":10,"nodeType":"407","messageId":"408","endLine":13,"endColumn":19},{"ruleId":"405","severity":1,"message":"446","line":13,"column":21,"nodeType":"407","messageId":"408","endLine":13,"endColumn":33},{"ruleId":"419","severity":1,"message":"447","line":184,"column":6,"nodeType":"421","endLine":184,"endColumn":19,"suggestions":"450"},{"ruleId":"405","severity":1,"message":"434","line":1,"column":28,"nodeType":"407","messageId":"408","endLine":1,"endColumn":36},{"ruleId":"405","severity":1,"message":"451","line":9,"column":3,"nodeType":"407","messageId":"408","endLine":9,"endColumn":19},{"ruleId":"419","severity":1,"message":"430","line":62,"column":6,"nodeType":"421","endLine":62,"endColumn":21,"suggestions":"452"},"no-native-reassign",["453"],"no-negated-in-lhs",["454"],"no-unused-vars","'initialState' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"455","text":"456"},"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'notify' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProfile'. Either include it or remove the dependency array.","ArrayExpression",["457"],"'ProfileUpdateForm' is defined but never used.",{"range":"458","text":"456"},"'HomeIcon' is defined but never used.",["453"],["454"],["453"],["454"],"React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["459"],"React Hook useEffect has a missing dependency: 'fetchFamilyMembers'. Either include it or remove the dependency array.",["460"],"'useState' is defined but never used.",["461"],"React Hook useEffect has a missing dependency: 'fetchEmergencyContact'. Either include it or remove the dependency array.",["462"],["463"],["464"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'Popup' is defined but never used.","'ProfileForm' is defined but never used.","'axios' is defined but never used.","'openPopup' is assigned a value but never used.","'setOpenPopup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchToLet'. Either include it or remove the dependency array.",["465"],["466"],["467"],"'CircularProgress' is defined but never used.",["468"],"no-global-assign","no-unsafe-negation",[6344,6344]," rel=\"noreferrer\"",{"desc":"469","fix":"470"},[843,843],{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"475","fix":"479"},{"desc":"475","fix":"480"},{"desc":"481","fix":"482"},{"desc":"475","fix":"483"},{"desc":"481","fix":"484"},{"desc":"475","fix":"485"},"Update the dependencies array to be: [fetchProfile, updateSignal]",{"range":"486","text":"487"},"Update the dependencies array to be: [formik, userData]",{"range":"488","text":"489"},"Update the dependencies array to be: [familyMembersRecord, fetchFamilyMembers]",{"range":"490","text":"491"},"Update the dependencies array to be: [formik, recordForEdit]",{"range":"492","text":"493"},"Update the dependencies array to be: [emergencyContactsRecord, fetchEmergencyContact]",{"range":"494","text":"495"},{"range":"496","text":"493"},{"range":"497","text":"493"},"Update the dependencies array to be: [fetchToLet, toLetRecord]",{"range":"498","text":"499"},{"range":"500","text":"493"},{"range":"501","text":"499"},{"range":"502","text":"493"},[1804,1818],"[fetchProfile, updateSignal]",[2963,2973],"[formik, userData]",[3782,3803],"[familyMembersRecord, fetchFamilyMembers]",[1397,1412],"[formik, recordForEdit]",[3868,3893],"[emergencyContactsRecord, fetchEmergencyContact]",[1371,1386],[1592,1607],[6079,6092],"[fetchToLet, toLetRecord]",[2475,2490],[4866,4879],[1352,1367]]