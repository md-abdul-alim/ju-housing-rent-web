[{"/home/alim/Documents/ju-housing-rent-web/src/index.js":"1","/home/alim/Documents/ju-housing-rent-web/src/serviceWorker.js":"2","/home/alim/Documents/ju-housing-rent-web/src/components/App.js":"3","/home/alim/Documents/ju-housing-rent-web/src/context/LayoutContext.js":"4","/home/alim/Documents/ju-housing-rent-web/src/context/UserContext.js":"5","/home/alim/Documents/ju-housing-rent-web/src/themes/index.js":"6","/home/alim/Documents/ju-housing-rent-web/src/context/index.js":"7","/home/alim/Documents/ju-housing-rent-web/src/components/Layout/Layout.js":"8","/home/alim/Documents/ju-housing-rent-web/src/pages/login/Login.js":"9","/home/alim/Documents/ju-housing-rent-web/src/pages/error/Error.js":"10","/home/alim/Documents/ju-housing-rent-web/src/themes/default.js":"11","/home/alim/Documents/ju-housing-rent-web/src/context/context.js":"12","/home/alim/Documents/ju-housing-rent-web/src/context/reducer.js":"13","/home/alim/Documents/ju-housing-rent-web/src/pages/error/styles.js":"14","/home/alim/Documents/ju-housing-rent-web/src/pages/login/styles.js":"15","/home/alim/Documents/ju-housing-rent-web/src/components/SnackBar/Notification.js":"16","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Controls.js":"17","/home/alim/Documents/ju-housing-rent-web/src/components/Form/useForm.js":"18","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileDetail.js":"19","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/Profile.js":"20","/home/alim/Documents/ju-housing-rent-web/src/pages/reports/FindMachinePosition.js":"21","/home/alim/Documents/ju-housing-rent-web/src/pages/reports/MachineHistory.js":"22","/home/alim/Documents/ju-housing-rent-web/src/pages/units/UnitForm.js":"23","/home/alim/Documents/ju-housing-rent-web/src/pages/units/Units.js":"24","/home/alim/Documents/ju-housing-rent-web/src/pages/machines/MachineDetail.js":"25","/home/alim/Documents/ju-housing-rent-web/src/pages/machines/Machines.js":"26","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/Line.js":"27","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/TransferMachineFromLine.js":"28","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/ProductionApproveMachineToLine.js":"29","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/ApproveTransferMachineFromLine.js":"30","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/MaintenanceApproveMachineToLine.js":"31","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/AddMachineToLine.js":"32","/home/alim/Documents/ju-housing-rent-web/src/components/Layout/styles.js":"33","/home/alim/Documents/ju-housing-rent-web/src/context/action.js":"34","/home/alim/Documents/ju-housing-rent-web/src/components/Footer/Footer.js":"35","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/Charts.js":"36","/home/alim/Documents/ju-housing-rent-web/src/pages/maps/Maps.js":"37","/home/alim/Documents/ju-housing-rent-web/src/pages/tables/Tables.js":"38","/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/Notifications.js":"39","/home/alim/Documents/ju-housing-rent-web/src/pages/typography/Typography.js":"40","/home/alim/Documents/ju-housing-rent-web/src/pages/icons/Icons.js":"41","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomImage.js":"42","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/ActionButton.js":"43","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Button.js":"44","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Select.js":"45","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Autocomplete.js":"46","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomAutocomplete.js":"47","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/Sidebar.js":"48","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/DatePicker.js":"49","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/Dashboard.js":"50","/home/alim/Documents/ju-housing-rent-web/src/components/Header/Header.js":"51","/home/alim/Documents/ju-housing-rent-web/src/pages/reports/MachineHistoryForm.js":"52","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Popup.js":"53","/home/alim/Documents/ju-housing-rent-web/src/pages/reports/FindMachinePositionForm.js":"54","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/AddMachineToLineByBarcodeForm.js":"55","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/AddMachineToLineForm.js":"56","/home/alim/Documents/ju-housing-rent-web/src/components/FullScreenPopup/FullScreenPopup.js":"57","/home/alim/Documents/ju-housing-rent-web/src/components/Barcode/BarcodeScanner.js":"58","/home/alim/Documents/ju-housing-rent-web/src/components/FormDialog/FormDialog.js":"59","/home/alim/Documents/ju-housing-rent-web/src/utils/AxiosHeader.js":"60","/home/alim/Documents/ju-housing-rent-web/src/components/BreadCrumb/BreadCrumb.jsx":"61","/home/alim/Documents/ju-housing-rent-web/src/pages/typography/styles.js":"62","/home/alim/Documents/ju-housing-rent-web/src/components/Wrappers/Wrappers.js":"63","/home/alim/Documents/ju-housing-rent-web/src/components/Widget/Widget.js":"64","/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/PageTitle.js":"65","/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/styles.js":"66","/home/alim/Documents/ju-housing-rent-web/src/pages/icons/styles.js":"67","/home/alim/Documents/ju-housing-rent-web/src/components/Header/styles.js":"68","/home/alim/Documents/ju-housing-rent-web/src/components/Notification/Notification.js":"69","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/mock.js":"70","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/styles.js":"71","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/Table/Table.js":"72","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/BigStat.js":"73","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/Dot.js":"74","/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/UserAvatar.js":"75","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"76","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/styles.js":"77","/home/alim/Documents/ju-housing-rent-web/src/pages/maps/styles.js":"78","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexHeatmap.js":"79","/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/styles.js":"80","/home/alim/Documents/ju-housing-rent-web/src/components/Widget/styles.js":"81","/home/alim/Documents/ju-housing-rent-web/src/components/Notification/styles.js":"82","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/styles.js":"83","/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/styles.js":"84","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/styles.js":"85","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexLineChart.js":"86","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Upload.js":"87","/home/alim/Documents/ju-housing-rent-web/src/pages/machines/MachineForm.js":"88","/home/alim/Documents/ju-housing-rent-web/src/components/Barcode/FabricBarcode.js":"89","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileUpdateForm.js":"90","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileForm.js":"91","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Input.js":"92","/home/alim/Documents/ju-housing-rent-web/src/components/Table/useTable.js":"93","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMember.js":"94","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMemberForm.js":"95","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContact.js":"96","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContactForm.js":"97","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HouseCleanerForm.js":"98","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/DriverForm.js":"99","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HomeDriver.js":"100","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HomeCleaner.js":"101"},{"size":869,"mtime":1629456103812,"results":"102","hashOfConfig":"103"},{"size":4948,"mtime":1629474813902,"results":"104","hashOfConfig":"103"},{"size":1888,"mtime":1655317064571,"results":"105","hashOfConfig":"103"},{"size":1392,"mtime":1629456103812,"results":"106","hashOfConfig":"103"},{"size":3018,"mtime":1654055454950,"results":"107","hashOfConfig":"103"},{"size":502,"mtime":1629456103820,"results":"108","hashOfConfig":"103"},{"size":256,"mtime":1649307452073,"results":"109","hashOfConfig":"103"},{"size":3985,"mtime":1655540907094,"results":"110","hashOfConfig":"103"},{"size":19010,"mtime":1655560159945,"results":"111","hashOfConfig":"103"},{"size":1571,"mtime":1647144516113,"results":"112","hashOfConfig":"103"},{"size":2987,"mtime":1629456103820,"results":"113","hashOfConfig":"103"},{"size":1007,"mtime":1649307526181,"results":"114","hashOfConfig":"103"},{"size":691,"mtime":1649307270013,"results":"115","hashOfConfig":"103"},{"size":1334,"mtime":1629456103812,"results":"116","hashOfConfig":"103"},{"size":3636,"mtime":1655312406847,"results":"117","hashOfConfig":"103"},{"size":960,"mtime":1629456103812,"results":"118","hashOfConfig":"103"},{"size":483,"mtime":1646649743943,"results":"119","hashOfConfig":"103"},{"size":738,"mtime":1629456103808,"results":"120","hashOfConfig":"103"},{"size":4775,"mtime":1655620140347,"results":"121","hashOfConfig":"103"},{"size":1247,"mtime":1655619951191,"results":"122","hashOfConfig":"103"},{"size":4802,"mtime":1654055454950,"results":"123","hashOfConfig":"103"},{"size":4938,"mtime":1654064771349,"results":"124","hashOfConfig":"103"},{"size":3795,"mtime":1649306696492,"results":"125","hashOfConfig":"103"},{"size":6020,"mtime":1654055454950,"results":"126","hashOfConfig":"103"},{"size":7958,"mtime":1654055454950,"results":"127","hashOfConfig":"103"},{"size":9627,"mtime":1654064701557,"results":"128","hashOfConfig":"103"},{"size":6983,"mtime":1654062545551,"results":"129","hashOfConfig":"103"},{"size":3811,"mtime":1649306675040,"results":"130","hashOfConfig":"103"},{"size":4903,"mtime":1654055454950,"results":"131","hashOfConfig":"103"},{"size":4682,"mtime":1649306675040,"results":"132","hashOfConfig":"103"},{"size":4936,"mtime":1654055454950,"results":"133","hashOfConfig":"103"},{"size":6603,"mtime":1654055454950,"results":"134","hashOfConfig":"103"},{"size":1003,"mtime":1646649743947,"results":"135","hashOfConfig":"103"},{"size":695,"mtime":1653368746127,"results":"136","hashOfConfig":"103"},{"size":1039,"mtime":1655618967077,"results":"137","hashOfConfig":"103"},{"size":5556,"mtime":1629456103812,"results":"138","hashOfConfig":"103"},{"size":971,"mtime":1629456103816,"results":"139","hashOfConfig":"103"},{"size":2082,"mtime":1629456103816,"results":"140","hashOfConfig":"103"},{"size":13470,"mtime":1629456103816,"results":"141","hashOfConfig":"103"},{"size":4506,"mtime":1629456103816,"results":"142","hashOfConfig":"103"},{"size":377833,"mtime":1629456103812,"results":"143","hashOfConfig":"103"},{"size":267,"mtime":1646649743943,"results":"144","hashOfConfig":"103"},{"size":838,"mtime":1629456103808,"results":"145","hashOfConfig":"103"},{"size":708,"mtime":1650789247649,"results":"146","hashOfConfig":"103"},{"size":956,"mtime":1629456103808,"results":"147","hashOfConfig":"103"},{"size":789,"mtime":1646649743943,"results":"148","hashOfConfig":"103"},{"size":908,"mtime":1646649743943,"results":"149","hashOfConfig":"103"},{"size":4541,"mtime":1655614473304,"results":"150","hashOfConfig":"103"},{"size":834,"mtime":1646649743943,"results":"151","hashOfConfig":"103"},{"size":9487,"mtime":1655543555089,"results":"152","hashOfConfig":"103"},{"size":8414,"mtime":1649306103513,"results":"153","hashOfConfig":"103"},{"size":5589,"mtime":1654064871217,"results":"154","hashOfConfig":"103"},{"size":1353,"mtime":1629456103808,"results":"155","hashOfConfig":"103"},{"size":3006,"mtime":1654055454950,"results":"156","hashOfConfig":"103"},{"size":4364,"mtime":1654059797145,"results":"157","hashOfConfig":"103"},{"size":5402,"mtime":1654059764593,"results":"158","hashOfConfig":"103"},{"size":2256,"mtime":1629456103808,"results":"159","hashOfConfig":"103"},{"size":1071,"mtime":1654055454950,"results":"160","hashOfConfig":"103"},{"size":1537,"mtime":1629456103808,"results":"161","hashOfConfig":"103"},{"size":211,"mtime":1654055454950,"results":"162","hashOfConfig":"103"},{"size":1425,"mtime":1629456103808,"results":"163","hashOfConfig":"103"},{"size":374,"mtime":1629456103816,"results":"164","hashOfConfig":"103"},{"size":3790,"mtime":1629456103812,"results":"165","hashOfConfig":"103"},{"size":2493,"mtime":1646649743951,"results":"166","hashOfConfig":"103"},{"size":427,"mtime":1629456103812,"results":"167","hashOfConfig":"103"},{"size":1858,"mtime":1629456103816,"results":"168","hashOfConfig":"103"},{"size":780,"mtime":1629456103812,"results":"169","hashOfConfig":"103"},{"size":3868,"mtime":1629456103812,"results":"170","hashOfConfig":"103"},{"size":3296,"mtime":1629456103812,"results":"171","hashOfConfig":"103"},{"size":4105,"mtime":1629456103812,"results":"172","hashOfConfig":"103"},{"size":3028,"mtime":1646649743951,"results":"173","hashOfConfig":"103"},{"size":1274,"mtime":1629456103812,"results":"174","hashOfConfig":"103"},{"size":4039,"mtime":1629456103812,"results":"175","hashOfConfig":"103"},{"size":862,"mtime":1629456103812,"results":"176","hashOfConfig":"103"},{"size":593,"mtime":1629456103812,"results":"177","hashOfConfig":"103"},{"size":4574,"mtime":1629456103812,"results":"178","hashOfConfig":"103"},{"size":1304,"mtime":1629456103812,"results":"179","hashOfConfig":"103"},{"size":171,"mtime":1629456103816,"results":"180","hashOfConfig":"103"},{"size":1794,"mtime":1629456103812,"results":"181","hashOfConfig":"103"},{"size":462,"mtime":1629456103812,"results":"182","hashOfConfig":"103"},{"size":969,"mtime":1629456103812,"results":"183","hashOfConfig":"103"},{"size":993,"mtime":1629456103812,"results":"184","hashOfConfig":"103"},{"size":1027,"mtime":1629456103812,"results":"185","hashOfConfig":"103"},{"size":276,"mtime":1629456103812,"results":"186","hashOfConfig":"103"},{"size":1440,"mtime":1629456103812,"results":"187","hashOfConfig":"103"},{"size":1328,"mtime":1629456103812,"results":"188","hashOfConfig":"103"},{"size":1341,"mtime":1629456103808,"results":"189","hashOfConfig":"103"},{"size":14617,"mtime":1654055454950,"results":"190","hashOfConfig":"103"},{"size":1298,"mtime":1654055454950,"results":"191","hashOfConfig":"103"},{"size":5120,"mtime":1646649743963,"results":"192","hashOfConfig":"103"},{"size":10884,"mtime":1655550387389,"results":"193","hashOfConfig":"103"},{"size":425,"mtime":1646649743943,"results":"194","hashOfConfig":"103"},{"size":3868,"mtime":1629456103812,"results":"195","hashOfConfig":"103"},{"size":6349,"mtime":1655620280842,"results":"196","hashOfConfig":"103"},{"size":4088,"mtime":1655616283837,"results":"197","hashOfConfig":"103"},{"size":6373,"mtime":1655620274018,"results":"198","hashOfConfig":"103"},{"size":4096,"mtime":1655616242697,"results":"199","hashOfConfig":"103"},{"size":4088,"mtime":1655616319805,"results":"200","hashOfConfig":"103"},{"size":4076,"mtime":1655616233625,"results":"201","hashOfConfig":"103"},{"size":6325,"mtime":1655620270778,"results":"202","hashOfConfig":"103"},{"size":6346,"mtime":1655620268634,"results":"203","hashOfConfig":"103"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},"1f2oyhz",{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"223","usedDeprecatedRules":"206"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"206"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"206"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"206"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"206"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"206"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"206"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"206"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"206"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"206"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"206"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"206"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"206"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"206"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"206"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"206"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"206"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"206"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"206"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"206"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"206"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"206"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"206"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"206"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"206"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"206"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"206"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"206"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"206"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"206"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alim/Documents/ju-housing-rent-web/src/index.js",[],["437","438"],"/home/alim/Documents/ju-housing-rent-web/src/serviceWorker.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/App.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/LayoutContext.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/UserContext.js",[],"/home/alim/Documents/ju-housing-rent-web/src/themes/index.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/index.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Layout/Layout.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/login/Login.js",["439","440","441","442","443","444","445","446","447","448","449","450","451","452"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n  FormControl,\n  InputLabel,\n  Select as MuiSelect,\n  MenuItem\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport Controls from \"../../components/Controls/Controls\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/core/styles\";\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nconst GreenTextTypography = withStyles({\n  root: {\n    color: \"#00FF00\"\n  }\n})(Typography);\n\n\nvar initialRenterValues = {\n  id: 0,\n  first_name: \"\",\n  last_name: \"\",\n  email: \"\",\n  phone: \"\",\n  role: \"\",\n  password: \"\",\n  password2: \"\"\n};\n\nvar loginValues = {\n  username: \"\",\n  password: \"\"\n}\n\nvar holdPassword = ''\n\nconst duplicateUserNameCheck = (list, value)=> {\n  var check = true\n  if(list.length === 0){\n    return check\n  }else{\n    for (let i=0; i< list.length; i ++){\n        if(value === list[i].email){       \n          return check = false\n        }\n      }\n    }\n    return check;\n}\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var dispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  const [ userList, setUserList] = useState([]);\n  const [ groupList, setGroupList] = useState([]);\n  const [message, setMessage] = useState(null)\n\n\n  const validationSchema = yup.object().shape({\n    first_name: yup.string().required(\"First Name is required\"),\n    last_name: yup.string().required(\"Last Name is required\"),\n    phone: yup\n    .number()\n    .typeError(\"Invalid Input: numbers please\")\n    // .max(11, \"Not more than 11\")\n    .positive(\"Must be greater than zero\")\n    .required(\"Phone number is required.\")\n    .integer(),\n    email: yup.string().required(\"Email is required\")\n    .test(\"Unique\", \"Email already exist.Try other.\", (values) => {\n      return duplicateUserNameCheck(userList, values)\n    }),\n    password: yup\n    .string()\n    .required(\"Password is required\")\n    .test((values)=>{\n      holdPassword = values\n      return true\n    }),\n    password2: yup\n    .string()\n    .required(\"Confirm Password is required\")\n    .test(\"Match\", \"Password doesn't match!\", (values) => {\n      if (values === holdPassword){\n        return true\n      }\n      return false\n    }),\n  });\n\n\n  const RenterFormik = useFormik({\n    initialValues: initialRenterValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n\n  const LoginFormik = useFormik({\n    initialValues: loginValues,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      login(values);\n      resetForm();\n    },\n  });\n\n  const login = async (values) => {\n    setIsLoading(true);\n    const requestOptions = {\n      headers: {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n      },\n    };\n\n    try {\n      axios\n      .post(\"/api/token/\", values, requestOptions)\n      .then((res) => {\n        setTimeout(() => {\n          localStorage.setItem('refresh_token', res.data.refresh)\n          localStorage.setItem('access_token', res.data.access)\n          localStorage.setItem('id', res.data.id)\n          localStorage.setItem('first_name', res.data.first_name)\n          localStorage.setItem('last_name', res.data.last_name)\n          localStorage.setItem('user_type', res.data.user_type)\n          localStorage.setItem('account_complete_status', res.data.account_complete_status)\n          setError(null)\n          dispatch({ type: 'LOGIN_SUCCESS', payload: res.data })\n          setIsLoading(false);\n          props.history.push('/app/dashboard')\n        }, 1000);\n      })\n      .catch((err) => {\n        // dispatch({ type: \"LOGIN_FAILURE\" });\n        setError(true);\n        setIsLoading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const userRegistration = async (values, setSubmitting) => {\n    setIsLoading(true);\n    const requestOptions = {\n      headers: {\n        method: \"POST\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    };\n\n    try {\n      await axios\n        .post(\"/api/registration/\", values, {\n          requestOptions,\n        })\n        .then((resp) => {\n          setTimeout(() => {\n            setMessage(resp.data.message)\n            setIsLoading(false);\n            setSubmitting(false);\n          }, 1000);\n        });\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n    }\n  };\n\n  const addOrEdit = (userData, resetForm, setSubmitting) => {\n    if (userData.id === 0) userRegistration(userData, setSubmitting);\n    resetForm();\n  };\n\n  useEffect(() => {\n    async function getUsers() {\n      const response = await fetch(\"/api/user/list\");\n      const body = await response.json();\n      setUserList(body);\n    }\n    getUsers();\n    async function getGroups() {\n      const response = await fetch(\"/api/group/list\");\n      const body = await response.json();\n      setGroupList(body);\n    }\n    getGroups();\n  }, []);\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        {/* <Typography className={classes.logotypeText}>Jahangirnogar University</Typography> */}\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                <a href=\"https://juniv.edu/\" target=\"_blank\" style={{color: \"green\"}}>Jahangirnagar University</a>\n              </Typography>\n              <Typography variant=\"h3\" className={classes.greeting1}>\n                House Renting System\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :\n                </Typography>\n              </Fade>\n              <Form onSubmit={LoginFormik.handleSubmit}>\n                <Grid container justify=\"space-between\" alignItems=\"flex-start\" spacing={0}>\n                    <Grid item md={12} sm={12} xs={12}>\n                      <TextField \n                        label=\"Email\"\n                        name=\"username\"\n                        InputProps={{\n                          classes: {\n                            underline: classes.textFieldUnderline,\n                            input: classes.textField,\n                          },\n                        }}\n                        value={LoginFormik.values.username}\n                        onChange={LoginFormik.handleChange}\n                        onBlur={LoginFormik.handleBlur}\n                        margin=\"normal\"\n                        type=\"email\"\n                        error={LoginFormik.touched.username && Boolean(LoginFormik.errors.username)}\n                        helperText={LoginFormik.touched.username && LoginFormik.errors.username}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item md={12} sm={12} xs={12}>\n                      <TextField\n                        label=\"Password\"\n                        name=\"password\"\n                        id=\"password\"\n                        InputProps={{\n                          classes: {\n                            underline: classes.textFieldUnderline,\n                            input: classes.textField,\n                          },\n                        }}\n                        value={LoginFormik.values.password}\n                        onChange={LoginFormik.handleChange}\n                        onBlur={LoginFormik.handleBlur}\n                        margin=\"normal\"\n                        type=\"password\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item md={12} sm={12} xs={12}>\n                    {isLoading ? (\n                        <CircularProgress size={26} className={classes.loginLoader} />\n                      ) : (\n                      <Controls.Button\n                          type=\"submit\"\n                          disabled={\n                            LoginFormik.isSubmitting,\n                            LoginFormik.values.username.length === 0 || LoginFormik.values.password.length === 0\n                          }\n                          text=\"Login\"\n                      />\n                      )}\n                    </Grid>\n                </Grid>\n              </Form>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={message}>\n                <GreenTextTypography variant=\"subtitle1\">\n                  {message}\n                </GreenTextTypography>\n              </Fade>\n              <Form onSubmit={RenterFormik.handleSubmit}>\n                <Grid container justify=\"space-between\" alignItems=\"flex-start\" spacing={0}>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField\n                      label=\"First Name\"\n                      name=\"first_name\"\n                      id=\"name\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.first_name}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"text\"\n                      error={RenterFormik.touched.first_name && Boolean(RenterFormik.errors.first_name)}\n                      helperText={RenterFormik.touched.first_name && RenterFormik.errors.first_name}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Last Name\"\n                      name=\"last_name\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.last_name}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"text\"\n                      error={RenterFormik.touched.last_name && Boolean(RenterFormik.errors.last_name)}\n                      helperText={RenterFormik.touched.last_name && RenterFormik.errors.last_name}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Phone\"\n                      name=\"phone\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.phone}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"number\"\n                      error={RenterFormik.touched.phone && Boolean(RenterFormik.errors.phone)}\n                      helperText={RenterFormik.touched.phone && RenterFormik.errors.phone}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Email\"\n                      name=\"email\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.email}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"email\"\n                      error={RenterFormik.touched.email && Boolean(RenterFormik.errors.email)}\n                      helperText={RenterFormik.touched.email && RenterFormik.errors.email}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                      <FormControl fullWidth\n                        {...(error && {error:true})}>\n                            <InputLabel>Role</InputLabel>\n                            <MuiSelect\n                                label=\"Role\"\n                                name=\"role\"\n                                value={RenterFormik.values.role}\n                                onChange={RenterFormik.handleChange}\n                                onBlur={RenterFormik.handleBlur}\n                                error={RenterFormik.touched.role && Boolean(RenterFormik.errors.role)}\n                                helperText={RenterFormik.touched.role && RenterFormik.errors.role}\n                                >\n                                <MenuItem value=\"\">None</MenuItem>\n                                {\n                                    groupList.map(\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>)\n                                    )\n                                }\n                            </MuiSelect>\n                        </FormControl>\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Password\"\n                      name=\"password\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.password}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"password\"\n                      error={RenterFormik.touched.password && Boolean(RenterFormik.errors.password)}\n                      helperText={RenterFormik.touched.password && RenterFormik.errors.password}\n                      fullWidth  \n                   />\n                  </Grid>\n                \n                <Grid item md={12} sm={12} xs={12}>\n                  <TextField \n                    label=\"Confirm Password\"\n                    name=\"password2\"\n                    InputProps={{\n                      classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    value={RenterFormik.values.password2}\n                    onChange={RenterFormik.handleChange}\n                    onBlur={RenterFormik.handleBlur}\n                    margin=\"normal\"\n                    type=\"password\"\n                    error={RenterFormik.touched.password2 && Boolean(RenterFormik.errors.password2)}\n                    helperText={RenterFormik.touched.password2 && RenterFormik.errors.password2}\n                    fullWidth\n                  />\n                </Grid>\n                \n                <Grid item style={{ marginTop: 3 }} md={12} sm={12} xs={12}>\n                    <div className={classes.wrapper}>\n                    {isLoading ? (\n                        <CircularProgress size={26} className={classes.loginLoader} />\n                      ) : (\n                        <Controls.Button\n                            type=\"submit\"\n                            disabled={\n                              RenterFormik.isSubmitting,\n                              RenterFormik.values.first_name.length === 0 || RenterFormik.values.last_name.length === 0 || RenterFormik.values.phone.length === 0 ||\n                              RenterFormik.values.email.length === 0 || RenterFormik.values.role.length === 0 || RenterFormik.values.password.length === 0 || RenterFormik.values.password2.length === 0\n                            }\n                            text=\"Sign Up\"\n                        />\n                      )}\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick = {RenterFormik.resetForm}\n                        />\n                    </div> \n                </Grid>\n                </Grid>\n              </Form>\n            </React.Fragment>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n        © {new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.linkedin.com/in/md-abdul-alim-milon/\" rel=\"noopener noreferrer\" target=\"_blank\">Design & Develop by <span style={{color: \"purple\"}}>Md. Abdul Alim</span></a>\n        </Typography>\n        <Typography color=\"black\" className={classes.pmscs}>\n          Batch: <span style={{color: \"green\"}}>PMSCS 26</span>\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/home/alim/Documents/ju-housing-rent-web/src/pages/error/Error.js",[],"/home/alim/Documents/ju-housing-rent-web/src/themes/default.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/context.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/reducer.js",["453","454"],"import React, { useReducer } from \"react\";\n\n \nexport const initialState = {\n  fabricList: [],\n  loading: false,\n  errorMessage: null\n};\n \nexport const MachineReducer = (initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_MACHINE_LIST\":\n      return {\n        ...initialState,\n        loading: true\n      };\n    case \"MACHINE_LIST_SUCCESS\":\n      return {\n        ...initialState,\n        fabricList: action.payload,\n        loading: false\n      };\n \n    case \"MACHINE_LIST_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error\n      };\n \n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}","/home/alim/Documents/ju-housing-rent-web/src/pages/error/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/login/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/SnackBar/Notification.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Controls.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Form/useForm.js",["455"],"import React, {useState} from 'react';\n\n\nexport function useForm(initialFValues) {\n\n\n    const [values, setValues] = useState(initialFValues);\n    const [errors, setErrors] = useState({});\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const resetForm = () => {\n        setValues(initialFValues);\n        setErrors({})\n    }\n\n    return {\n        values,\n        setValues,\n        handleChange,\n        resetForm,\n\n    }\n}\n\n\nexport function Form(props) {\n    const { children, ...other } = props;\n    return (\n        <form autoComplete=\"off\" noValidate {...other}>\n            {props.children}\n        </form>\n    )\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileDetail.js",["456","457","458","459","460","461","462","463","464"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/Profile.js",["465"],"/home/alim/Documents/ju-housing-rent-web/src/pages/reports/FindMachinePosition.js",["466"],"import React, { useState, useEffect } from \"react\";\n// import AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\n// import EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\n// import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\n// import Popup from \"../../components/Controls/Popup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport {\n  makeStyles,\n  // Tooltip \n} from \"@material-ui/core\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport BreadCrumb from \"../../components/BreadCrumb/BreadCrumb\";\nimport FindMachinePositionForm from \"./FindMachinePositionForm\";\n// import { orange } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(3),\n  },\n  iconButtonColor: {\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"#0000ff\",\n    },\n  },\n}));\n\nexport default function FindMachinePosition() {\n  const classes = useStyles();\n  const [fabricSearchList, setFabricSearchList] = useState([]);\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const getMuiTheme = () =>\n    createMuiTheme({\n      overrides: {\n        MUIDataTableToolbar: {\n          root: {\n            backgroundColor: \"#50d07d\",\n            color: \"#fff\",\n          },\n          icon: {\n            color: \"#fff\",\n            \"&:hover\": {\n              color: \"#0000ff\",\n            },\n          },\n        },\n        MUIDataTableHeadCell:{\n          fixedHeader:{\n              backgroundColor: \"orange\",\n          }\n        },\n        MuiTableCell: {\n          root: {\n              padding: '13px',\n          },\n          head: {\n              color: \"Black\",\n          }\n        },\n      },\n      typography: {\n        \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n        \"fontSize\": 15,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 400,\n        \"fontWeightMedium\": 500\n       }\n    });\n\n  async function fetchHistoryList(values, setSubmitting) {\n    const requestOptions = {\n      headers: {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      },\n    };\n\n    try {\n      await axios\n        .get(\"/api/machine/search/\", { params:  values  }, { requestOptions })\n        .then((res) => {\n          setFabricSearchList(res.data);\n          // setSubmitting(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchHistoryList();\n  }, []);\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"machine_name\",\n      label: \"Machines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"parent_unit\",\n      label: \"Parent Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"current_unit\",\n      label: \"Current Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"line_name\",\n      label: \"Lines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"status\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },,\n  ];\n\n  const addOrEdit = (fiberPercentage, resetForm, setSubmitting) => {\n    if (fiberPercentage.id === 0)\n      fetchHistoryList(fiberPercentage, setSubmitting);\n    resetForm();\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    selectableRows: \"none\",\n    search: false,\n    filter:false,\n    responsive: \"standard\",\n    print: false,\n    download: false,\n  };\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme()}>\n      <div>\n        <BreadCrumb\n          routeSegments={[\n            { name: \"Reports\", path: \"/app/report\" },\n            { name: \"Machine Position\" },\n          ]}\n        />\n        <Paper className={classes.pageContent}>\n          <FindMachinePositionForm\n            addOrEdit={addOrEdit}\n          />\n        </Paper>\n        <MUIDataTable\n          title={\"Machine Position\"}\n          data={fabricSearchList}\n          columns={columns}\n          options={options}\n          className={classes.pageContent}\n        />\n        <Notification notify={notify} setNotify={setNotify} />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/reports/MachineHistory.js",["467"],"import React, { useState, useEffect } from \"react\";\n// import AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\n// import EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\n// import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\n// import Popup from \"../../components/Controls/Popup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport {\n  makeStyles,\n  // Tooltip \n} from \"@material-ui/core\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport BreadCrumb from \"../../components/BreadCrumb/BreadCrumb\";\nimport MachineHistoryForm from \"./MachineHistoryForm\";\n// import { orange } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(3),\n  },\n  iconButtonColor: {\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"#0000ff\",\n    },\n  },\n}));\n\nexport default function MachineHistory() {\n  const classes = useStyles();\n  const [fabricSearchList, setFabricSearchList] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const getMuiTheme = () =>\n    createMuiTheme({\n      overrides: {\n        MUIDataTableToolbar: {\n          root: {\n            backgroundColor: \"#50d07d\",\n            color: \"#fff\",\n          },\n          icon: {\n            color: \"#fff\",\n            \"&:hover\": {\n              color: \"#0000ff\",\n            },\n          },\n        },\n        MUIDataTableHeadCell:{\n          fixedHeader:{\n              backgroundColor: \"orange\",\n          }\n        },\n        MuiTableCell: {\n          root: {\n              padding: '13px',\n          },\n          head: {\n              color: \"Black\",\n          }\n        },\n      },\n      typography: {\n        \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n        \"fontSize\": 15,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 400,\n        \"fontWeightMedium\": 500\n       }\n    });\n\n  async function fetchHistoryList(values, setSubmitting) {\n\n    try {\n      await axios\n        .get(\"/api/history/\", {\n          params: values,\n          headers: {\n            \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n          },\n        })\n        .then((res) => {\n          setFabricSearchList(res.data);\n          // setSubmitting(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchHistoryList();\n  }, []);\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"machine_name\",\n      label: \"Machine\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"unit_name\",\n      label: \"Unit\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"line_name\",\n      label: \"Line Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"status\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"created_date\",\n      label: \"Date\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"created_time\",\n      label: \"Time\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n  ];\n\n  const addOrEdit = (fiberPercentage, resetForm, setSubmitting) => {\n    if (fiberPercentage.id === 0)\n      fetchHistoryList(fiberPercentage, setSubmitting);\n    resetForm();\n    setRecordForEdit(null);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    selectableRows: \"none\",\n    search: true,\n    filter:true,\n    responsive: \"standard\",\n    print: true,\n    download: false,\n  };\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme()}>\n      <div>\n        <BreadCrumb\n          routeSegments={[\n            { name: \"Reports\", path: \"/app/report\" },\n            { name: \"Machine History\" },\n          ]}\n        />\n        <Paper className={classes.pageContent}>\n          <MachineHistoryForm\n            addOrEdit={addOrEdit}\n          />\n        </Paper>\n        <MUIDataTable\n          title={\"Machine History\"}\n          data={fabricSearchList}\n          columns={columns}\n          options={options}\n          className={classes.pageContent}\n        />\n        <Notification notify={notify} setNotify={setNotify} />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/units/UnitForm.js",["468"],"import React, { useEffect } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\n// import * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialValues = {\n  id: 0,\n  company: \"\",\n  department: \"\",\n  name: \"\",\n  no_of_machine: 0,\n\n};\n\n\nconst UnitForm = (props) => {\n\n  const { addOrEdit, recordForEdit } = props;\n\n  // const validationSchema = yup.object().shape({\n  //   name: yup.string()\n  //   .required(\"Name is required\"),\n  // });\n\n  const classes = style();\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    // validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      formik.setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Company\"\n            name=\"company\"\n            id=\"company\"\n            value={formik.values.company}\n            onChange={formik.handleChange}\n            error={formik.touched.company && Boolean(formik.errors.company)}\n            helperText={formik.touched.company && formik.errors.company}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Department\"\n            name=\"department\"\n            id=\"department\"\n            value={formik.values.department}\n            onChange={formik.handleChange}\n            error={formik.touched.department && Boolean(formik.errors.department)}\n            helperText={formik.touched.department && formik.errors.department}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Unit Name\"\n            name=\"name\"\n            id=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"No Of Machine\"\n            name=\"no_of_machine\"\n            id=\"no_of_machine\"\n            disabled\n            value={formik.values.no_of_machine}\n            onChange={formik.handleChange}\n            error={formik.touched.no_of_machine && Boolean(formik.errors.no_of_machine)}\n            helperText={formik.touched.no_of_machine && formik.errors.no_of_machine}\n            fullWidth\n          />\n        </Grid>\n        <Grid item style={{ marginTop: 16 }}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={formik.resetForm}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default UnitForm;","/home/alim/Documents/ju-housing-rent-web/src/pages/units/Units.js",["469"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popup from \"../../components/Controls/Popup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport UnitForm from \"./UnitForm\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  iconButtonColor: {\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"#0000ff\",\n    },\n  },\n}));\n\nexport default function Units() {\n  const classes = useStyles();\n  const [washTypesList, setWashTypesList] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [washTypesRecord, setUnitRecord] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const getMuiTheme = () =>\n  createMuiTheme({\n    overrides: {\n      MUIDataTableToolbar: {\n        root: {\n          backgroundColor: \"#50d07d\",\n          color: \"#fff\",\n        },\n        icon: {\n          color: \"#fff\",\n          \"&:hover\": {\n            color: \"#0000ff\",\n          },\n        },\n      },\n      MuiTableCell: {\n        root: {  //This can be referred from Material UI API documentation. \n            padding: '6px',\n        },\n      },\n    },\n    typography: {\n      \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n      \"fontSize\": 14,\n      \"fontWeightLight\": 300,\n      \"fontWeightRegular\": 400,\n      \"fontWeightMedium\": 500\n     }\n  });\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  async function fetchUnits() {\n\n    try {\n      await axios\n        .get(\"/api/unit/list\", AxiosHeader)\n        .then((res) => {\n          setWashTypesList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const postUnit = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .post(\"/api/unit/create/\", values, AxiosHeader)\n        .then((resp) => {\n          setUnitRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateUnit = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .put(`/api/unit/update/${values.id}/`, values, AxiosHeader)\n        .then((resp) => {\n          setUnitRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchUnits();\n  }, [washTypesRecord]);\n\n  const openInPopup = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"name\",\n      label: \"Unit Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company\",\n      label: \"Company\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"department\",\n      label: \"Department\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"no_of_machine\",\n      label: \"No Of Machine\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (washType) {\n            if (washType.id === tableMeta.rowData[0])\n              return (item = washType);\n          });\n          return (\n            <>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  openInPopup(item);\n                }}\n              >\n                <EditIcon fontSize=\"default\" />\n              </IconButton>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  const addOrEdit = (washType, resetForm, setSubmitting) => {\n    if (washType.id === 0) postUnit(washType, setSubmitting);\n    else updateUnit(washType, setSubmitting);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    customToolbar: () => {\n      return (\n        <Tooltip title={\"Add New\"}>\n          <IconButton className={classes.iconButtonColor}\n            onClick={() => {\n              setOpenPopup(true);\n              setRecordForEdit(null);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n      );\n    },\n    print: false,\n    download: false,\n  };\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme()}>\n    <div>\n      <MUIDataTable\n        title={\"Unit List\"}\n        data={washTypesList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n      <Popup\n        title=\"Unit Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <UnitForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} washTypesList={washTypesList} />\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n    </MuiThemeProvider>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/machines/MachineDetail.js",["470"],"import React, { useState, useRef } from \"react\";\nimport BreadCrumb from \"../../components/BreadCrumb/BreadCrumb\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport Popup from \"../../components/Controls/Popup\";\nimport FabricBarcode from \"../../components/Barcode/FabricBarcode\";\nimport { useReactToPrint } from \"react-to-print\";\nimport {\n  Paper,\n  Grid,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Box,\n} from \"@material-ui/core\";\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\nimport { CenterFocusStrong } from \"@material-ui/icons\";\n\nfunction MachineDetail(props) {\n  let machine = props.location.state;\n\n  const [openPopup, setOpenPopup] = useState(false);\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  return (\n    <div>\n      <BreadCrumb routeSegments={[{ name: \"Machine Details\" }]} />\n      <Paper\n        elevation={3}\n        square={false}\n        style={{ paddingTop: 6, margin: \"16px\" }}\n      >\n        <div\n          className=\"px-4\"\n          style={{\n            marginBottom: \"1.25rem\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            display: \"flex\",\n          }}\n        >\n          <Link to=\"/app/machines\">\n            <IconButton>\n              <ArrowBackRoundedIcon />\n            </IconButton>\n          </Link>\n          <div>\n          <Box mx={1} display=\"inline-flex\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"mr-4 py-2\"\n              style={{marginBottom: \"5px\"}}\n              onClick={() => {\n                setOpenPopup(true);\n              }}\n            >\n              Show Barcode\n            </Button>\n            </Box>\n            <Box mx={1} display=\"inline-flex\">\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={handlePrint}\n              >\n                Print Barcode\n              </Button>\n            </Box>\n          </div>\n        </div>\n        <div>\n          <Grid container alignItems=\"flex-start\" spacing={6}>\n            <Grid item md={6} sm={12} xs={12}>\n              <Table>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>Name:</TableCell>\n                    <TableCell align=\"right\">\n                      {machine.name}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Model No:</TableCell>\n                    <TableCell align=\"right\">\n                      {machine.model_no}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Parent Unit:</TableCell>\n                    <TableCell align=\"right\">{machine.parent_unit_name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Current Unit:</TableCell>\n                    <TableCell align=\"right\">{machine.current_unit_name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Line:</TableCell>\n                    <TableCell align=\"right\">\n                      {machine.line}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Category:</TableCell>\n                    <TableCell align=\"right\">{machine.category_value}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Type:</TableCell>\n                    <TableCell align=\"right\">{machine.type_value}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Brand:</TableCell>\n                    <TableCell align=\"right\">\n                      {machine.brand}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Supplier:</TableCell>\n                    <TableCell align=\"right\">\n                      {machine.supplier}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Description:</TableCell>\n                    <TableCell align=\"right\">\n                      {machine.description}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Acquisition Value:</TableCell>\n                    <TableCell align=\"right\">{machine.acquisition_value}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Acquisition Date:</TableCell>\n                    <TableCell align=\"right\">{machine.acquisition_date_}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Grid>\n            <Grid item md={6} sm={12} xs={12}>\n              <Table>\n                <TableBody>\n                <TableRow>\n                    <TableCell>Warranty Start:</TableCell>\n                    <TableCell align=\"right\">\n                      {machine.warranty_start_date}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Warranty End:</TableCell>\n                    <TableCell align=\"right\">{machine.warranty_end_date}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Warranty Details:</TableCell>\n                    <TableCell align=\"right\">{machine.warranty_details}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Status:</TableCell>\n                    <TableCell align=\"right\">{machine.status_value}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Factory Serial No:</TableCell>\n                    <TableCell align=\"right\">{machine.factory_serial_no}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Manufacture Serial No:</TableCell>\n                    <TableCell align=\"right\">{machine.manufacture_serial_no}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Location:</TableCell>\n                    <TableCell align=\"right\">{machine.location}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Air Consumption:</TableCell>\n                    <TableCell align=\"right\">{machine.air_consumption}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Steam Consumption:</TableCell>\n                    <TableCell align=\"right\">{machine.steam_consumption}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Watt Consumption:</TableCell>\n                    <TableCell align=\"right\">{machine.watt_consumption}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Start Date:</TableCell>\n                    <TableCell align=\"right\">{machine.start_date_}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Remark:</TableCell>\n                    <TableCell align=\"right\">{machine.remark}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Grid>\n          </Grid>\n        </div>\n      </Paper>\n      <Popup title=\"Barcode\" openPopup={openPopup} setOpenPopup={setOpenPopup}>\n        <FabricBarcode fabricDetails={machine} />\n      </Popup>\n      <div style={{ display: \"none\" }}>\n        <FabricBarcode fabricDetails={machine} ref={componentRef} />\n      </div>\n    </div>\n  );\n}\n\nexport default MachineDetail;\n","/home/alim/Documents/ju-housing-rent-web/src/pages/machines/Machines.js",["471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502"],"import React, { useState, useEffect } from \"react\";\nimport clsx from 'clsx';\nimport MachineForm from \"./MachineForm\";\nimport BreadCrumb from \"../../components/BreadCrumb/BreadCrumb\";\nimport { Search } from \"@material-ui/icons\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport UploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n  useMachineState,\n  useMachineDispatch,\n  MachineProvider,\n  initialState,\n  MachineList,\n} from \"../../context/index\";\nimport useTable from \"../../components/Table/useTable\";\nimport Controls from \"../../components/Controls/Controls\";\nimport Popup from \"../../components/Controls/Popup\";\nimport Upload from \"../../components/Controls/Upload\";\nimport FullScreenPopup from \"../../components/FullScreenPopup/FullScreenPopup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport BarcodeScanner from \"../../components/Barcode/BarcodeScanner\";\nimport {\n  makeStyles,\n  TableCell,\n  Tooltip\n} from \"@material-ui/core\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  searchInput: {\n    width: \"75%\",\n  },\n  newButton: {\n    position: \"absolute\",\n    right: \"10px\",\n  },\n  iconButtonColor: {\n    color: \"#fff\",\n    '&:hover': {\n      color: \"#0000ff\"\n  }\n  }\n}));\n\n\nfunction Machines() {\n  const classes = useStyles();\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableToolbar: {\n        root: {\n          backgroundColor: \"#50d07d\",\n          color: \"#fff\"\n        },\n        icon: {\n          color: \"#fff\",\n          '&:hover': {\n               color: \"#0000ff\"\n           }\n       },\n      },\n      MuiTableCell: {\n        root: {\n            padding: '6px',\n        },\n      },\n    },\n\n    typography: {\n      \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n      \"fontSize\": 14,\n      \"fontWeightLight\": 300,\n      \"fontWeightRegular\": 400,\n      \"fontWeightMedium\": 500\n     }\n  })\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [searchValue, setSearchValue] = useState(null);\n  const [searchOpen, setSearchOpen] = useState(false);\n  const [records, setRecords] = useState(null);\n  const [fabricRecord, setFabricRecord] = useState(null);\n  const [filterFn, setFilterFn] = useState({\n    fn: (items) => {\n      return items;\n    },\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [upload, setUpload] = useState(false);\n  const [MachineList, setMachineList] = useState([]);\n  const [fiber, setFiber] = useState([]);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: \"\",\n    subTitle: \"\",\n  });\n\n  const dispatch = useMachineDispatch();\n  const { fabricList, loading, errorMessage } = useMachineState(); //read the values of loading and errorMessage from context\n\n  const fetchFabricList = async () => {\n    try {\n      await MachineList(dispatch);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  async function fetchMachines() {\n\n    try {\n      await axios\n        .get(\"/api/machine/list/\", AxiosHeader)\n        .then((res) => {\n          setMachineList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const postFabric = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .post(\"/api/machine/create/\", values, AxiosHeader)\n        .then((resp) => {\n          setFabricRecord(resp.data);\n          // alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateFabric = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .put(`/api/machine/update/${values.id}/`, values, AxiosHeader)\n        .then((resp) => {\n          setFabricRecord(resp.data);\n          // alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchFabricList();\n    fetchMachines();\n    async function getFiber() {\n      const response = await fetch(\"/api/machine/list\");\n      const body = await response.json();\n      setFiber(body);\n    }\n    getFiber();\n  }, [fabricRecord, searchOpen]);\n\n\n  const openInPopup = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"model_no\",\n      label: \"Model No\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"parent_unit_name\",\n      label: \"Parent Unit\",\n      options: {\n        filter: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"current_unit_name\",\n      label: \"Current Unit\",\n      options: {\n        filter: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"line\",\n      label: \"Line\",\n      options: {\n        filter: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"category_value\",\n      label: \"Category\",\n      options: {\n        filter: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"type_value\",\n      label: \"Type\",\n      options: {\n        filter: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"brand\",\n      label: \"Brand\",\n      options: {\n        filter: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"acquisition_value\",\n      label: \"Acquisition Value\",\n      options: {\n        filter: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"status_value\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabric) {\n            if (fabric.id == tableMeta.rowData[0]) return (item = fabric);\n          });\n          return (\n            <>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  if (item.parent_unit_name === localStorage.getItem(\"unit\")){\n                    openInPopup(item);\n                  }else{\n                    alert(\"You have no update permission\")\n                  }\n                  \n                }}\n              >\n                <EditIcon fontSize=\"medium\" />\n              </IconButton>\n              <Link\n                to={{\n                  pathname: \"/app/machine/details\",\n                  state: item,\n                }}\n              >\n                <IconButton color=\"primary\">\n                  <ArrowRightAltIcon fontSize=\"medium\" />\n                </IconButton>\n              </Link>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n\n  const addOrEdit = (fabric, resetForm, setSubmitting) => {\n    if (fabric.id == 0) postFabric(fabric, setSubmitting);\n    else updateFabric(fabric, setSubmitting);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    filterType: \"select\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    customToolbar: () => {\n      return (\n        <>\n        <Tooltip title={\"Add New\"}>\n          <IconButton className={classes.iconButtonColor}\n            onClick={() => {\n              setOpenPopup(true);\n              setRecordForEdit(null);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n        </>\n      );\n    },\n    print: false,\n    download: false,\n    searchText: searchValue,\n    searchOpen: searchOpen,\n  };\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme()}>\n    <div>\n      <BreadCrumb routeSegments={[{ name: \"Machines\" }]} />\n      <MUIDataTable\n        title={\"Machine List\"}\n        data={MachineList}\n        columns={columns}\n        options={options}\n        className = {classes.pageContent}\n      />\n      <TableCell\n       className= {classes.MuiTableCell}\n      />\n      <Popup\n        title=\"Machine Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <MachineForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} fabricList={fabricList}/>\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default Machines;\n","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/Line.js",["503","504"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FormDialog from \"../../components/FormDialog/FormDialog\";\nimport Popup from \"../../components/Controls/Popup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport AddMachineToLineForm from \"./AddMachineToLineForm\";\nimport AddMachineToLineByBarcodeForm from \"./AddMachineToLineByBarcodeForm\";\nimport BarcodeScanner from \"../../components/Barcode/BarcodeScanner\";\nimport FullScreenPopup from \"../../components/FullScreenPopup/FullScreenPopup\";\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport Controls from \"../../components/Controls/Controls\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function Line() {\n  const classes = useStyles();\n  const [addMachineToLineList, setAddMachineToLineList] = useState([]);\n  const [compositionRecord, setCompositionRecord] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [openPopup2, setOpenPopup2] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [searchValue, setSearchValue] = useState(null);\n  const [updateSignal, setUpdateSignal] = useState(null);\n\n\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  async function fetchCompositions() {\n    const requestOptions = {\n      headers: {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      },\n    };\n\n    try {\n      await axios\n        .get(\"/api/line/approval/list/\", { requestOptions })\n        .then((res) => {\n          setAddMachineToLineList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  const updateLine = async (values, setSubmitting) => {\n    const requestOptions = {\n      headers: {\n        method: \"PUT\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    };\n\n    try {\n      await axios\n        .put(`/api/unit/update/`, values, {\n          requestOptions,\n        })\n        .then((resp) => {\n          setCompositionRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const removeMachineFromLine = async (values) => {\n    await axios\n      .delete(`/api/remove/machine/from/line/`, {\n        params: { line: values.id,machine: values.machine_name },\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n      }) \n      .then((resp) => {\n        setUpdateSignal(resp.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchCompositions();\n  }, [compositionRecord, updateSignal]);\n\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"line_name\",\n      label: \"Lines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"machine_name\",\n      label: \"Machines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"parent_unit_name\",\n      label: \"Parent Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"current_unit_name\",\n      label: \"Current Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"machine_status\",\n      label: \"Machine Status\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabric) {\n            if (fabric.id == tableMeta.rowData[0]) return (item = fabric);\n          });\n          return (\n            <>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  removeMachineFromLine(item);\n                }}\n              >\n                <Controls.Button\n                  type=\"submit\"\n                  text=\"DeActive\"\n                  style={{backgroundColor: \"red\"}}\n                />\n              </IconButton>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  const addOrEdit = (composition, resetForm, setSubmitting) => {\n    if (composition.id === 0) updateLine(composition, setSubmitting);\n    else updateLine(composition, setSubmitting);\n    resetForm();\n    setOpenPopup(false);\n    setOpenPopup2(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    customToolbar: () => {\n      return (\n        <>\n        <Tooltip title={\"Add New\"}>\n          <IconButton className={classes.iconButtonColor}\n            onClick={() => {\n              setOpenPopup(true);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n         <Tooltip title={\"Scan Barcode\"}>\n         <IconButton className={classes.iconButtonColor}\n           onClick={() => {\n             setOpen(true);\n           }}\n         >\n           <CropFreeIcon />\n         </IconButton>\n       </Tooltip>\n        </>\n      );\n    },\n    print: false,\n    download: false,\n  };\n\n  return (\n    <div>\n      <MUIDataTable\n        title={\"Machine List Per Unit\"}\n        data={addMachineToLineList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n      <FormDialog\n        title=\"Add Machine to Line Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n        maxWidth=\"xs\"\n      >\n        <AddMachineToLineForm  addOrEdit={addOrEdit}  />\n      </FormDialog>\n      <Popup\n        title=\"Add Machine To Line By Barcode Scan\"\n        openPopup={openPopup2}\n        setOpenPopup={setOpenPopup2}\n      >\n        <AddMachineToLineByBarcodeForm addOrEdit={addOrEdit} searchValue={searchValue}/>\n      </Popup>\n      <FullScreenPopup\n          title=\"Barcode Scanner\"\n          open={open}\n          setOpen={setOpen}\n        >\n          <BarcodeScanner setOpenPopup2={setOpenPopup2} setOpen={setOpen} setSearchValue = {setSearchValue} />\n        </FullScreenPopup>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/TransferMachineFromLine.js",["505","506","507","508","509","510","511","512"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport FormDialog from \"../../components/FormDialog/FormDialog\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport AddMachineToLineForm from \"./AddMachineToLineForm\";\nimport Controls from \"../../components/Controls/Controls\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function TransferMachineFromLine() {\n  const classes = useStyles();\n  const [addMachineToLineList, setAddMachineToLineList] = useState([]);\n  const [compositionRecord, setCompositionRecord] = useState(null);\n\n  console.log(localStorage.getItem('user_type'))\n\n\n  async function fetchApprovalList() {\n    const requestOptions = {\n      headers: {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      },\n    };\n\n    try {\n      await axios\n        .get(\"/api/line/list/\", { requestOptions })\n        .then((res) => {\n          setAddMachineToLineList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n\n  const approveLine = async (values) => {\n    console.log(values)\n    const requestOptions = {\n      headers: {\n        method: \"PUT\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    };\n\n    try {\n      await axios\n        .put(`/api/line/transfer/${values.id}/`, {\n          requestOptions,\n        })\n        .then((resp) => {\n          setCompositionRecord(resp.data);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchApprovalList();\n  }, [compositionRecord]);\n\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"line_name\",\n      label: \"Lines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"machine_name\",\n      label: \"Machines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"unit_name\",\n      label: \"Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabric) {\n            if (fabric.id == tableMeta.rowData[0]) return (item = fabric);\n          });\n          return (\n            <>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  approveLine(item);\n                }}\n              >\n                <Controls.Button\n                  type=\"submit\"\n                  text=\"Transfer\"\n                />\n              </IconButton>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    print: false,\n    download: false,\n  };\n\n  return (\n    <div>\n      <MUIDataTable\n        title={\"Machine Transfer\"}\n        data={addMachineToLineList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n    </div>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/ProductionApproveMachineToLine.js",["513","514","515","516","517","518","519","520","521","522"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport FormDialog from \"../../components/FormDialog/FormDialog\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport AddMachineToLineForm from \"./AddMachineToLineForm\";\nimport Controls from \"../../components/Controls/Controls\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function ProductionApproveMachineToLine() {\n  const classes = useStyles();\n  const [addMachineToLineList, setAddMachineToLineList] = useState([]);\n  const [updateSignal, setUpdateSignal] = useState(null);\n\n  const AxiosHeader = {\n    headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n  };\n\n  async function fetchApprovalList() {\n\n    try {\n      await axios\n        .get(\"/api/line/production/approval/list/\", AxiosHeader )\n        .then((res) => {\n          setAddMachineToLineList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n\n  const approveLine = async (values) => {\n    const requestOptions = {\n      headers: {\n        method: \"PUT\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    };\n\n    try {\n      await axios\n        .put(`/api/line/production/approval/list/`, values, AxiosHeader)\n        .then((resp) => {\n          setUpdateSignal(resp.data);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const rejectLine = async (values) => {\n\n    await axios\n      .delete(`/api/line/production/approval/list/`, {\n        params: { line: values.id,machine: values.machine_name },\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n      }) \n      .then((resp) => {\n        setUpdateSignal(resp.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchApprovalList();\n  }, [updateSignal]);\n\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"line_name\",\n      label: \"Lines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"machine_name\",\n      label: \"Machines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"parent_unit_name\",\n      label: \"Parent Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"current_unit_name\",\n      label: \"Current Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"machine_status\",\n      label: \"Machine Status\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabric) {\n            if (fabric.id == tableMeta.rowData[0]) return (item = fabric);\n          });\n          return (\n            <>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  approveLine(item);\n                }}\n              >\n                <Controls.Button\n                  type=\"submit\"\n                  text=\"Approve\"\n                />\n              </IconButton>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  rejectLine(item);\n                }}\n              >\n                <Controls.Button\n                  type=\"submit\"\n                  text=\"Reject\"\n                  style={{backgroundColor: \"red\"}}\n                />\n              </IconButton>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    print: false,\n    download: false,\n  };\n\n  return (\n    <div>\n      <MUIDataTable\n        title={\"Machine Production Approval\"}\n        data={addMachineToLineList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n    </div>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/ApproveTransferMachineFromLine.js",["523","524","525","526","527","528","529","530"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport FormDialog from \"../../components/FormDialog/FormDialog\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport AddMachineToLineForm from \"./AddMachineToLineForm\";\nimport Controls from \"../../components/Controls/Controls\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function ApproveTransferMachineFromLine() {\n  const classes = useStyles();\n  const [addMachineToLineList, setAddMachineToLineList] = useState([]);\n  const [compositionRecord, setCompositionRecord] = useState(null);\n\n\n  async function fetchApprovalList() {\n    const requestOptions = {\n      headers: {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      },\n    };\n\n    try {\n      await axios\n        .get(\"/api/machine/transfer/list/\", { requestOptions })\n        .then((res) => {\n          setAddMachineToLineList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n\n  const approveLine = async (values) => {\n    console.log(values)\n    const requestOptions = {\n      headers: {\n        method: \"PUT\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    };\n\n    try {\n      await axios\n        .delete(`/api/machine/transfer/approve/${values.id}/`, {\n          requestOptions,\n        })\n        .then((resp) => {\n          setCompositionRecord(resp.data);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const rejectLine = async (values) => {\n    const requestOptions = {\n      headers: {\n        method: \"PUT\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    };\n\n    try {\n      await axios\n        .put(`/api/machine/transfer/reject/${values.id}/`, values, {\n          requestOptions,\n        })\n        .then((resp) => {\n          setCompositionRecord(resp.data);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchApprovalList();\n  }, [compositionRecord]);\n\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"line_name\",\n      label: \"Lines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"machine_name\",\n      label: \"Machines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"unit_name\",\n      label: \"Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabric) {\n            if (fabric.id == tableMeta.rowData[0]) return (item = fabric);\n          });\n          return (\n            <>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  approveLine(item);\n                }}\n              >\n                <Controls.Button\n                  type=\"submit\"\n                  text=\"Approve\"\n                />\n              </IconButton>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  rejectLine(item);\n                }}\n              >\n                <Controls.Button\n                  type=\"submit\"\n                  text=\"Reject\"\n                  style={{backgroundColor: \"red\"}}\n                />\n              </IconButton>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    print: false,\n    download: false,\n  };\n\n  return (\n    <div>\n      <MUIDataTable\n        title={\"Machine Transfer Approval\"}\n        data={addMachineToLineList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n    </div>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/MaintenanceApproveMachineToLine.js",["531","532","533","534","535","536","537","538","539","540","541","542"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport FormDialog from \"../../components/FormDialog/FormDialog\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport AddMachineToLineForm from \"./AddMachineToLineForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { Tune } from \"@material-ui/icons\";\nimport { useUserDispatch, signOut, useUserState } from \"../../context/UserContext\";\nimport {AxiosHeader} from \"../../utils/AxiosHeader\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MaintenanceApproveMachineToLine(props) {\n  const classes = useStyles();\n  const [addMachineToLineList, setAddMachineToLineList] = useState([]);\n  const [updateSignal, setUpdateSignal] = useState(null);\n\n  var userDispatch = useUserDispatch();\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  async function fetchApprovalList() {\n    try {\n      await axios\n        .get(\"/api/line/maintenance/approval/list/\", AxiosHeader )\n        .then((res) => {\n          setAddMachineToLineList(res.data);\n        })\n        .catch((err) => {\n          signOut(userDispatch, props.history);\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n\n  const approveLine = async (values) => {\n\n    try {\n      await axios\n        .put(`/api/line/maintenance/approval/list/`, values, AxiosHeader)\n        .then((resp) => {\n          setUpdateSignal(resp.data);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const rejectLine = async (values) => {\n  await axios\n    .delete(`/api/line/maintenance/approval/list/`, {\n      params: { line: values.id,machine: values.machine_name },\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n    }) \n    .then((resp) => {\n      setUpdateSignal(resp.data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchApprovalList();\n  }, [updateSignal]);\n\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: true,\n      },\n    },\n    {\n      name: \"line_name\",\n      label: \"Lines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"machine_name\",\n      label: \"Machines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"parent_unit_name\",\n      label: \"Parent Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"current_unit_name\",\n      label: \"Current Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"machine_status\",\n      label: \"Machine Status\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabric) {\n            if (fabric.id == tableMeta.rowData[0]) return (item = fabric);\n          });\n          return (\n            <>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  approveLine(item);\n                }}\n              >\n                <Controls.Button\n                  type=\"submit\"\n                  text=\"Approve\"\n                />\n              </IconButton>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  rejectLine(item);\n                }}\n              >\n                <Controls.Button\n                  type=\"submit\"\n                  text=\"Reject\"\n                  style={{backgroundColor: \"red\"}}\n                />\n              </IconButton>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    print: false,\n    download: false,\n  };\n\n  return (\n    <div>\n      <MUIDataTable\n        title={\"Machine Maintenance Approval\"}\n        data={addMachineToLineList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n    </div>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/AddMachineToLine.js",["543"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FormDialog from \"../../components/FormDialog/FormDialog\";\nimport Popup from \"../../components/Controls/Popup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport AddMachineToLineForm from \"./AddMachineToLineForm\";\nimport AddMachineToLineByBarcodeForm from \"./AddMachineToLineByBarcodeForm\";\nimport BarcodeScanner from \"../../components/Barcode/BarcodeScanner\";\nimport FullScreenPopup from \"../../components/FullScreenPopup/FullScreenPopup\";\nimport CropFreeIcon from '@material-ui/icons/CropFree';\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function AddMachineToLine() {\n  const classes = useStyles();\n  const [addMachineToLineList, setAddMachineToLineList] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [compositionRecord, setCompositionRecord] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [openPopup2, setOpenPopup2] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [searchValue, setSearchValue] = useState(null);\n\n\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  async function fetchCompositions() {\n    const requestOptions = {\n      headers: {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      },\n    };\n\n    try {\n      await axios\n        .get(\"/api/line/approval/list/\", { requestOptions })\n        .then((res) => {\n          setAddMachineToLineList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  const updateLine = async (values, setSubmitting) => {\n    const requestOptions = {\n      headers: {\n        method: \"PUT\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    };\n\n    try {\n      await axios\n        .put(`/api/unit/update/`, values, {\n          requestOptions,\n        })\n        .then((resp) => {\n          setCompositionRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchCompositions();\n  }, [compositionRecord]);\n\n  const openInPopup = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"line_name\",\n      label: \"Lines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"machine_name\",\n      label: \"Machines\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"parent_unit_name\",\n      label: \"Parent Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"current_unit_name\",\n      label: \"Current Units\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"machine_status\",\n      label: \"Machine Status\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabric) {\n            if (fabric.id == tableMeta.rowData[0]) return (item = fabric);\n          });\n          return (\n            <>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  openInPopup(item);\n                }}\n              >\n                <EditIcon fontSize=\"medium\" />\n              </IconButton>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  const addOrEdit = (composition, resetForm, setSubmitting) => {\n    if (composition.id === 0) updateLine(composition, setSubmitting);\n    else updateLine(composition, setSubmitting);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setOpenPopup2(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    customToolbar: () => {\n      return (\n        <>\n        <Tooltip title={\"Add New\"}>\n          <IconButton className={classes.iconButtonColor}\n            onClick={() => {\n              setOpenPopup(true);\n              setRecordForEdit(null);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n         <Tooltip title={\"Scan Barcode\"}>\n         <IconButton className={classes.iconButtonColor}\n           onClick={() => {\n             setOpen(true);\n           }}\n         >\n           <CropFreeIcon />\n         </IconButton>\n       </Tooltip>\n        </>\n      );\n    },\n    print: false,\n    download: false,\n  };\n\n  return (\n    <div>\n      <MUIDataTable\n        title={\"Machine List Per Unit\"}\n        data={addMachineToLineList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n      <FormDialog\n        title=\"Add Machine to Line Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n        maxWidth=\"xs\"\n      >\n        <AddMachineToLineForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} addMachineToLineList={addMachineToLineList} />\n      </FormDialog>\n      <Popup\n        title=\"Add Machine To Line By Barcode Scan\"\n        openPopup={openPopup2}\n        setOpenPopup={setOpenPopup2}\n      >\n        <AddMachineToLineByBarcodeForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} searchValue={searchValue}/>\n      </Popup>\n      <FullScreenPopup\n          title=\"Barcode Scanner\"\n          open={open}\n          setOpen={setOpen}\n        >\n          <BarcodeScanner setOpenPopup2={setOpenPopup2} setOpen={setOpen} setSearchValue = {setSearchValue} />\n        </FullScreenPopup>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/components/Layout/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/action.js",["544","545"],"import axios from \"axios\";\nconst ROOT_URL = \"http://127.0.0.1:8000/\";\n\nexport async function MachineList(dispatch) {\n  const requestOptions = {\n    headers: {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    },\n  };\n\n  try {\n    dispatch({ type: \"REQUEST_MACHINE_LIST\" });\n    await axios\n      .get(\"/api/machine/list\")\n      .then((res) => {\n        dispatch({\n          type: \"MACHINE_LIST_SUCCESS\",\n          payload: res.data,\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: \"MACHINE_LIST_ERROR\",\n          error: err,\n        });\n      });\n  } catch (error) {\n    dispatch({ type: \"MACHINE_LIST_ERROR\", error: error });\n  }\n}\n","/home/alim/Documents/ju-housing-rent-web/src/components/Footer/Footer.js",["546"],"/home/alim/Documents/ju-housing-rent-web/src/pages/charts/Charts.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/maps/Maps.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/tables/Tables.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/Notifications.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/typography/Typography.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/icons/Icons.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomImage.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/ActionButton.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Button.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Select.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Autocomplete.js",["547"],"/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default function Playground(props) {\n    const { name, value, label, onChange, options, onBlur, fullWidth } = props;\n\n  const optionsProps = {\n    options: options.map((option) => option.name),\n  };\n\n  return (\n    <Autocomplete fullWidth\n      id=\"auto-complete\"\n      name={name}\n      {...optionsProps}\n      autoComplete\n      includeInputInList\n      onChange={onChange}\n      value={value}\n      onBlur={onBlur}\n      \n      renderInput={params => (\n        <TextField\n          margin=\"normal\"\n          label={label}\n          name={name}\n          {...params}\n        />\n      )}\n  />\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomAutocomplete.js",["548"],"/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default function Playground(props) {\n    const { name, value, label, onChange, options, onBlur, fullWidth } = props;\n\n  const optionsProps = {\n    options: options.map((option) => option.name),\n  };\n\n  return (\n      <Autocomplete fullWidth\n        // multiple\n        {...optionsProps}\n        id=\"auto-complete\"\n        autoComplete\n        includeInputInList\n        width = \"fit-content\"\n        renderInput={(params) => \n            <TextField \n            name={name} \n            label={label} \n            onchange={onChange} \n            value={value} \n            onBlur={onBlur} \n            margin=\"normal\"\n            style={{width: \"100%\"}}\n            {...params}\n            />\n        }\n      />\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/Sidebar.js",["549","550","551","552","553","554","555","556"],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/DatePicker.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/Dashboard.js",["557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport BreadCrumb from \"../../components/BreadCrumb/BreadCrumb\";\nimport axios from \"axios\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  Tooltip,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  const [dashboardData, setDashboardData] = useState([]);\n  var theme = useTheme();\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  async function fetchDashboardData() {\n\n    try {\n      await axios\n        .get(\"/api/dashboard/\", AxiosHeader)\n        .then((res) => {\n          setDashboardData(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  const CustomTooltip = ({ active, payload, label, name }) => {\n    if (active) {\n      return (\n        <div className=\"custom-tooltip\">\n          <span className=\"intro\">{payload[0].payload.month}</span>\n          <p className=\"label\">{`${name} : ${payload[0].value}`}</p>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <BreadCrumb routeSegments={[{ name: \"Dashboard\" }]} />\n      <Grid container spacing={4} className={classes.pageContent}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Total Machines\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"medium\" noWrap>\n                    {dashboardData.machine_count}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Total Active Machines\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"medium\" noWrap>\n                    {dashboardData.active_machine_count}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Total Units\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"medium\" noWrap>\n                    {dashboardData.unit_count}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Total Lines\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"medium\" noWrap>\n                    {dashboardData.line_count}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n          </Widget>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Month wise Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Machine\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Unit\n                    </Typography>\n                  </div>\n                  {/* <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"secondary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Line\n                    </Typography>\n                  </div> */}\n                </div>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={dashboardData.machine_unit_monthly_count}\n              >\n                <YAxis\n                  // ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  dataKey=\"month\"\n                  // tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"machine\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"unit\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.primary.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.primary.main,\n                  }}\n                />\n                {/* <Line\n                  type=\"monotone\"\n                  dataKey=\"fabric\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"style\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                /> */}\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n  return resultArray;\n}\n","/home/alim/Documents/ju-housing-rent-web/src/components/Header/Header.js",["574","575","576","577","578","579","580","581","582","583","584","585","586","587"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  // Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut, useUserState } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n  var { isAuthenticated, userDetails } = useUserState();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n  // var userName = localStorage.getItem('userName');\n  var firstName = localStorage.getItem('first_name');\n  var lastName = localStorage.getItem('last_name');\n  var userType = localStorage.getItem('user_type');\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar} style={{ background: '#2E3B55' }}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          Machine Maintenance\n        </Typography>\n        <div className={classes.grow} />\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              {firstName} {lastName}\n            </Typography>\n            <Typography variant=\"h7\" weight=\"medium\">\n              User Type: {userType}\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              href=\"https://flatlogic.com\"\n            >\n              {/* Flalogic.com */}\n            </Typography>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <Link\n                to={{\n                  pathname: \"/app/profile\"\n                }}\n              >\n                <AccountIcon className={classes.profileMenuIcon} /> Change password\n              </Link>\n            {/* <AccountIcon className={classes.profileMenuIcon} /> Profile */}\n          </MenuItem>\n\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/reports/MachineHistoryForm.js",["588","589","590","591","592","593","594","595"],"import React, { useState, useEffect } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  useForm, \n  Form \n} from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\n// import Divider from \"@material-ui/core/Divider\";\n// import Typography from \"@material-ui/core/Typography\";\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import Select from \"@material-ui/core/Select\";\nimport { useFormik } from \"formik\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\n// import * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  // InputLabel,\n  // Icon,\n  Grid,\n  // Radio,\n  // RadioGroup,\n  // FormControl,\n  // MenuItem,\n  // TextField,\n  CircularProgress,\n  // FormHelperText,\n} from \"@material-ui/core\";\n// import { VerticalAlignCenter } from \"@material-ui/icons\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar today = new Date()\nvar fromDate = new Date()\nfromDate.setMonth(fromDate.getMonth() - 1)\n\nvar initialFValues = {\n  id: 0,\n  from_date: fromDate,\n  to_date: today,\n  machine: \"\",\n  unit: \"\",\n  line: \"\"\n};\n\n\nconst MachineHistoryForm = (props) => {\n  const [machines, setMachines] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [lines, setLines] = useState([]);\n\n  const { addOrEdit, recordForEdit } = props;\n  const { values, setValues, handleChange } = useForm(initialFValues);\n  const classes = style();\n\n\n  const formik = useFormik({\n    initialValues: initialFValues,\n    // validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      formik.setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n  useEffect(() => {\n    async function getUnitName() {\n      const response = await fetch(\"/api/unit/list/\", AxiosHeader);\n      const body = await response.json();\n      setUnits(body);\n    }\n    getUnitName();\n\n    async function getMachineName() {\n      const response = await fetch(\"/api/all/machine/name/list/\", AxiosHeader);\n      const body = await response.json();\n      setMachines(body);\n    }\n    getMachineName();\n\n    async function getLineName() {\n      const response = await fetch(\"/api/line/name/list/\", AxiosHeader);\n      const body = await response.json();\n      setLines(body);\n    }\n    getLineName();\n  }, []);\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item md={2} sm={4} xs={6}>\n        <Controls.DatePicker\n            label=\"From\"\n            name=\"from_date\"\n            value={formik.values.from_date}\n            onChange={value => {\n              formik.setFieldValue(\"from_date\", value)\n            }}\n            onBlur={formik.handleBlur}\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item md={2} sm={4} xs={6}>\n        <Controls.DatePicker\n            label=\"To\"\n            name=\"to_date\"\n            value={formik.values.to_date}\n            onChange={value => {\n              formik.setFieldValue(\"to_date\", value)\n            }}\n            onBlur={formik.handleBlur}\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item md={2} sm={4} xs={6}>\n          <Controls.Autocomplete\n            label=\"Machine\"\n            name=\"machine\"\n            onChange={(e, value) => {\n              formik.setFieldValue(\n                \"machine\",\n                value !== null ? value : initialFValues.machine\n              );\n            }}\n            value={formik.values.machine}\n            onBlur={formik.handleBlur}\n            options={machines}\n          />\n        </Grid>\n        <Grid item md={2} sm={4} xs={6}>\n          <Controls.Autocomplete\n            label=\"Unit\"\n            name=\"unit\"\n            \n            onChange={(e, value) => {\n              formik.setFieldValue(\n                \"unit\",\n                value !== null ? value : initialFValues.unit\n              );\n            }}\n            value={formik.values.unit}\n            onBlur={formik.handleBlur}\n            options={units}\n          />\n        </Grid>\n        <Grid item md={2} sm={4} xs={6}>\n          <Controls.Autocomplete\n            label=\"Line\"\n            name=\"line\"\n            \n            onChange={(e, value) => {\n              formik.setFieldValue(\n                \"line\",\n                value !== null ? value : initialFValues.line\n              );\n            }}\n            value={formik.values.line}\n            onBlur={formik.handleBlur}\n            options={lines}\n          />\n        </Grid>\n        <Grid item style={{ marginTop: 16 }} md={2} sm={4} xs={6}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default MachineHistoryForm;\n","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Popup.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/reports/FindMachinePositionForm.js",["596","597","598","599"],"import React, { useState, useEffect } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  useForm, \n  Form \n} from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\n// import Divider from \"@material-ui/core/Divider\";\n// import Typography from \"@material-ui/core/Typography\";\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import Select from \"@material-ui/core/Select\";\nimport { useFormik } from \"formik\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\n// import * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  // InputLabel,\n  // Icon,\n  Grid,\n  // Radio,\n  // RadioGroup,\n  // FormControl,\n  // MenuItem,\n  // TextField,\n  CircularProgress,\n  // FormHelperText,\n} from \"@material-ui/core\";\n// import { VerticalAlignCenter } from \"@material-ui/icons\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\n\nvar initialFValues = {\n  id: 0,\n  machine: \"\"\n};\n\n\nconst FindMachinePositionForm = (props) => {\n  const [machines, setMachines] = useState([]);\n\n  const { addOrEdit } = props;\n  const classes = style();\n\n\n  const formik = useFormik({\n    initialValues: initialFValues,\n    // validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n\n  useEffect(() => {\n\n    async function getMachineName() {\n      const response = await fetch(\"/api/active/machine/name/list/\");\n      const body = await response.json();\n      setMachines(body);\n    }\n    getMachineName();\n\n  }, []);\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n\n        <Grid item md={4} sm={2} xs={2}>\n        </Grid>\n\n        <Grid item md={2} sm={6} xs={6}>\n          <Controls.Autocomplete\n            label=\"Machine\"\n            name=\"machine\"\n            onChange={(e, value) => {\n              formik.setFieldValue(\n                \"machine\",\n                value !== null ? value : initialFValues.machine\n              );\n            }}\n            value={formik.values.machine}\n            onBlur={formik.handleBlur}\n            options={machines}\n          />\n        </Grid>\n\n        <Grid item style={{ marginTop: 16 }} md={2} sm={2} xs={2}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Find\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </Grid>\n        <Grid item md={4} sm={2} xs={2}>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default FindMachinePositionForm;\n","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/AddMachineToLineByBarcodeForm.js",["600","601","602","603","604","605","606","607","608","609","610","611"],"import React, { useEffect, useState } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport axios from \"axios\";\nimport {\n  CircularProgress,\n  Grid,\n  withStyles,\n  Tooltip,\n  IconButton,\n  Box,\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  MenuItem,\n  Select as MuiSelect\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\n\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nvar initialValues = {\n  id: 0,\n  unit: \"\",\n  line: \"\",\n  machine: \"\"\n};\n\n\nconst AddMachineToLineByBarcodeForm = (props) => {\n  const [units, setUnits] = useState([]);\n  const [lineNames, setLineNames] = useState([]);\n  const [lines, setLines] = useState([]);\n  const [Machines, setMachines] =useState([]);\n\n  const { addOrEdit, searchValue } = props;\n\n\n  const validationSchema = yup.object().shape({\n    line: yup.string().required(\"Line is required\"),\n  });\n\n  const classes = style();\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(false);\n      addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n  async function getMachineInfo() {\n    const AxiosHeader = {\n      headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n    };\n\n    try {\n      await axios\n        .get(\"/api/get/machine/\", { params:  {code: searchValue}  }, AxiosHeader )\n        .then((res) => {\n          setMachines(res.data);\n          formik.values.unit = Machines.current_unit_id;\n          formik.values.machine = Machines.id;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const lineFilter= ()=>{\n    setLines(lineNames.filter(line => line.unit===Machines.current_unit_id))\n  }\n\n\n  useEffect(() => {\n    async function getLines() {\n        const response = await fetch(\"/api/line/name/list/\",{\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n          },\n        });\n        const body = await response.json();\n        setLineNames(body);\n    }\n    getLines();\n  }, []);\n\n  useEffect(() => {\n    lineFilter();\n    getMachineInfo();\n  }, [ Machines.current_unit_id, searchValue]);\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n        <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item md={12} sm={12} xs={12} style={{textAlign: \"center\"}}>\n          <p>Unit: {Machines.current_unit_name}</p>\n          <p>Machine: {Machines.name}</p>\n        </Grid>\n          <Grid item md={12} sm={12} xs={12}>\n            <Controls.Select\n              label=\"Line\"\n              name=\"line\"\n              value={formik.values.line}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={lines}\n              error={formik.touched.line && Boolean(formik.errors.line)}\n              helperText={formik.touched.line && formik.errors.line}\n            />\n          </Grid>\n\n        </Grid>\n\n        <Grid item md={12} sm={12} xs={12}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={formik.resetForm}\n            />\n          </div>\n        </Grid> \n    </Form>\n  );\n};\n\nexport default AddMachineToLineByBarcodeForm;\n","/home/alim/Documents/ju-housing-rent-web/src/pages/machineMovement/AddMachineToLineForm.js",["612","613","614","615","616","617","618","619","620","621"],"import React, { useEffect, useState } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport {\n  CircularProgress,\n  Grid,\n  withStyles,\n  Tooltip,\n  IconButton,\n  Box,\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  MenuItem,\n  Select as MuiSelect\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\n\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nvar initialValues = {\n  id: 0,\n  unit: \"\",\n  line: \"\",\n  machine: \"\"\n};\n\n\nconst AddMachineToLineForm = (props) => {\n  const [units, setUnits] = useState([]);\n  const [lineNames, setLineNames] = useState([]);\n  const [lines, setLines] = useState([]);\n  const [MachineList, setMachineList] =useState([]);\n  const [Machines, setMachines] =useState([]);\n\n\n\n  const { addOrEdit } = props;\n\n\n  const validationSchema = yup.object().shape({\n    unit: yup.string().required(\"Unit is required\"),\n    line: yup.string().required(\"Line is required\"),\n    machine: yup.string().required(\"Machine is required\"),\n\n  });\n\n  const classes = style();\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(false);\n      addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n  const lineFilter= ()=>{\n    setLines(lineNames.filter(line => line.unit===formik.values.unit))\n  }\n\n  const machineFilter= ()=>{\n    setMachines(MachineList.filter(machine => machine.current_unit===formik.values.unit))\n  }\n\n  useEffect(() => {\n    async function getLines() {\n        const response = await fetch(\"/api/line/name/list/\", {headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },});\n        const body = await response.json();\n        setLineNames(body);\n    }\n    getLines();\n    async function getMachineNameList() {\n        const response = await fetch(\"/api/deActive/machine/name/list/\", {headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },});\n        const body = await response.json();\n        setMachineList(body);\n    }\n    getMachineNameList();\n    async function getUnits() {\n      const response = await fetch(\"/api/unit/name/list/\", {headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },});\n      const body = await response.json();\n      setUnits(body);\n    }\n    getUnits();\n}, []);\n\n  useEffect(() => {\n    lineFilter();\n    machineFilter();\n  }, [formik.values.unit]);\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n        <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item md={12} sm={12} xs={12}>\n            <Controls.Select\n              label=\"Unit\"\n              name=\"unit\"\n              value={formik.values.unit}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={units}\n              error={formik.touched.unit && Boolean(formik.errors.unit)}\n              helperText={formik.touched.unit && formik.errors.unit}\n            />\n          </Grid>\n          <Grid item md={12} sm={12} xs={12}>\n            <Controls.Select\n              label=\"Line\"\n              name=\"line\"\n              value={formik.values.line}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={lines}\n              error={formik.touched.line && Boolean(formik.errors.line)}\n              helperText={formik.touched.line && formik.errors.line}\n            />\n          </Grid>\n\n          <Grid item md={12} sm={12} xs={12}>\n            <Controls.Select\n              label=\"Machine\"\n              name=\"machine\"\n              value={formik.values.machine}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={Machines}\n              error={formik.touched.machine && Boolean(formik.errors.machine)}\n              helperText={formik.touched.machine && formik.errors.machine}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item md={12} sm={12} xs={12}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={formik.resetForm}\n            />\n          </div>\n        </Grid> \n    </Form>\n  );\n};\n\nexport default AddMachineToLineForm;\n","/home/alim/Documents/ju-housing-rent-web/src/components/FullScreenPopup/FullScreenPopup.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Barcode/BarcodeScanner.js",["622"],"import React from \"react\";\n// import BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\n\nfunction BarcodeScanner(props) {\n  const { setOpen, setSearchValue, setOpenPopup2 } = props;\n\n  const [data, setData] = React.useState(\"Please show barcode to scan\");\n\n  return (\n    <>\n      <BarcodeScannerComponent\n        style={{ textAlign: \"center\" }}\n        width={\"100%\"}\n        height={500}\n        onUpdate={(err, result) => {\n          \n          if (result) {\n            if (data == \"Please show barcode to scan\") {\n              if (result.text.length ===13){\n                setData(\"Barcode Found: \" +  result.text );\n                setOpenPopup2(true);\n                setSearchValue(result.text);\n                setTimeout(function() {\n                  setOpen(false)\n              }, 100);\n                // setOpen(false)\n              }\n            }\n          }\n        }}\n      />\n      <p style={{ textAlign: \"center\" }}>{data}</p>\n    </>\n  );\n}\n\nexport default BarcodeScanner;\n","/home/alim/Documents/ju-housing-rent-web/src/components/FormDialog/FormDialog.js",[],"/home/alim/Documents/ju-housing-rent-web/src/utils/AxiosHeader.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/BreadCrumb/BreadCrumb.jsx",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/typography/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Wrappers/Wrappers.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Widget/Widget.js",["623","624","625"],"import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nexport default function Widget({\n  children,\n  title,\n  noBodyPadding,\n  bodyClass,\n  disableWidgetMenu,\n  header,\n  noHeaderPadding,\n  headerClass,\n  style,\n  noWidgetShadow,\n  ...props\n}) {\n  var classes = useStyles();\n\n  // local\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\n\n  return (\n    <div className={classes.widgetWrapper} style={style && {...style}}>\n      <Paper className={classes.paper} classes={{ root: classnames(classes.widgetRoot, {\n        [classes.noWidgetShadow]: noWidgetShadow\n        }) }}>\n        <div className={classnames(classes.widgetHeader, {\n          [classes.noPadding]: noHeaderPadding,\n          [headerClass]: headerClass\n        })}>\n          {header ? (\n            header\n          ) : (\n            <React.Fragment>\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\n                {title}\n              </Typography>\n              {/* {!disableWidgetMenu && (\n                <IconButton\n                  color=\"primary\"\n                  classes={{ root: classes.moreButton }}\n                  aria-owns=\"widget-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={() => setMoreMenuOpen(true)}\n                  buttonRef={setMoreButtonRef}\n                >\n                  <MoreIcon />\n                </IconButton>\n              )} */}\n            </React.Fragment>\n          )}\n        </div>\n        <div\n          className={classnames(classes.widgetBody, {\n            [classes.noPadding]: noBodyPadding,\n            [bodyClass]: bodyClass,\n          })}\n        >\n          {children}\n        </div>\n      </Paper>\n      <Menu\n        id=\"widget-menu\"\n        open={isMoreMenuOpen}\n        anchorEl={moreButtonRef}\n        onClose={() => setMoreMenuOpen(false)}\n        disableAutoFocusItem\n      >\n        <MenuItem>\n          <Typography>Edit</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Copy</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Delete</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Print</Typography>\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/PageTitle.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/icons/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Header/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Notification/Notification.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/mock.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/Table/Table.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/BigStat.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/Dot.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/UserAvatar.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/maps/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexHeatmap.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Widget/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Notification/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexLineChart.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Upload.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/machines/MachineForm.js",["626","627","628","629","630","631","632","633","634","635","636","637","638","639"],"import React, { useState, useEffect } from \"react\";\nimport { useForm, Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  InputLabel,\n  Icon,\n  Grid,\n  Radio,\n  RadioGroup,\n  FormControl,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { VerticalAlignCenter } from \"@material-ui/icons\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialFValues = {\n  id: 0,\n  // name: \"\",\n  model_no: \"\",\n  parent_unit: \"\",\n  category: \"\",\n  type: \"\",\n  brand: \"zc\",\n  supplier: \"sfd\",\n  acquisition_value: \"345\",\n  acquisition_date: new Date(),\n  warranty_start: new Date(),\n  warranty_end: new Date(),\n  warranty_details: \"sddf\",\n  factory_serial_no: \"34\",\n  manufacture_serial_no: \"345\",\n  location: \"sdf\",\n  air_consumption: \"gfh\",\n  steam_consumption: \"sfew\",\n  watt_consumption: \"dsfs\",\n  start_date: new Date(),\n  description: \"sfds\",\n  remark: \"sf\",\n};\n\n\nconst MachineForm = (props) => {\n  const [categories, setCategories] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [units, setUnits] = useState([]);\n\n\n  const { addOrEdit, recordForEdit, fabricList } = props;\n\n  const validationSchema = yup.object().shape({\n    model_no: yup.string().required(\"Model No is required\"),\n    parent_unit: yup.string().required(\"Parent Unit is required\"),\n    category: yup.string().required(\"Please select a category\"),\n    type: yup.string().required(\"Type is required\"),\n    brand: yup.string().required(\"Brand is required\"),\n    warranty_details: yup.string().required(\"Warranty details is required\"),\n  });\n\n  \n\n  const { values, setValues, handleChange } = useForm(initialFValues);\n\n  const classes = style();  \n\n  const formik = useFormik({\n    initialValues: initialFValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n        setSubmitting(false);\n        addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      formik.setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n  useEffect(() => {\n    async function getCategory() {\n      const response = await fetch(\"/api/machine/category/list/\", {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n    });\n      const body = await response.json();\n      setCategories(body);\n    }\n    getCategory();\n\n    async function getTypes() {\n      const response = await fetch(\"/api/machine/type/list/\", {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n      });\n      const body = await response.json();\n      setTypes(body);\n    }\n    getTypes();\n\n    async function getUnits() {\n      const response = await fetch(\"/api/unit/name/list/\", {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n      });\n      const body = await response.json();\n      setUnits(body);\n    }\n    getUnits();\n\n  }, []);\n\n\n  // const generateUniqueName = ()=>{\n  //   let model_no = formik.values.model_no\n  //   let unit_id = formik.values.parent_unit\n  //   var unique_name = \"\";\n\n  //   if(model_no && unit_id){\n  //     unique_name += model_no + \"-\" + unit_id\n  //   }else if(model_no){\n  //     unique_name += model_no\n  //   }else{\n  //     unique_name += unit_id\n  //   }\n  //   formik.values.name = unique_name\n  //   return unique_name\n  // }\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={1}>\n      <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Model No\"\n            name=\"model_no\"\n            value={formik.values.model_no}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.model_no && Boolean(formik.errors.model_no)}\n            helperText={formik.touched.model_no && formik.errors.model_no}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Select\n            label=\"Unit\"\n            name=\"parent_unit\"\n            value={formik.values.parent_unit}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            options={units}\n            error={formik.touched.parent_unit && Boolean(formik.errors.parent_unit)}\n            helperText={formik.touched.parent_unit && formik.errors.parent_unit}\n          />\n        </Grid>\n        {/* <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Unique Name\"\n            name=\"name\"\n            value={generateUniqueName()}\n            onChange={formik.handleChange}\n            InputProps={{\n              readOnly: true,\n            }}\n            fullWidth\n          />\n        </Grid> */}\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Select\n            label=\"Category\"\n            name=\"category\"\n            value={formik.values.category}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            options={categories}\n            error={formik.touched.category && Boolean(formik.errors.category)}\n            helperText={formik.touched.category && formik.errors.category}\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Select\n            label=\"Type\"\n            name=\"type\"\n            value={formik.values.type}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            options={types}\n            error={formik.touched.type && Boolean(formik.errors.type)}\n            helperText={formik.touched.type && formik.errors.type}\n          />\n        </Grid>\n        <Grid item md={4} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Brand\"\n            name=\"brand\"\n            value={formik.values.brand}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.brand && Boolean(formik.errors.brand)}\n            helperText={formik.touched.brand && formik.errors.brand}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={4} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Supplier\"\n            name=\"supplier\"\n            value={formik.values.supplier}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.supplier && Boolean(formik.errors.supplier)}\n            helperText={formik.touched.supplier && formik.errors.supplier}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={4} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Acquisition Value\"\n            name=\"acquisition_value\"\n            value={formik.values.acquisition_value}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            type='number'\n            error={formik.touched.acquisition_value && Boolean(formik.errors.acquisition_value)}\n            helperText={formik.touched.acquisition_value && formik.errors.acquisition_value}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={4} sm={4} xs={6}>\n          <Controls.DatePicker\n              label=\"Acquisition Date\"\n              name=\"acquisition_date\"\n              value={formik.values.acquisition_date}\n              onChange={value => {\n                formik.setFieldValue(\"acquisition_date\", value)\n              }}\n              onBlur={formik.handleBlur}\n              fullWidth\n            />\n        </Grid>\n        <Grid item md={4} sm={4} xs={6}>\n          <Controls.DatePicker\n              label=\"Warranty Start\"\n              name=\"warranty_start\"\n              value={formik.values.warranty_start}\n              onChange={value => {\n                formik.setFieldValue(\"warranty_start\", value)\n              }}\n              onBlur={formik.handleBlur}\n              fullWidth\n            />\n        </Grid>\n        <Grid item md={4} sm={4} xs={6}>\n          <Controls.DatePicker\n              label=\"Warranty End\"\n              name=\"warranty_end\"\n              value={formik.values.warranty_end}\n              onChange={value => {\n                formik.setFieldValue(\"warranty_end\", value)\n              }}\n              onBlur={formik.handleBlur}\n              fullWidth\n            />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Warranty Details\"\n            name=\"warranty_details\"\n            value={formik.values.warranty_details}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.warranty_details && Boolean(formik.errors.warranty_details)}\n            helperText={formik.touched.warranty_details && formik.errors.warranty_details}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Factory Serial No\"\n            name=\"factory_serial_no\"\n            type=\"number\"\n            value={formik.values.factory_serial_no}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.factory_serial_no && Boolean(formik.errors.factory_serial_no)}\n            helperText={formik.touched.factory_serial_no && formik.errors.factory_serial_no}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Manufacture Serial No\"\n            name=\"manufacture_serial_no\"\n            value={formik.values.manufacture_serial_no}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.manufacture_serial_no && Boolean(formik.errors.manufacture_serial_no)}\n            helperText={formik.touched.manufacture_serial_no && formik.errors.manufacture_serial_no}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Location\"\n            name=\"location\"\n            value={formik.values.location}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.location && Boolean(formik.errors.location)}\n            helperText={formik.touched.location && formik.errors.location}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Air Consumption\"\n            name=\"air_consumption\"\n            value={formik.values.air_consumption}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.air_consumption && Boolean(formik.errors.air_consumption)}\n            helperText={formik.touched.air_consumption && formik.errors.air_consumption}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Steam Consumption\"\n            name=\"steam_consumption\"\n            value={formik.values.steam_consumption}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.steam_consumption && Boolean(formik.errors.steam_consumption)}\n            helperText={formik.touched.steam_consumption && formik.errors.steam_consumption}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Watt Consumption\"\n            name=\"watt_consumption\"\n            value={formik.values.watt_consumption}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.watt_consumption && Boolean(formik.errors.watt_consumption)}\n            helperText={formik.touched.watt_consumption && formik.errors.watt_consumption}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.DatePicker\n              label=\"Start Date\"\n              name=\"start_date\"\n              value={formik.values.start_date}\n              onChange={value => {\n                formik.setFieldValue(\"start_date\", value)\n              }}\n              onBlur={formik.handleBlur}\n              fullWidth\n            />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Description\"\n            name=\"description\"\n            value={formik.values.description}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={\n              formik.touched.description &&\n              Boolean(formik.errors.description)\n            }\n            helperText={\n              formik.touched.description && formik.errors.description\n            }\n            fullWidth\n            multiline\n            rows={2}\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Remark\"\n            name=\"remark\"\n            value={formik.values.remark}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.remark && Boolean(formik.errors.remark)}\n            helperText={formik.touched.remark && formik.errors.remark}\n            fullWidth\n            multiline\n            rows={2}\n          />\n        </Grid>\n        <Grid item style={{ marginTop: 10 }}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={formik.resetForm}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default MachineForm;\n","/home/alim/Documents/ju-housing-rent-web/src/components/Barcode/FabricBarcode.js",["640","641"],"import React from \"react\";\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n} from \"@material-ui/core\";\nimport Image from \"material-ui-image\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst getMuiTheme = () => createMuiTheme({\n  overrides: {\n\n    MuiTableCell: {\n      root: {\n          padding: '0px',\n      },\n      sizeSmall:{\n        padding: \"1px 14px\",\n      }\n    },\n  },\n\n  typography: {\n    \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    \"fontSize\": 12,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n   }\n})\nclass SingleBarcode extends React.PureComponent {\n\n  render() {\n    return (\n      <MuiThemeProvider theme={getMuiTheme()}>\n        <div style={{display: \"inline-flex\", width: \"240px\"}}>\n          <Box p={1} width={1}>\n          <TableContainer component={Paper} variant=\"outlined\" elevation={0} >\n            <Table size=\"small\" aria-label=\"simple table\">\n              <TableBody>\n                  <Image src={this.props.fabricDetails.barcode} aspectRatio=\"1/3\" />\n              </TableBody>\n            </Table>\n          </TableContainer>\n          </Box>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default SingleBarcode;\n","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileUpdateForm.js",["642","643","644","645"],"import React, { useEffect, useState } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport {\n  Paper,\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialValues = {\n  id: 0,\n  password: \"\",\n  password2: \"\",\n};\n\nvar passwordHold = \"\";\nconst ProfileUpdateForm = (props) => {\n  var userId = localStorage.getItem('id');\n  const [passwordMissMatchError, setPasswordMissMatchError] = useState(\"\")\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const validationSchema = yup.object().shape({\n    password: yup.string().required(\"Password is required\")\n    .test((values)=>{\n      passwordHold = values\n      return true\n    }),\n    password2: yup.string().required(\"Confirm Password is required\")\n    .test(\"Confirm\", \"Confirm password doesn't match!\", (values) => {\n      if(passwordHold === values){\n        return true\n      }\n      return false\n    }),\n  });\n\n  const classes = style();\n\n  const updatePassword = async (values, setSubmitting) => {\n    const requestOptions = {\n      headers: {\n        method: \"PUT\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    };\n\n    try {\n      await axios\n        .put(`/api/change_password/${userId}/`, values, {\n          requestOptions,\n        })\n        .then((resp) => {\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addOrEdit = (password, resetForm, setSubmitting) => {\n    if (password.id === 0) updatePassword(password, setSubmitting);\n    resetForm();\n    setNotify({\n      isOpen: true,\n      message: \"Password changed\",\n      type: \"success\",\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      addOrEdit(values, resetForm, setSubmitting)\n    },\n  });\n\n\n  return (\n    <div>\n            <Form onSubmit={formik.handleSubmit}>\n              <Grid  container style={{ paddingLeft: 16, paddingRight: 16, paddingBottom: 24 }}>\n                <Paper elevation={3} square={false} style={{ padding: 24, paddingBottom: 24 }}>\n                  <Grid container alignItems=\"center\" spacing={2}>\n                      <Grid item md={12} sm={12} xs={12}>\n                        <Controls.Input\n                            label=\"New Password\"\n                            name=\"password\"\n                            id=\"password\"\n                            type=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                            fullWidth\n                        />\n                      </Grid>\n                      <Grid item md={12} sm={12} xs={12}>\n                        <Controls.Input\n                            label=\"Confirm Password\"\n                            name=\"password2\"\n                            type=\"password\"\n                            value={formik.values.password2}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                            helperText={formik.touched.password2 && formik.errors.password2}\n                            fullWidth\n                        />\n                      </Grid>\n                      {/* <Grid item md={12} sm={12} xs={12} style={{color: 'red'}}>\n                        <p style={{fontSize: \"15px\", margin: \"0px\"}}>{passwordMissMatchError.length > 0 ? passwordMissMatchError : null}</p>\n                      </Grid> */}\n                      <Grid item md={12} sm={12} xs={12}>\n                        <div className={classes.wrapper}>\n                            <Controls.Button\n                            type=\"submit\"\n                            disabled={formik.isSubmitting}\n                            text=\"Change Password\"\n                            />\n                        </div>\n                      </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n            </Form>\n          <Notification notify={notify} setNotify={setNotify} />\n        </div>\n  );\n};\n\nexport default ProfileUpdateForm;\n","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileForm.js",["646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661"],"import React, { useState, useEffect } from \"react\";\nimport { useForm, Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  InputLabel,\n  Icon,\n  Grid,\n  Radio,\n  RadioGroup,\n  FormControl,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { VerticalAlignCenter } from \"@material-ui/icons\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialFValues = {\n  id: 0,\n  first_name: \"\",\n  last_name: \"\",\n  email: \"\",\n  phone: \"\",\n  nid: \"\",\n  passport: \"\",\n  present_address: \"\",\n  permanent_address: \"\",\n  birthday: new Date(),\n  married_status: \"\",\n  occupation: \"\",\n  occupation_institution: \"\",\n  religion: \"\",\n  education_qualification: \"\",\n};\n\n\nconst ProfileForm = (props) => {\n  const [categories, setCategories] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [units, setUnits] = useState([]);\n\n\n  const { addOrEdit, recordForEdit, fabricList } = props;\n\n  const validationSchema = yup.object().shape({\n    model_no: yup.string().required(\"Model No is required\"),\n    parent_unit: yup.string().required(\"Parent Unit is required\"),\n    category: yup.string().required(\"Please select a category\"),\n    type: yup.string().required(\"Type is required\"),\n    brand: yup.string().required(\"Brand is required\"),\n    warranty_details: yup.string().required(\"Warranty details is required\"),\n  });\n\n  \n\n  const { values, setValues, handleChange } = useForm(initialFValues);\n\n  const classes = style();  \n\n  const formik = useFormik({\n    initialValues: initialFValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n        setSubmitting(false);\n        addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      formik.setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n  useEffect(() => {\n    async function getCategory() {\n      const response = await fetch(\"/api/machine/category/list/\", {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n    });\n      const body = await response.json();\n      setCategories(body);\n    }\n    getCategory();\n\n    async function getTypes() {\n      const response = await fetch(\"/api/machine/type/list/\", {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n      });\n      const body = await response.json();\n      setTypes(body);\n    }\n    getTypes();\n\n    async function getUnits() {\n      const response = await fetch(\"/api/unit/name/list/\", {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n      });\n      const body = await response.json();\n      setUnits(body);\n    }\n    getUnits();\n\n  }, []);\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={1}>\n      <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"First Name\"\n            name=\"first_name\"\n            value={formik.values.first_name}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.first_name && Boolean(formik.errors.first_name)}\n            helperText={formik.touched.first_name && formik.errors.first_name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Last Name\"\n            name=\"last_name\"\n            value={formik.values.last_name}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n            helperText={formik.touched.last_name && formik.errors.last_name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            type='number'\n            error={formik.touched.phone && Boolean(formik.errors.phone)}\n            helperText={formik.touched.phone && formik.errors.phone}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.DatePicker\n              label=\"Birthday\"\n              name=\"birthday\"\n              value={formik.values.birthday}\n              onChange={value => {\n                formik.setFieldValue(\"birthday\", value)\n              }}\n              onBlur={formik.handleBlur}\n              fullWidth\n            />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"NID\"\n            name=\"nid\"\n            value={formik.values.nid}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.nid && Boolean(formik.errors.nid)}\n            helperText={formik.touched.nid && formik.errors.nid}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Passport\"\n            name=\"passport\"\n            value={formik.values.passport}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.passport && Boolean(formik.errors.passport)}\n            helperText={formik.touched.passport && formik.errors.passport}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Select\n              label=\"Married Status\"\n              name=\"married_status\"\n              value={formik.values.married_status}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={units}\n              error={formik.touched.married_status && Boolean(formik.errors.married_status)}\n              helperText={formik.touched.married_status && formik.errors.married_status}\n            />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Occupation\"\n            name=\"occupation\"\n            value={formik.values.occupation}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.occupation && Boolean(formik.errors.occupation)}\n            helperText={formik.touched.occupation && formik.errors.occupation}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Occupation Institution\"\n            name=\"occupation_institution\"\n            value={formik.values.occupation_institution}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.occupation_institution && Boolean(formik.errors.occupation_institution)}\n            helperText={formik.touched.occupation_institution && formik.errors.occupation_institution}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Education Qualification\"\n            name=\"education_qualification\"\n            value={formik.values.education_qualification}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.education_qualification && Boolean(formik.errors.education_qualification)}\n            helperText={formik.touched.education_qualification && formik.errors.education_qualification}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Select\n              label=\"Religion\"\n              name=\"religion\"\n              value={formik.values.religion}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={units}\n              error={formik.touched.religion && Boolean(formik.errors.religion)}\n              helperText={formik.touched.religion && formik.errors.religion}\n            />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Present Address\"\n            name=\"present_address\"\n            value={formik.values.present_address}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.present_address && Boolean(formik.errors.present_address)}\n            helperText={formik.touched.present_address && formik.errors.present_address}\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Permanent Address\"\n            name=\"permanent_address\"\n            value={formik.values.permanent_address}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.permanent_address && Boolean(formik.errors.permanent_address)}\n            helperText={formik.touched.permanent_address && formik.errors.permanent_address}\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item style={{ marginTop: 10 }}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={formik.resetForm}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default ProfileForm;\n","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Input.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Table/useTable.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMember.js",["662","663","664","665","666"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMemberForm.js",["667"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContact.js",["668","669","670","671","672"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContactForm.js",["673"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HouseCleanerForm.js",["674"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/DriverForm.js",["675"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HomeDriver.js",["676","677","678","679","680"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HomeCleaner.js",["681","682","683","684","685"],{"ruleId":"686","replacedBy":"687"},{"ruleId":"688","replacedBy":"689"},{"ruleId":"690","severity":1,"message":"691","line":6,"column":3,"nodeType":"692","messageId":"693","endLine":6,"endColumn":9},{"ruleId":"690","severity":1,"message":"694","line":17,"column":8,"nodeType":"692","messageId":"693","endLine":17,"endColumn":18},{"ruleId":"690","severity":1,"message":"695","line":21,"column":8,"nodeType":"692","messageId":"693","endLine":21,"endColumn":20},{"ruleId":"690","severity":1,"message":"696","line":29,"column":8,"nodeType":"692","messageId":"693","endLine":29,"endColumn":14},{"ruleId":"690","severity":1,"message":"697","line":32,"column":27,"nodeType":"692","messageId":"693","endLine":32,"endColumn":36},{"ruleId":"690","severity":1,"message":"698","line":83,"column":8,"nodeType":"692","messageId":"693","endLine":83,"endColumn":17},{"ruleId":"690","severity":1,"message":"699","line":83,"column":19,"nodeType":"692","messageId":"693","endLine":83,"endColumn":31},{"ruleId":"690","severity":1,"message":"700","line":84,"column":8,"nodeType":"692","messageId":"693","endLine":84,"endColumn":18},{"ruleId":"690","severity":1,"message":"701","line":84,"column":20,"nodeType":"692","messageId":"693","endLine":84,"endColumn":33},{"ruleId":"690","severity":1,"message":"702","line":85,"column":8,"nodeType":"692","messageId":"693","endLine":85,"endColumn":21},{"ruleId":"690","severity":1,"message":"703","line":85,"column":23,"nodeType":"692","messageId":"693","endLine":85,"endColumn":39},{"ruleId":"704","severity":1,"message":"705","line":250,"column":17,"nodeType":"706","messageId":"707","endLine":250,"endColumn":87,"fix":"708"},{"ruleId":"709","severity":1,"message":"710","line":308,"column":53,"nodeType":"711","messageId":"712","endLine":308,"endColumn":54},{"ruleId":"709","severity":1,"message":"710","line":484,"column":56,"nodeType":"711","messageId":"712","endLine":484,"endColumn":57},{"ruleId":"690","severity":1,"message":"713","line":1,"column":8,"nodeType":"692","messageId":"693","endLine":1,"endColumn":13},{"ruleId":"690","severity":1,"message":"714","line":1,"column":17,"nodeType":"692","messageId":"693","endLine":1,"endColumn":27},{"ruleId":"690","severity":1,"message":"715","line":8,"column":12,"nodeType":"692","messageId":"693","endLine":8,"endColumn":18},{"ruleId":"690","severity":1,"message":"716","line":2,"column":8,"nodeType":"692","messageId":"693","endLine":2,"endColumn":18},{"ruleId":"690","severity":1,"message":"717","line":3,"column":8,"nodeType":"692","messageId":"693","endLine":3,"endColumn":18},{"ruleId":"690","severity":1,"message":"718","line":5,"column":10,"nodeType":"692","messageId":"693","endLine":5,"endColumn":14},{"ruleId":"690","severity":1,"message":"719","line":7,"column":8,"nodeType":"692","messageId":"693","endLine":7,"endColumn":21},{"ruleId":"690","severity":1,"message":"720","line":17,"column":3,"nodeType":"692","messageId":"693","endLine":17,"endColumn":6},{"ruleId":"690","severity":1,"message":"721","line":19,"column":8,"nodeType":"692","messageId":"693","endLine":19,"endColumn":28},{"ruleId":"690","severity":1,"message":"722","line":20,"column":10,"nodeType":"692","messageId":"693","endLine":20,"endColumn":27},{"ruleId":"690","severity":1,"message":"723","line":26,"column":19,"nodeType":"692","messageId":"693","endLine":26,"endColumn":29},{"ruleId":"690","severity":1,"message":"724","line":28,"column":9,"nodeType":"692","messageId":"693","endLine":28,"endColumn":20},{"ruleId":"690","severity":1,"message":"725","line":3,"column":8,"nodeType":"692","messageId":"693","endLine":3,"endColumn":25},{"ruleId":"726","severity":1,"message":"727","line":111,"column":19,"nodeType":"728","messageId":"729","endLine":161,"endColumn":4},{"ruleId":"690","severity":1,"message":"730","line":37,"column":10,"nodeType":"692","messageId":"693","endLine":37,"endColumn":23},{"ruleId":"731","severity":1,"message":"732","line":61,"column":6,"nodeType":"728","endLine":61,"endColumn":21,"suggestions":"733"},{"ruleId":"731","severity":1,"message":"734","line":125,"column":6,"nodeType":"728","endLine":125,"endColumn":23,"suggestions":"735"},{"ruleId":"690","severity":1,"message":"722","line":19,"column":10,"nodeType":"692","messageId":"693","endLine":19,"endColumn":27},{"ruleId":"690","severity":1,"message":"736","line":2,"column":8,"nodeType":"692","messageId":"693","endLine":2,"endColumn":12},{"ruleId":"690","severity":1,"message":"737","line":5,"column":10,"nodeType":"692","messageId":"693","endLine":5,"endColumn":16},{"ruleId":"690","severity":1,"message":"738","line":7,"column":8,"nodeType":"692","messageId":"693","endLine":7,"endColumn":18},{"ruleId":"690","severity":1,"message":"739","line":8,"column":8,"nodeType":"692","messageId":"693","endLine":8,"endColumn":25},{"ruleId":"690","severity":1,"message":"740","line":12,"column":8,"nodeType":"692","messageId":"693","endLine":12,"endColumn":20},{"ruleId":"690","severity":1,"message":"741","line":13,"column":8,"nodeType":"692","messageId":"693","endLine":13,"endColumn":17},{"ruleId":"690","severity":1,"message":"742","line":20,"column":3,"nodeType":"692","messageId":"693","endLine":20,"endColumn":18},{"ruleId":"690","severity":1,"message":"743","line":21,"column":3,"nodeType":"692","messageId":"693","endLine":21,"endColumn":15},{"ruleId":"690","severity":1,"message":"744","line":22,"column":3,"nodeType":"692","messageId":"693","endLine":22,"endColumn":14},{"ruleId":"690","severity":1,"message":"745","line":24,"column":8,"nodeType":"692","messageId":"693","endLine":24,"endColumn":16},{"ruleId":"690","severity":1,"message":"746","line":25,"column":8,"nodeType":"692","messageId":"693","endLine":25,"endColumn":16},{"ruleId":"690","severity":1,"message":"747","line":27,"column":8,"nodeType":"692","messageId":"693","endLine":27,"endColumn":14},{"ruleId":"690","severity":1,"message":"748","line":28,"column":8,"nodeType":"692","messageId":"693","endLine":28,"endColumn":23},{"ruleId":"690","severity":1,"message":"749","line":30,"column":8,"nodeType":"692","messageId":"693","endLine":30,"endColumn":22},{"ruleId":"690","severity":1,"message":"750","line":91,"column":23,"nodeType":"692","messageId":"693","endLine":91,"endColumn":37},{"ruleId":"690","severity":1,"message":"751","line":92,"column":22,"nodeType":"692","messageId":"693","endLine":92,"endColumn":35},{"ruleId":"690","severity":1,"message":"752","line":93,"column":10,"nodeType":"692","messageId":"693","endLine":93,"endColumn":17},{"ruleId":"690","severity":1,"message":"753","line":93,"column":19,"nodeType":"692","messageId":"693","endLine":93,"endColumn":29},{"ruleId":"690","severity":1,"message":"754","line":95,"column":10,"nodeType":"692","messageId":"693","endLine":95,"endColumn":18},{"ruleId":"690","severity":1,"message":"755","line":95,"column":20,"nodeType":"692","messageId":"693","endLine":95,"endColumn":31},{"ruleId":"690","severity":1,"message":"756","line":101,"column":10,"nodeType":"692","messageId":"693","endLine":101,"endColumn":14},{"ruleId":"690","severity":1,"message":"757","line":101,"column":16,"nodeType":"692","messageId":"693","endLine":101,"endColumn":23},{"ruleId":"690","severity":1,"message":"758","line":102,"column":10,"nodeType":"692","messageId":"693","endLine":102,"endColumn":16},{"ruleId":"690","severity":1,"message":"759","line":102,"column":18,"nodeType":"692","messageId":"693","endLine":102,"endColumn":27},{"ruleId":"690","severity":1,"message":"760","line":104,"column":10,"nodeType":"692","messageId":"693","endLine":104,"endColumn":15},{"ruleId":"690","severity":1,"message":"761","line":110,"column":10,"nodeType":"692","messageId":"693","endLine":110,"endColumn":23},{"ruleId":"690","severity":1,"message":"762","line":110,"column":25,"nodeType":"692","messageId":"693","endLine":110,"endColumn":41},{"ruleId":"690","severity":1,"message":"763","line":117,"column":23,"nodeType":"692","messageId":"693","endLine":117,"endColumn":30},{"ruleId":"690","severity":1,"message":"764","line":117,"column":32,"nodeType":"692","messageId":"693","endLine":117,"endColumn":44},{"ruleId":"731","severity":1,"message":"765","line":191,"column":6,"nodeType":"728","endLine":191,"endColumn":32,"suggestions":"766"},{"ruleId":"767","severity":1,"message":"768","line":296,"column":27,"nodeType":"769","messageId":"770","endLine":296,"endColumn":29},{"ruleId":"767","severity":1,"message":"768","line":332,"column":19,"nodeType":"769","messageId":"770","endLine":332,"endColumn":21},{"ruleId":"690","severity":1,"message":"771","line":4,"column":8,"nodeType":"692","messageId":"693","endLine":4,"endColumn":16},{"ruleId":"767","severity":1,"message":"768","line":171,"column":27,"nodeType":"769","messageId":"770","endLine":171,"endColumn":29},{"ruleId":"690","severity":1,"message":"772","line":2,"column":8,"nodeType":"692","messageId":"693","endLine":2,"endColumn":15},{"ruleId":"690","severity":1,"message":"771","line":4,"column":8,"nodeType":"692","messageId":"693","endLine":4,"endColumn":16},{"ruleId":"690","severity":1,"message":"691","line":7,"column":8,"nodeType":"692","messageId":"693","endLine":7,"endColumn":14},{"ruleId":"690","severity":1,"message":"773","line":8,"column":8,"nodeType":"692","messageId":"693","endLine":8,"endColumn":18},{"ruleId":"690","severity":1,"message":"695","line":9,"column":8,"nodeType":"692","messageId":"693","endLine":9,"endColumn":20},{"ruleId":"690","severity":1,"message":"774","line":10,"column":22,"nodeType":"692","messageId":"693","endLine":10,"endColumn":29},{"ruleId":"690","severity":1,"message":"775","line":11,"column":8,"nodeType":"692","messageId":"693","endLine":11,"endColumn":28},{"ruleId":"767","severity":1,"message":"768","line":127,"column":27,"nodeType":"769","messageId":"770","endLine":127,"endColumn":29},{"ruleId":"690","severity":1,"message":"772","line":2,"column":8,"nodeType":"692","messageId":"693","endLine":2,"endColumn":15},{"ruleId":"690","severity":1,"message":"771","line":4,"column":8,"nodeType":"692","messageId":"693","endLine":4,"endColumn":16},{"ruleId":"690","severity":1,"message":"691","line":7,"column":8,"nodeType":"692","messageId":"693","endLine":7,"endColumn":14},{"ruleId":"690","severity":1,"message":"773","line":8,"column":8,"nodeType":"692","messageId":"693","endLine":8,"endColumn":18},{"ruleId":"690","severity":1,"message":"695","line":9,"column":8,"nodeType":"692","messageId":"693","endLine":9,"endColumn":20},{"ruleId":"690","severity":1,"message":"774","line":10,"column":22,"nodeType":"692","messageId":"693","endLine":10,"endColumn":29},{"ruleId":"690","severity":1,"message":"775","line":11,"column":8,"nodeType":"692","messageId":"693","endLine":11,"endColumn":28},{"ruleId":"690","severity":1,"message":"776","line":54,"column":11,"nodeType":"692","messageId":"693","endLine":54,"endColumn":25},{"ruleId":"731","severity":1,"message":"777","line":95,"column":6,"nodeType":"728","endLine":95,"endColumn":20,"suggestions":"778"},{"ruleId":"767","severity":1,"message":"768","line":155,"column":27,"nodeType":"769","messageId":"770","endLine":155,"endColumn":29},{"ruleId":"690","severity":1,"message":"772","line":2,"column":8,"nodeType":"692","messageId":"693","endLine":2,"endColumn":15},{"ruleId":"690","severity":1,"message":"771","line":4,"column":8,"nodeType":"692","messageId":"693","endLine":4,"endColumn":16},{"ruleId":"690","severity":1,"message":"691","line":7,"column":8,"nodeType":"692","messageId":"693","endLine":7,"endColumn":14},{"ruleId":"690","severity":1,"message":"773","line":8,"column":8,"nodeType":"692","messageId":"693","endLine":8,"endColumn":18},{"ruleId":"690","severity":1,"message":"695","line":9,"column":8,"nodeType":"692","messageId":"693","endLine":9,"endColumn":20},{"ruleId":"690","severity":1,"message":"774","line":10,"column":22,"nodeType":"692","messageId":"693","endLine":10,"endColumn":29},{"ruleId":"690","severity":1,"message":"775","line":11,"column":8,"nodeType":"692","messageId":"693","endLine":11,"endColumn":28},{"ruleId":"767","severity":1,"message":"768","line":148,"column":27,"nodeType":"769","messageId":"770","endLine":148,"endColumn":29},{"ruleId":"690","severity":1,"message":"772","line":2,"column":8,"nodeType":"692","messageId":"693","endLine":2,"endColumn":15},{"ruleId":"690","severity":1,"message":"771","line":4,"column":8,"nodeType":"692","messageId":"693","endLine":4,"endColumn":16},{"ruleId":"690","severity":1,"message":"691","line":7,"column":8,"nodeType":"692","messageId":"693","endLine":7,"endColumn":14},{"ruleId":"690","severity":1,"message":"773","line":8,"column":8,"nodeType":"692","messageId":"693","endLine":8,"endColumn":18},{"ruleId":"690","severity":1,"message":"695","line":9,"column":8,"nodeType":"692","messageId":"693","endLine":9,"endColumn":20},{"ruleId":"690","severity":1,"message":"774","line":10,"column":22,"nodeType":"692","messageId":"693","endLine":10,"endColumn":29},{"ruleId":"690","severity":1,"message":"775","line":11,"column":8,"nodeType":"692","messageId":"693","endLine":11,"endColumn":28},{"ruleId":"690","severity":1,"message":"779","line":13,"column":10,"nodeType":"692","messageId":"693","endLine":13,"endColumn":14},{"ruleId":"690","severity":1,"message":"780","line":14,"column":36,"nodeType":"692","messageId":"693","endLine":14,"endColumn":48},{"ruleId":"690","severity":1,"message":"781","line":15,"column":9,"nodeType":"692","messageId":"693","endLine":15,"endColumn":20},{"ruleId":"731","severity":1,"message":"777","line":90,"column":6,"nodeType":"728","endLine":90,"endColumn":20,"suggestions":"782"},{"ruleId":"767","severity":1,"message":"768","line":150,"column":27,"nodeType":"769","messageId":"770","endLine":150,"endColumn":29},{"ruleId":"767","severity":1,"message":"768","line":157,"column":27,"nodeType":"769","messageId":"770","endLine":157,"endColumn":29},{"ruleId":"690","severity":1,"message":"783","line":2,"column":7,"nodeType":"692","messageId":"693","endLine":2,"endColumn":15},{"ruleId":"690","severity":1,"message":"776","line":5,"column":9,"nodeType":"692","messageId":"693","endLine":5,"endColumn":23},{"ruleId":"704","severity":1,"message":"705","line":28,"column":13,"nodeType":"706","messageId":"707","endLine":28,"endColumn":88,"fix":"784"},{"ruleId":"690","severity":1,"message":"785","line":7,"column":60,"nodeType":"692","messageId":"693","endLine":7,"endColumn":69},{"ruleId":"690","severity":1,"message":"785","line":7,"column":60,"nodeType":"692","messageId":"693","endLine":7,"endColumn":69},{"ruleId":"690","severity":1,"message":"786","line":5,"column":24,"nodeType":"692","messageId":"693","endLine":5,"endColumn":41},{"ruleId":"690","severity":1,"message":"787","line":6,"column":17,"nodeType":"692","messageId":"693","endLine":6,"endColumn":31},{"ruleId":"690","severity":1,"message":"788","line":7,"column":17,"nodeType":"692","messageId":"693","endLine":7,"endColumn":31},{"ruleId":"690","severity":1,"message":"789","line":8,"column":16,"nodeType":"692","messageId":"693","endLine":8,"endColumn":25},{"ruleId":"690","severity":1,"message":"790","line":9,"column":21,"nodeType":"692","messageId":"693","endLine":9,"endColumn":32},{"ruleId":"690","severity":1,"message":"791","line":11,"column":18,"nodeType":"692","messageId":"693","endLine":11,"endColumn":25},{"ruleId":"690","severity":1,"message":"792","line":16,"column":8,"nodeType":"692","messageId":"693","endLine":16,"endColumn":20},{"ruleId":"690","severity":1,"message":"793","line":27,"column":8,"nodeType":"692","messageId":"693","endLine":27,"endColumn":11},{"ruleId":"690","severity":1,"message":"794","line":11,"column":3,"nodeType":"692","messageId":"693","endLine":11,"endColumn":12},{"ruleId":"690","severity":1,"message":"795","line":12,"column":3,"nodeType":"692","messageId":"693","endLine":12,"endColumn":12},{"ruleId":"690","severity":1,"message":"796","line":14,"column":3,"nodeType":"692","messageId":"693","endLine":14,"endColumn":7},{"ruleId":"690","severity":1,"message":"797","line":15,"column":3,"nodeType":"692","messageId":"693","endLine":15,"endColumn":11},{"ruleId":"690","severity":1,"message":"798","line":16,"column":3,"nodeType":"692","messageId":"693","endLine":16,"endColumn":6},{"ruleId":"690","severity":1,"message":"799","line":17,"column":3,"nodeType":"692","messageId":"693","endLine":17,"endColumn":7},{"ruleId":"690","severity":1,"message":"774","line":18,"column":3,"nodeType":"692","messageId":"693","endLine":18,"endColumn":10},{"ruleId":"690","severity":1,"message":"800","line":27,"column":8,"nodeType":"692","messageId":"693","endLine":27,"endColumn":12},{"ruleId":"690","severity":1,"message":"801","line":29,"column":8,"nodeType":"692","messageId":"693","endLine":29,"endColumn":17},{"ruleId":"690","severity":1,"message":"802","line":32,"column":8,"nodeType":"692","messageId":"693","endLine":32,"endColumn":13},{"ruleId":"690","severity":1,"message":"803","line":33,"column":8,"nodeType":"692","messageId":"693","endLine":33,"endColumn":15},{"ruleId":"690","severity":1,"message":"804","line":35,"column":7,"nodeType":"692","messageId":"693","endLine":35,"endColumn":20},{"ruleId":"690","severity":1,"message":"805","line":36,"column":7,"nodeType":"692","messageId":"693","endLine":36,"endColumn":19},{"ruleId":"731","severity":1,"message":"806","line":73,"column":6,"nodeType":"728","endLine":73,"endColumn":8,"suggestions":"807"},{"ruleId":"690","severity":1,"message":"808","line":75,"column":9,"nodeType":"692","messageId":"693","endLine":75,"endColumn":22},{"ruleId":"690","severity":1,"message":"809","line":89,"column":8,"nodeType":"692","messageId":"693","endLine":89,"endColumn":22},{"ruleId":"690","severity":1,"message":"810","line":89,"column":24,"nodeType":"692","messageId":"693","endLine":89,"endColumn":41},{"ruleId":"690","severity":1,"message":"811","line":7,"column":3,"nodeType":"692","messageId":"693","endLine":7,"endColumn":12},{"ruleId":"690","severity":1,"message":"812","line":15,"column":18,"nodeType":"692","messageId":"693","endLine":15,"endColumn":26},{"ruleId":"690","severity":1,"message":"786","line":16,"column":24,"nodeType":"692","messageId":"693","endLine":16,"endColumn":41},{"ruleId":"690","severity":1,"message":"813","line":18,"column":13,"nodeType":"692","messageId":"693","endLine":18,"endColumn":23},{"ruleId":"690","severity":1,"message":"814","line":28,"column":10,"nodeType":"692","messageId":"693","endLine":28,"endColumn":15},{"ruleId":"690","severity":1,"message":"691","line":28,"column":29,"nodeType":"692","messageId":"693","endLine":28,"endColumn":35},{"ruleId":"690","severity":1,"message":"815","line":100,"column":9,"nodeType":"692","messageId":"693","endLine":100,"endColumn":24},{"ruleId":"690","severity":1,"message":"816","line":100,"column":26,"nodeType":"692","messageId":"693","endLine":100,"endColumn":37},{"ruleId":"690","severity":1,"message":"817","line":104,"column":8,"nodeType":"692","messageId":"693","endLine":104,"endColumn":21},{"ruleId":"690","severity":1,"message":"818","line":104,"column":23,"nodeType":"692","messageId":"693","endLine":104,"endColumn":39},{"ruleId":"690","severity":1,"message":"819","line":106,"column":8,"nodeType":"692","messageId":"693","endLine":106,"endColumn":29},{"ruleId":"690","severity":1,"message":"820","line":106,"column":31,"nodeType":"692","messageId":"693","endLine":106,"endColumn":55},{"ruleId":"690","severity":1,"message":"821","line":108,"column":8,"nodeType":"692","messageId":"693","endLine":108,"endColumn":20},{"ruleId":"690","severity":1,"message":"751","line":108,"column":22,"nodeType":"692","messageId":"693","endLine":108,"endColumn":35},{"ruleId":"690","severity":1,"message":"822","line":2,"column":8,"nodeType":"692","messageId":"693","endLine":2,"endColumn":20},{"ruleId":"690","severity":1,"message":"823","line":14,"column":3,"nodeType":"692","messageId":"693","endLine":14,"endColumn":26},{"ruleId":"690","severity":1,"message":"824","line":15,"column":3,"nodeType":"692","messageId":"693","endLine":15,"endColumn":21},{"ruleId":"690","severity":1,"message":"825","line":68,"column":11,"nodeType":"692","messageId":"693","endLine":68,"endColumn":17},{"ruleId":"690","severity":1,"message":"826","line":68,"column":19,"nodeType":"692","messageId":"693","endLine":68,"endColumn":28},{"ruleId":"690","severity":1,"message":"827","line":68,"column":30,"nodeType":"692","messageId":"693","endLine":68,"endColumn":42},{"ruleId":"731","severity":1,"message":"732","line":94,"column":6,"nodeType":"728","endLine":94,"endColumn":21,"suggestions":"828"},{"ruleId":"731","severity":1,"message":"829","line":117,"column":6,"nodeType":"728","endLine":117,"endColumn":8,"suggestions":"830"},{"ruleId":"690","severity":1,"message":"822","line":2,"column":8,"nodeType":"692","messageId":"693","endLine":2,"endColumn":20},{"ruleId":"690","severity":1,"message":"831","line":4,"column":3,"nodeType":"692","messageId":"693","endLine":4,"endColumn":10},{"ruleId":"690","severity":1,"message":"823","line":14,"column":3,"nodeType":"692","messageId":"693","endLine":14,"endColumn":26},{"ruleId":"690","severity":1,"message":"824","line":15,"column":3,"nodeType":"692","messageId":"693","endLine":15,"endColumn":21},{"ruleId":"690","severity":1,"message":"774","line":13,"column":3,"nodeType":"692","messageId":"693","endLine":13,"endColumn":10},{"ruleId":"690","severity":1,"message":"717","line":14,"column":3,"nodeType":"692","messageId":"693","endLine":14,"endColumn":13},{"ruleId":"690","severity":1,"message":"720","line":15,"column":3,"nodeType":"692","messageId":"693","endLine":15,"endColumn":6},{"ruleId":"690","severity":1,"message":"832","line":16,"column":3,"nodeType":"692","messageId":"693","endLine":16,"endColumn":14},{"ruleId":"690","severity":1,"message":"833","line":17,"column":3,"nodeType":"692","messageId":"693","endLine":17,"endColumn":13},{"ruleId":"690","severity":1,"message":"834","line":18,"column":3,"nodeType":"692","messageId":"693","endLine":18,"endColumn":17},{"ruleId":"690","severity":1,"message":"835","line":19,"column":3,"nodeType":"692","messageId":"693","endLine":19,"endColumn":11},{"ruleId":"690","severity":1,"message":"836","line":20,"column":13,"nodeType":"692","messageId":"693","endLine":20,"endColumn":22},{"ruleId":"690","severity":1,"message":"837","line":39,"column":7,"nodeType":"692","messageId":"693","endLine":39,"endColumn":20},{"ruleId":"690","severity":1,"message":"838","line":55,"column":10,"nodeType":"692","messageId":"693","endLine":55,"endColumn":15},{"ruleId":"690","severity":1,"message":"839","line":55,"column":17,"nodeType":"692","messageId":"693","endLine":55,"endColumn":25},{"ruleId":"731","severity":1,"message":"840","line":126,"column":6,"nodeType":"728","endLine":126,"endColumn":46,"suggestions":"841"},{"ruleId":"690","severity":1,"message":"774","line":12,"column":3,"nodeType":"692","messageId":"693","endLine":12,"endColumn":10},{"ruleId":"690","severity":1,"message":"717","line":13,"column":3,"nodeType":"692","messageId":"693","endLine":13,"endColumn":13},{"ruleId":"690","severity":1,"message":"720","line":14,"column":3,"nodeType":"692","messageId":"693","endLine":14,"endColumn":6},{"ruleId":"690","severity":1,"message":"832","line":15,"column":3,"nodeType":"692","messageId":"693","endLine":15,"endColumn":14},{"ruleId":"690","severity":1,"message":"833","line":16,"column":3,"nodeType":"692","messageId":"693","endLine":16,"endColumn":13},{"ruleId":"690","severity":1,"message":"834","line":17,"column":3,"nodeType":"692","messageId":"693","endLine":17,"endColumn":17},{"ruleId":"690","severity":1,"message":"835","line":18,"column":3,"nodeType":"692","messageId":"693","endLine":18,"endColumn":11},{"ruleId":"690","severity":1,"message":"836","line":19,"column":13,"nodeType":"692","messageId":"693","endLine":19,"endColumn":22},{"ruleId":"690","severity":1,"message":"837","line":38,"column":7,"nodeType":"692","messageId":"693","endLine":38,"endColumn":20},{"ruleId":"731","severity":1,"message":"842","line":127,"column":6,"nodeType":"728","endLine":127,"endColumn":26,"suggestions":"843"},{"ruleId":"767","severity":1,"message":"768","line":19,"column":22,"nodeType":"769","messageId":"770","endLine":19,"endColumn":24},{"ruleId":"690","severity":1,"message":"717","line":4,"column":3,"nodeType":"692","messageId":"693","endLine":4,"endColumn":13},{"ruleId":"690","severity":1,"message":"844","line":9,"column":22,"nodeType":"692","messageId":"693","endLine":9,"endColumn":30},{"ruleId":"690","severity":1,"message":"845","line":31,"column":23,"nodeType":"692","messageId":"693","endLine":31,"endColumn":39},{"ruleId":"690","severity":1,"message":"833","line":8,"column":3,"nodeType":"692","messageId":"693","endLine":8,"endColumn":13},{"ruleId":"690","severity":1,"message":"846","line":9,"column":3,"nodeType":"692","messageId":"693","endLine":9,"endColumn":7},{"ruleId":"690","severity":1,"message":"847","line":11,"column":3,"nodeType":"692","messageId":"693","endLine":11,"endColumn":8},{"ruleId":"690","severity":1,"message":"848","line":12,"column":3,"nodeType":"692","messageId":"693","endLine":12,"endColumn":13},{"ruleId":"690","severity":1,"message":"832","line":13,"column":3,"nodeType":"692","messageId":"693","endLine":13,"endColumn":14},{"ruleId":"690","severity":1,"message":"835","line":14,"column":3,"nodeType":"692","messageId":"693","endLine":14,"endColumn":11},{"ruleId":"690","severity":1,"message":"849","line":15,"column":3,"nodeType":"692","messageId":"693","endLine":15,"endColumn":12},{"ruleId":"690","severity":1,"message":"834","line":17,"column":3,"nodeType":"692","messageId":"693","endLine":17,"endColumn":17},{"ruleId":"690","severity":1,"message":"850","line":19,"column":10,"nodeType":"692","messageId":"693","endLine":19,"endColumn":29},{"ruleId":"690","severity":1,"message":"851","line":67,"column":37,"nodeType":"692","messageId":"693","endLine":67,"endColumn":47},{"ruleId":"690","severity":1,"message":"825","line":80,"column":11,"nodeType":"692","messageId":"693","endLine":80,"endColumn":17},{"ruleId":"690","severity":1,"message":"826","line":80,"column":19,"nodeType":"692","messageId":"693","endLine":80,"endColumn":28},{"ruleId":"690","severity":1,"message":"827","line":80,"column":30,"nodeType":"692","messageId":"693","endLine":80,"endColumn":42},{"ruleId":"731","severity":1,"message":"732","line":98,"column":6,"nodeType":"728","endLine":98,"endColumn":21,"suggestions":"852"},{"ruleId":"690","severity":1,"message":"853","line":8,"column":3,"nodeType":"692","messageId":"693","endLine":8,"endColumn":11},{"ruleId":"690","severity":1,"message":"854","line":9,"column":3,"nodeType":"692","messageId":"693","endLine":9,"endColumn":12},{"ruleId":"690","severity":1,"message":"855","line":1,"column":17,"nodeType":"692","messageId":"693","endLine":1,"endColumn":26},{"ruleId":"690","severity":1,"message":"856","line":12,"column":3,"nodeType":"692","messageId":"693","endLine":12,"endColumn":19},{"ruleId":"690","severity":1,"message":"857","line":38,"column":10,"nodeType":"692","messageId":"693","endLine":38,"endColumn":32},{"ruleId":"690","severity":1,"message":"858","line":38,"column":34,"nodeType":"692","messageId":"693","endLine":38,"endColumn":59},{"ruleId":"690","severity":1,"message":"833","line":8,"column":3,"nodeType":"692","messageId":"693","endLine":8,"endColumn":13},{"ruleId":"690","severity":1,"message":"846","line":9,"column":3,"nodeType":"692","messageId":"693","endLine":9,"endColumn":7},{"ruleId":"690","severity":1,"message":"847","line":11,"column":3,"nodeType":"692","messageId":"693","endLine":11,"endColumn":8},{"ruleId":"690","severity":1,"message":"848","line":12,"column":3,"nodeType":"692","messageId":"693","endLine":12,"endColumn":13},{"ruleId":"690","severity":1,"message":"832","line":13,"column":3,"nodeType":"692","messageId":"693","endLine":13,"endColumn":14},{"ruleId":"690","severity":1,"message":"835","line":14,"column":3,"nodeType":"692","messageId":"693","endLine":14,"endColumn":11},{"ruleId":"690","severity":1,"message":"849","line":15,"column":3,"nodeType":"692","messageId":"693","endLine":15,"endColumn":12},{"ruleId":"690","severity":1,"message":"834","line":17,"column":3,"nodeType":"692","messageId":"693","endLine":17,"endColumn":17},{"ruleId":"690","severity":1,"message":"850","line":19,"column":10,"nodeType":"692","messageId":"693","endLine":19,"endColumn":29},{"ruleId":"690","severity":1,"message":"859","line":55,"column":10,"nodeType":"692","messageId":"693","endLine":55,"endColumn":20},{"ruleId":"690","severity":1,"message":"860","line":56,"column":10,"nodeType":"692","messageId":"693","endLine":56,"endColumn":15},{"ruleId":"690","severity":1,"message":"851","line":60,"column":37,"nodeType":"692","messageId":"693","endLine":60,"endColumn":47},{"ruleId":"690","severity":1,"message":"825","line":73,"column":11,"nodeType":"692","messageId":"693","endLine":73,"endColumn":17},{"ruleId":"690","severity":1,"message":"826","line":73,"column":19,"nodeType":"692","messageId":"693","endLine":73,"endColumn":28},{"ruleId":"690","severity":1,"message":"827","line":73,"column":30,"nodeType":"692","messageId":"693","endLine":73,"endColumn":42},{"ruleId":"731","severity":1,"message":"732","line":91,"column":6,"nodeType":"728","endLine":91,"endColumn":21,"suggestions":"861"},{"ruleId":"690","severity":1,"message":"716","line":11,"column":8,"nodeType":"692","messageId":"693","endLine":11,"endColumn":18},{"ruleId":"690","severity":1,"message":"776","line":99,"column":11,"nodeType":"692","messageId":"693","endLine":99,"endColumn":25},{"ruleId":"690","severity":1,"message":"776","line":122,"column":11,"nodeType":"692","messageId":"693","endLine":122,"endColumn":25},{"ruleId":"731","severity":1,"message":"862","line":147,"column":6,"nodeType":"728","endLine":147,"endColumn":24,"suggestions":"863"},{"ruleId":"767","severity":1,"message":"768","line":187,"column":31,"nodeType":"769","messageId":"770","endLine":187,"endColumn":33},{"ruleId":"731","severity":1,"message":"732","line":92,"column":6,"nodeType":"728","endLine":92,"endColumn":21,"suggestions":"864"},{"ruleId":"690","severity":1,"message":"716","line":11,"column":8,"nodeType":"692","messageId":"693","endLine":11,"endColumn":18},{"ruleId":"690","severity":1,"message":"776","line":99,"column":11,"nodeType":"692","messageId":"693","endLine":99,"endColumn":25},{"ruleId":"690","severity":1,"message":"776","line":122,"column":11,"nodeType":"692","messageId":"693","endLine":122,"endColumn":25},{"ruleId":"731","severity":1,"message":"862","line":147,"column":6,"nodeType":"728","endLine":147,"endColumn":24,"suggestions":"865"},{"ruleId":"767","severity":1,"message":"768","line":187,"column":31,"nodeType":"769","messageId":"770","endLine":187,"endColumn":33},{"ruleId":"731","severity":1,"message":"732","line":92,"column":6,"nodeType":"728","endLine":92,"endColumn":21,"suggestions":"866"},{"ruleId":"731","severity":1,"message":"732","line":92,"column":6,"nodeType":"728","endLine":92,"endColumn":21,"suggestions":"867"},{"ruleId":"731","severity":1,"message":"732","line":92,"column":6,"nodeType":"728","endLine":92,"endColumn":21,"suggestions":"868"},{"ruleId":"690","severity":1,"message":"716","line":11,"column":8,"nodeType":"692","messageId":"693","endLine":11,"endColumn":18},{"ruleId":"690","severity":1,"message":"776","line":99,"column":11,"nodeType":"692","messageId":"693","endLine":99,"endColumn":25},{"ruleId":"690","severity":1,"message":"776","line":122,"column":11,"nodeType":"692","messageId":"693","endLine":122,"endColumn":25},{"ruleId":"731","severity":1,"message":"862","line":147,"column":6,"nodeType":"728","endLine":147,"endColumn":24,"suggestions":"869"},{"ruleId":"767","severity":1,"message":"768","line":187,"column":31,"nodeType":"769","messageId":"770","endLine":187,"endColumn":33},{"ruleId":"690","severity":1,"message":"716","line":11,"column":8,"nodeType":"692","messageId":"693","endLine":11,"endColumn":18},{"ruleId":"690","severity":1,"message":"776","line":99,"column":11,"nodeType":"692","messageId":"693","endLine":99,"endColumn":25},{"ruleId":"690","severity":1,"message":"776","line":122,"column":11,"nodeType":"692","messageId":"693","endLine":122,"endColumn":25},{"ruleId":"731","severity":1,"message":"862","line":147,"column":6,"nodeType":"728","endLine":147,"endColumn":24,"suggestions":"870"},{"ruleId":"767","severity":1,"message":"768","line":187,"column":31,"nodeType":"769","messageId":"770","endLine":187,"endColumn":33},"no-native-reassign",["871"],"no-negated-in-lhs",["872"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'classnames' is defined but never used.","'Notification' is defined but never used.","'google' is defined but never used.","'loginUser' is defined but never used.","'nameValue' is assigned a value but never used.","'setNameValue' is assigned a value but never used.","'loginValue' is assigned a value but never used.","'setLoginValue' is assigned a value but never used.","'passwordValue' is assigned a value but never used.","'setPasswordValue' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"873","text":"874"},"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'React' is defined but never used.","'useReducer' is defined but never used.","'errors' is assigned a value but never used.","'BreadCrumb' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'FabricBarcode' is defined but never used.","'Box' is defined but never used.","'ArrowBackRoundedIcon' is defined but never used.","'CenterFocusStrong' is defined but never used.","'setMachine' is assigned a value but never used.","'handlePrint' is assigned a value but never used.","'ProfileUpdateForm' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","'recordForEdit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["875"],"React Hook useEffect has a missing dependency: 'fetchUnits'. Either include it or remove the dependency array.",["876"],"'clsx' is defined but never used.","'Search' is defined but never used.","'UploadIcon' is defined but never used.","'CloudDownloadIcon' is defined but never used.","'CropFreeIcon' is defined but never used.","'CloseIcon' is defined but never used.","'MachineProvider' is defined but never used.","'initialState' is defined but never used.","'MachineList' is defined but never used.","'useTable' is defined but never used.","'Controls' is defined but never used.","'Upload' is defined but never used.","'FullScreenPopup' is defined but never used.","'BarcodeScanner' is defined but never used.","'setSearchValue' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","'records' is assigned a value but never used.","'setRecords' is assigned a value but never used.","'filterFn' is assigned a value but never used.","'setFilterFn' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'upload' is assigned a value but never used.","'setUpload' is assigned a value but never used.","'fiber' is assigned a value but never used.","'confirmDialog' is assigned a value but never used.","'setConfirmDialog' is assigned a value but never used.","'loading' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchFabricList' and 'fetchMachines'. Either include them or remove the dependency array.",["877"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'EditIcon' is defined but never used.","'AddIcon' is defined but never used.","'FormDialog' is defined but never used.","'Tooltip' is defined but never used.","'AddMachineToLineForm' is defined but never used.","'requestOptions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchApprovalList'. Either include it or remove the dependency array.",["878"],"'Tune' is defined but never used.","'useUserState' is defined but never used.","'AxiosHeader' is defined but never used.",["879"],"'ROOT_URL' is assigned a value but never used.",{"range":"880","text":"874"},"'fullWidth' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'FAQIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'Dot' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Area' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'mock' is defined but never used.","'PageTitle' is defined but never used.","'Table' is defined but never used.","'BigStat' is defined but never used.","'mainChartData' is assigned a value but never used.","'PieChartData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchDashboardData'. Either include it or remove the dependency array.",["881"],"'CustomTooltip' is assigned a value but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.","'InputBase' is defined but never used.","'MailIcon' is defined but never used.","'SearchIcon' is defined but never used.","'Badge' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'userDetails' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["882"],"React Hook useEffect has a missing dependency: 'AxiosHeader'. Either include it or remove the dependency array.",["883"],"'useForm' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'MenuItem' is defined but never used.","'MuiSelect' is defined but never used.","'DialogActions' is assigned a value but never used.","'units' is assigned a value but never used.","'setUnits' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMachineInfo' and 'lineFilter'. Either include them or remove the dependency array.",["884"],"React Hook useEffect has missing dependencies: 'lineFilter' and 'machineFilter'. Either include them or remove the dependency array.",["885"],"'MoreIcon' is defined but never used.","'setMoreButtonRef' is assigned a value but never used.","'Icon' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'TextField' is defined but never used.","'VerticalAlignCenter' is defined but never used.","'fabricList' is assigned a value but never used.",["886"],"'TableRow' is defined but never used.","'TableCell' is defined but never used.","'useEffect' is defined but never used.","'CircularProgress' is defined but never used.","'passwordMissMatchError' is assigned a value but never used.","'setPasswordMissMatchError' is assigned a value but never used.","'categories' is assigned a value but never used.","'types' is assigned a value but never used.",["887"],"React Hook useEffect has a missing dependency: 'fetchFabricTypes'. Either include it or remove the dependency array.",["888"],["889"],["890"],["891"],["892"],["893"],["894"],["895"],"no-global-assign","no-unsafe-negation",[6716,6716]," rel=\"noreferrer\"",{"desc":"896","fix":"897"},{"desc":"898","fix":"899"},{"desc":"900","fix":"901"},{"desc":"902","fix":"903"},{"desc":"902","fix":"904"},[843,843],{"desc":"905","fix":"906"},{"desc":"896","fix":"907"},{"desc":"908","fix":"909"},{"desc":"910","fix":"911"},{"desc":"912","fix":"913"},{"desc":"896","fix":"914"},{"desc":"896","fix":"915"},{"desc":"916","fix":"917"},{"desc":"896","fix":"918"},{"desc":"916","fix":"919"},{"desc":"896","fix":"920"},{"desc":"896","fix":"921"},{"desc":"896","fix":"922"},{"desc":"916","fix":"923"},{"desc":"916","fix":"924"},"Update the dependencies array to be: [formik, recordForEdit]",{"range":"925","text":"926"},"Update the dependencies array to be: [fetchUnits, washTypesRecord]",{"range":"927","text":"928"},"Update the dependencies array to be: [fabricRecord, fetchFabricList, fetchMachines, searchOpen]",{"range":"929","text":"930"},"Update the dependencies array to be: [fetchApprovalList, updateSignal]",{"range":"931","text":"932"},{"range":"933","text":"932"},"Update the dependencies array to be: [fetchDashboardData]",{"range":"934","text":"935"},{"range":"936","text":"926"},"Update the dependencies array to be: [AxiosHeader]",{"range":"937","text":"938"},"Update the dependencies array to be: [Machines.current_unit_id, getMachineInfo, lineFilter, searchValue]",{"range":"939","text":"940"},"Update the dependencies array to be: [formik.values.unit, lineFilter, machineFilter]",{"range":"941","text":"942"},{"range":"943","text":"926"},{"range":"944","text":"926"},"Update the dependencies array to be: [fabricTypeRecord, fetchFabricTypes]",{"range":"945","text":"946"},{"range":"947","text":"926"},{"range":"948","text":"946"},{"range":"949","text":"926"},{"range":"950","text":"926"},{"range":"951","text":"926"},{"range":"952","text":"946"},{"range":"953","text":"946"},[1251,1266],"[formik, recordForEdit]",[3131,3148],"[fetchUnits, washTypesRecord]",[5197,5223],"[fabricRecord, fetchFabricList, fetchMachines, searchOpen]",[2578,2592],"[fetchApprovalList, updateSignal]",[2611,2625],[1812,1814],"[fetchDashboardData]",[2224,2239],[2872,2874],"[AxiosHeader]",[2935,2975],"[Machines.current_unit_id, getMachineInfo, lineFilter, searchValue]",[3244,3264],"[formik.values.unit, lineFilter, machineFilter]",[2388,2403],[2181,2196],[3695,3713],"[fabricTypeRecord, fetchFabricTypes]",[2223,2238],[3707,3725],[2227,2242],[2223,2238],[2217,2232],[3681,3699],[3694,3712]]