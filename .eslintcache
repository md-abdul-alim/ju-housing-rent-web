[{"/home/alim/Documents/ju-housing-rent-web/src/index.js":"1","/home/alim/Documents/ju-housing-rent-web/src/serviceWorker.js":"2","/home/alim/Documents/ju-housing-rent-web/src/components/App.js":"3","/home/alim/Documents/ju-housing-rent-web/src/context/LayoutContext.js":"4","/home/alim/Documents/ju-housing-rent-web/src/context/UserContext.js":"5","/home/alim/Documents/ju-housing-rent-web/src/themes/index.js":"6","/home/alim/Documents/ju-housing-rent-web/src/context/index.js":"7","/home/alim/Documents/ju-housing-rent-web/src/components/Layout/Layout.js":"8","/home/alim/Documents/ju-housing-rent-web/src/pages/login/Login.js":"9","/home/alim/Documents/ju-housing-rent-web/src/pages/error/Error.js":"10","/home/alim/Documents/ju-housing-rent-web/src/themes/default.js":"11","/home/alim/Documents/ju-housing-rent-web/src/context/context.js":"12","/home/alim/Documents/ju-housing-rent-web/src/pages/error/styles.js":"13","/home/alim/Documents/ju-housing-rent-web/src/pages/login/styles.js":"14","/home/alim/Documents/ju-housing-rent-web/src/components/SnackBar/Notification.js":"15","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Controls.js":"16","/home/alim/Documents/ju-housing-rent-web/src/components/Form/useForm.js":"17","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileDetail.js":"18","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/Profile.js":"19","/home/alim/Documents/ju-housing-rent-web/src/components/Layout/styles.js":"20","/home/alim/Documents/ju-housing-rent-web/src/components/Footer/Footer.js":"21","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/Charts.js":"22","/home/alim/Documents/ju-housing-rent-web/src/pages/maps/Maps.js":"23","/home/alim/Documents/ju-housing-rent-web/src/pages/tables/Tables.js":"24","/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/Notifications.js":"25","/home/alim/Documents/ju-housing-rent-web/src/pages/typography/Typography.js":"26","/home/alim/Documents/ju-housing-rent-web/src/pages/icons/Icons.js":"27","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomImage.js":"28","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/ActionButton.js":"29","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Button.js":"30","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Select.js":"31","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Autocomplete.js":"32","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomAutocomplete.js":"33","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/Sidebar.js":"34","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/DatePicker.js":"35","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/Dashboard.js":"36","/home/alim/Documents/ju-housing-rent-web/src/components/Header/Header.js":"37","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Popup.js":"38","/home/alim/Documents/ju-housing-rent-web/src/components/FullScreenPopup/FullScreenPopup.js":"39","/home/alim/Documents/ju-housing-rent-web/src/components/FormDialog/FormDialog.js":"40","/home/alim/Documents/ju-housing-rent-web/src/utils/AxiosHeader.js":"41","/home/alim/Documents/ju-housing-rent-web/src/components/BreadCrumb/BreadCrumb.jsx":"42","/home/alim/Documents/ju-housing-rent-web/src/pages/typography/styles.js":"43","/home/alim/Documents/ju-housing-rent-web/src/components/Wrappers/Wrappers.js":"44","/home/alim/Documents/ju-housing-rent-web/src/components/Widget/Widget.js":"45","/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/PageTitle.js":"46","/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/styles.js":"47","/home/alim/Documents/ju-housing-rent-web/src/pages/icons/styles.js":"48","/home/alim/Documents/ju-housing-rent-web/src/components/Header/styles.js":"49","/home/alim/Documents/ju-housing-rent-web/src/components/Notification/Notification.js":"50","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/mock.js":"51","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/styles.js":"52","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/Table/Table.js":"53","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/BigStat.js":"54","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/Dot.js":"55","/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/UserAvatar.js":"56","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"57","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/styles.js":"58","/home/alim/Documents/ju-housing-rent-web/src/pages/maps/styles.js":"59","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexHeatmap.js":"60","/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/styles.js":"61","/home/alim/Documents/ju-housing-rent-web/src/components/Widget/styles.js":"62","/home/alim/Documents/ju-housing-rent-web/src/components/Notification/styles.js":"63","/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/styles.js":"64","/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/styles.js":"65","/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/styles.js":"66","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexLineChart.js":"67","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Upload.js":"68","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileUpdateForm.js":"69","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileForm.js":"70","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Input.js":"71","/home/alim/Documents/ju-housing-rent-web/src/components/Table/useTable.js":"72","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMember.js":"73","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMemberForm.js":"74","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContact.js":"75","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContactForm.js":"76","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HouseCleanerForm.js":"77","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/DriverForm.js":"78","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HomeDriver.js":"79","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HomeCleaner.js":"80"},{"size":869,"mtime":1629456103812,"results":"81","hashOfConfig":"82"},{"size":4948,"mtime":1629474813902,"results":"83","hashOfConfig":"82"},{"size":1750,"mtime":1655724232613,"results":"84","hashOfConfig":"82"},{"size":1392,"mtime":1629456103812,"results":"85","hashOfConfig":"82"},{"size":3018,"mtime":1654055454950,"results":"86","hashOfConfig":"82"},{"size":502,"mtime":1629456103820,"results":"87","hashOfConfig":"82"},{"size":148,"mtime":1655724240301,"results":"88","hashOfConfig":"82"},{"size":2137,"mtime":1655722641443,"results":"89","hashOfConfig":"82"},{"size":18677,"mtime":1655724744221,"results":"90","hashOfConfig":"82"},{"size":1571,"mtime":1647144516113,"results":"91","hashOfConfig":"82"},{"size":2987,"mtime":1629456103820,"results":"92","hashOfConfig":"82"},{"size":947,"mtime":1655724099312,"results":"93","hashOfConfig":"82"},{"size":1334,"mtime":1629456103812,"results":"94","hashOfConfig":"82"},{"size":3636,"mtime":1655312406847,"results":"95","hashOfConfig":"82"},{"size":960,"mtime":1629456103812,"results":"96","hashOfConfig":"82"},{"size":483,"mtime":1646649743943,"results":"97","hashOfConfig":"82"},{"size":670,"mtime":1655723413646,"results":"98","hashOfConfig":"82"},{"size":6540,"mtime":1655791797098,"results":"99","hashOfConfig":"82"},{"size":1252,"mtime":1655890551696,"results":"100","hashOfConfig":"82"},{"size":1003,"mtime":1646649743947,"results":"101","hashOfConfig":"82"},{"size":1039,"mtime":1655618967077,"results":"102","hashOfConfig":"82"},{"size":5556,"mtime":1629456103812,"results":"103","hashOfConfig":"82"},{"size":971,"mtime":1629456103816,"results":"104","hashOfConfig":"82"},{"size":2082,"mtime":1629456103816,"results":"105","hashOfConfig":"82"},{"size":13470,"mtime":1629456103816,"results":"106","hashOfConfig":"82"},{"size":4506,"mtime":1629456103816,"results":"107","hashOfConfig":"82"},{"size":377833,"mtime":1629456103812,"results":"108","hashOfConfig":"82"},{"size":267,"mtime":1646649743943,"results":"109","hashOfConfig":"82"},{"size":838,"mtime":1629456103808,"results":"110","hashOfConfig":"82"},{"size":708,"mtime":1650789247649,"results":"111","hashOfConfig":"82"},{"size":956,"mtime":1629456103808,"results":"112","hashOfConfig":"82"},{"size":778,"mtime":1655723341914,"results":"113","hashOfConfig":"82"},{"size":897,"mtime":1655723348814,"results":"114","hashOfConfig":"82"},{"size":2807,"mtime":1655723610290,"results":"115","hashOfConfig":"82"},{"size":834,"mtime":1646649743943,"results":"116","hashOfConfig":"82"},{"size":6871,"mtime":1655724627602,"results":"117","hashOfConfig":"82"},{"size":7981,"mtime":1655723560282,"results":"118","hashOfConfig":"82"},{"size":1353,"mtime":1629456103808,"results":"119","hashOfConfig":"82"},{"size":2256,"mtime":1629456103808,"results":"120","hashOfConfig":"82"},{"size":1537,"mtime":1629456103808,"results":"121","hashOfConfig":"82"},{"size":211,"mtime":1654055454950,"results":"122","hashOfConfig":"82"},{"size":1425,"mtime":1629456103808,"results":"123","hashOfConfig":"82"},{"size":374,"mtime":1629456103816,"results":"124","hashOfConfig":"82"},{"size":3790,"mtime":1629456103812,"results":"125","hashOfConfig":"82"},{"size":1883,"mtime":1655723718671,"results":"126","hashOfConfig":"82"},{"size":427,"mtime":1629456103812,"results":"127","hashOfConfig":"82"},{"size":1858,"mtime":1629456103816,"results":"128","hashOfConfig":"82"},{"size":780,"mtime":1629456103812,"results":"129","hashOfConfig":"82"},{"size":3868,"mtime":1629456103812,"results":"130","hashOfConfig":"82"},{"size":3296,"mtime":1629456103812,"results":"131","hashOfConfig":"82"},{"size":4105,"mtime":1629456103812,"results":"132","hashOfConfig":"82"},{"size":3028,"mtime":1646649743951,"results":"133","hashOfConfig":"82"},{"size":1274,"mtime":1629456103812,"results":"134","hashOfConfig":"82"},{"size":4039,"mtime":1629456103812,"results":"135","hashOfConfig":"82"},{"size":862,"mtime":1629456103812,"results":"136","hashOfConfig":"82"},{"size":593,"mtime":1629456103812,"results":"137","hashOfConfig":"82"},{"size":4574,"mtime":1629456103812,"results":"138","hashOfConfig":"82"},{"size":1304,"mtime":1629456103812,"results":"139","hashOfConfig":"82"},{"size":171,"mtime":1629456103816,"results":"140","hashOfConfig":"82"},{"size":1794,"mtime":1629456103812,"results":"141","hashOfConfig":"82"},{"size":462,"mtime":1629456103812,"results":"142","hashOfConfig":"82"},{"size":969,"mtime":1629456103812,"results":"143","hashOfConfig":"82"},{"size":993,"mtime":1629456103812,"results":"144","hashOfConfig":"82"},{"size":1027,"mtime":1629456103812,"results":"145","hashOfConfig":"82"},{"size":276,"mtime":1629456103812,"results":"146","hashOfConfig":"82"},{"size":1440,"mtime":1629456103812,"results":"147","hashOfConfig":"82"},{"size":1328,"mtime":1629456103812,"results":"148","hashOfConfig":"82"},{"size":1341,"mtime":1629456103808,"results":"149","hashOfConfig":"82"},{"size":5014,"mtime":1655724930431,"results":"150","hashOfConfig":"82"},{"size":11252,"mtime":1655808030786,"results":"151","hashOfConfig":"82"},{"size":425,"mtime":1646649743943,"results":"152","hashOfConfig":"82"},{"size":3868,"mtime":1629456103812,"results":"153","hashOfConfig":"82"},{"size":7164,"mtime":1655893406161,"results":"154","hashOfConfig":"82"},{"size":4239,"mtime":1655879958245,"results":"155","hashOfConfig":"82"},{"size":7188,"mtime":1655894468554,"results":"156","hashOfConfig":"82"},{"size":4248,"mtime":1655894314542,"results":"157","hashOfConfig":"82"},{"size":4088,"mtime":1655616319805,"results":"158","hashOfConfig":"82"},{"size":4072,"mtime":1655724812638,"results":"159","hashOfConfig":"82"},{"size":5846,"mtime":1655725250671,"results":"160","hashOfConfig":"82"},{"size":5867,"mtime":1655725298334,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"1f2oyhz",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"181","usedDeprecatedRules":"164"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"207","usedDeprecatedRules":"164"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"164"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"164"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"164"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"164"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"164"},"/home/alim/Documents/ju-housing-rent-web/src/index.js",[],["333","334"],"/home/alim/Documents/ju-housing-rent-web/src/serviceWorker.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/App.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/LayoutContext.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/UserContext.js",[],"/home/alim/Documents/ju-housing-rent-web/src/themes/index.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/index.js",["335"],"/home/alim/Documents/ju-housing-rent-web/src/components/Layout/Layout.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/login/Login.js",["336","337","338"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n  FormControl,\n  InputLabel,\n  Select as MuiSelect,\n  MenuItem\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/core/styles\";\n// styles\nimport useStyles from \"./styles\";\n\n// context\nimport { useUserDispatch } from \"../../context/UserContext\";\n\nconst GreenTextTypography = withStyles({\n  root: {\n    color: \"#00FF00\"\n  }\n})(Typography);\n\n\nvar initialRenterValues = {\n  id: 0,\n  first_name: \"\",\n  last_name: \"\",\n  email: \"\",\n  phone: \"\",\n  role: \"\",\n  password: \"\",\n  password2: \"\"\n};\n\nvar loginValues = {\n  username: \"\",\n  password: \"\"\n}\n\nvar holdPassword = ''\n\nconst duplicateUserNameCheck = (list, value)=> {\n  var check = true\n  if(list.length === 0){\n    return check\n  }else{\n    for (let i=0; i< list.length; i ++){\n        if(value === list[i].email){       \n          return check = false\n        }\n      }\n    }\n    return check;\n}\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var dispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  const [ userList, setUserList] = useState([]);\n  const [ groupList, setGroupList] = useState([]);\n  const [message, setMessage] = useState(null)\n\n\n  const validationSchema = yup.object().shape({\n    first_name: yup.string().required(\"First Name is required\"),\n    last_name: yup.string().required(\"Last Name is required\"),\n    phone: yup\n    .number()\n    .typeError(\"Invalid Input: numbers please\")\n    // .max(11, \"Not more than 11\")\n    .positive(\"Must be greater than zero\")\n    .required(\"Phone number is required.\")\n    .integer(),\n    email: yup.string().required(\"Email is required\")\n    .test(\"Unique\", \"Email already exist.Try other.\", (values) => {\n      return duplicateUserNameCheck(userList, values)\n    }),\n    password: yup\n    .string()\n    .required(\"Password is required\")\n    .test((values)=>{\n      holdPassword = values\n      return true\n    }),\n    password2: yup\n    .string()\n    .required(\"Confirm Password is required\")\n    .test(\"Match\", \"Password doesn't match!\", (values) => {\n      if (values === holdPassword){\n        return true\n      }\n      return false\n    }),\n  });\n\n\n  const RenterFormik = useFormik({\n    initialValues: initialRenterValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      addOrEdit(values, resetForm, setSubmitting);\n    },\n  });\n\n\n  const LoginFormik = useFormik({\n    initialValues: loginValues,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      login(values);\n      resetForm();\n    },\n  });\n\n  const login = async (values) => {\n    setIsLoading(true);\n    const requestOptions = {\n      headers: {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n      },\n    };\n\n    try {\n      axios\n      .post(\"/api/token/\", values, requestOptions)\n      .then((res) => {\n        setTimeout(() => {\n          localStorage.setItem('refresh_token', res.data.refresh)\n          localStorage.setItem('access_token', res.data.access)\n          localStorage.setItem('id', res.data.id)\n          localStorage.setItem('first_name', res.data.first_name)\n          localStorage.setItem('last_name', res.data.last_name)\n          localStorage.setItem('user_type', res.data.user_type)\n          localStorage.setItem('account_complete_status', res.data.account_complete_status)\n          setError(null)\n          dispatch({ type: 'LOGIN_SUCCESS', payload: res.data })\n          setIsLoading(false);\n          props.history.push('/app/dashboard')\n        }, 1000);\n      })\n      .catch((err) => {\n        // dispatch({ type: \"LOGIN_FAILURE\" });\n        setError(true);\n        setIsLoading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const userRegistration = async (values, setSubmitting) => {\n    setIsLoading(true);\n    const requestOptions = {\n      headers: {\n        method: \"POST\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      },\n    };\n\n    try {\n      await axios\n        .post(\"/api/registration/\", values, {\n          requestOptions,\n        })\n        .then((resp) => {\n          setTimeout(() => {\n            setMessage(resp.data.message)\n            setIsLoading(false);\n            setSubmitting(false);\n          }, 1000);\n        });\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n    }\n  };\n\n  const addOrEdit = (userData, resetForm, setSubmitting) => {\n    if (userData.id === 0) userRegistration(userData, setSubmitting);\n    resetForm();\n  };\n\n  useEffect(() => {\n    async function getUsers() {\n      const response = await fetch(\"/api/user/list\");\n      const body = await response.json();\n      setUserList(body);\n    }\n    getUsers();\n    async function getGroups() {\n      const response = await fetch(\"/api/group/list\");\n      const body = await response.json();\n      setGroupList(body);\n    }\n    getGroups();\n  }, []);\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        {/* <Typography className={classes.logotypeText}>Jahangirnogar University</Typography> */}\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                <a href=\"https://juniv.edu/\" target=\"_blank\" style={{color: \"green\"}}>Jahangirnagar University</a>\n              </Typography>\n              <Typography variant=\"h3\" className={classes.greeting1}>\n                House Renting System\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :\n                </Typography>\n              </Fade>\n              <Form onSubmit={LoginFormik.handleSubmit}>\n                <Grid container justify=\"space-between\" alignItems=\"flex-start\" spacing={0}>\n                    <Grid item md={12} sm={12} xs={12}>\n                      <TextField \n                        label=\"Email\"\n                        name=\"username\"\n                        InputProps={{\n                          classes: {\n                            underline: classes.textFieldUnderline,\n                            input: classes.textField,\n                          },\n                        }}\n                        value={LoginFormik.values.username}\n                        onChange={LoginFormik.handleChange}\n                        onBlur={LoginFormik.handleBlur}\n                        margin=\"normal\"\n                        type=\"email\"\n                        error={LoginFormik.touched.username && Boolean(LoginFormik.errors.username)}\n                        helperText={LoginFormik.touched.username && LoginFormik.errors.username}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item md={12} sm={12} xs={12}>\n                      <TextField\n                        label=\"Password\"\n                        name=\"password\"\n                        id=\"password\"\n                        InputProps={{\n                          classes: {\n                            underline: classes.textFieldUnderline,\n                            input: classes.textField,\n                          },\n                        }}\n                        value={LoginFormik.values.password}\n                        onChange={LoginFormik.handleChange}\n                        onBlur={LoginFormik.handleBlur}\n                        margin=\"normal\"\n                        type=\"password\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item md={12} sm={12} xs={12}>\n                    {isLoading ? (\n                        <CircularProgress size={26} className={classes.loginLoader} />\n                      ) : (\n                      <Controls.Button\n                          type=\"submit\"\n                          disabled={\n                            LoginFormik.isSubmitting, \n                            LoginFormik.values.username.length === 0 || LoginFormik.values.password.length === 0\n                          }\n                          text=\"Login\"\n                      />\n                      )}\n                    </Grid>\n                </Grid>\n              </Form>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={message}>\n                <GreenTextTypography variant=\"subtitle1\">\n                  {message}\n                </GreenTextTypography>\n              </Fade>\n              <Form onSubmit={RenterFormik.handleSubmit}>\n                <Grid container justify=\"space-between\" alignItems=\"flex-start\" spacing={0}>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField\n                      label=\"First Name\"\n                      name=\"first_name\"\n                      id=\"name\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.first_name}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"text\"\n                      error={RenterFormik.touched.first_name && Boolean(RenterFormik.errors.first_name)}\n                      helperText={RenterFormik.touched.first_name && RenterFormik.errors.first_name}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Last Name\"\n                      name=\"last_name\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.last_name}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"text\"\n                      error={RenterFormik.touched.last_name && Boolean(RenterFormik.errors.last_name)}\n                      helperText={RenterFormik.touched.last_name && RenterFormik.errors.last_name}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Phone\"\n                      name=\"phone\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.phone}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"number\"\n                      error={RenterFormik.touched.phone && Boolean(RenterFormik.errors.phone)}\n                      helperText={RenterFormik.touched.phone && RenterFormik.errors.phone}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Email\"\n                      name=\"email\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.email}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"email\"\n                      error={RenterFormik.touched.email && Boolean(RenterFormik.errors.email)}\n                      helperText={RenterFormik.touched.email && RenterFormik.errors.email}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                      <FormControl fullWidth\n                        {...(error && {error:true})}>\n                            <InputLabel>Role</InputLabel>\n                            <MuiSelect\n                                label=\"Role\"\n                                name=\"role\"\n                                value={RenterFormik.values.role}\n                                onChange={RenterFormik.handleChange}\n                                onBlur={RenterFormik.handleBlur}\n                                error={RenterFormik.touched.role && Boolean(RenterFormik.errors.role)}\n                                helperText={RenterFormik.touched.role && RenterFormik.errors.role}\n                                >\n                                <MenuItem value=\"\">None</MenuItem>\n                                {\n                                    groupList.map(\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>)\n                                    )\n                                }\n                            </MuiSelect>\n                        </FormControl>\n                  </Grid>\n                  <Grid item md={12} sm={12} xs={12}>\n                    <TextField \n                      label=\"Password\"\n                      name=\"password\"\n                      InputProps={{\n                        classes: {\n                          underline: classes.textFieldUnderline,\n                          input: classes.textField,\n                        },\n                      }}\n                      value={RenterFormik.values.password}\n                      onChange={RenterFormik.handleChange}\n                      onBlur={RenterFormik.handleBlur}\n                      margin=\"normal\"\n                      type=\"password\"\n                      error={RenterFormik.touched.password && Boolean(RenterFormik.errors.password)}\n                      helperText={RenterFormik.touched.password && RenterFormik.errors.password}\n                      fullWidth  \n                   />\n                  </Grid>\n                \n                <Grid item md={12} sm={12} xs={12}>\n                  <TextField \n                    label=\"Confirm Password\"\n                    name=\"password2\"\n                    InputProps={{\n                      classes: {\n                        underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    value={RenterFormik.values.password2}\n                    onChange={RenterFormik.handleChange}\n                    onBlur={RenterFormik.handleBlur}\n                    margin=\"normal\"\n                    type=\"password\"\n                    error={RenterFormik.touched.password2 && Boolean(RenterFormik.errors.password2)}\n                    helperText={RenterFormik.touched.password2 && RenterFormik.errors.password2}\n                    fullWidth\n                  />\n                </Grid>\n                \n                <Grid item style={{ marginTop: 3 }} md={12} sm={12} xs={12}>\n                    <div className={classes.wrapper}>\n                    {isLoading ? (\n                        <CircularProgress size={26} className={classes.loginLoader} />\n                      ) : (\n                        <Controls.Button\n                            type=\"submit\"\n                            disabled={\n                              RenterFormik.isSubmitting,\n                              RenterFormik.values.first_name.length === 0 || RenterFormik.values.last_name.length === 0 || RenterFormik.values.phone.length === 0 ||\n                              RenterFormik.values.email.length === 0 || RenterFormik.values.role.length === 0 || RenterFormik.values.password.length === 0 || RenterFormik.values.password2.length === 0\n                            }\n                            text=\"Sign Up\"\n                        />\n                      )}\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick = {RenterFormik.resetForm}\n                        />\n                    </div> \n                </Grid>\n                </Grid>\n              </Form>\n            </React.Fragment>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n        © {new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.linkedin.com/in/md-abdul-alim-milon/\" rel=\"noopener noreferrer\" target=\"_blank\">Design & Develop by <span style={{color: \"purple\"}}>Md. Abdul Alim</span></a>\n        </Typography>\n        <Typography color=\"black\" className={classes.pmscs}>\n          Batch: <span style={{color: \"green\"}}>PMSCS 26</span>\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/home/alim/Documents/ju-housing-rent-web/src/pages/error/Error.js",[],"/home/alim/Documents/ju-housing-rent-web/src/themes/default.js",[],"/home/alim/Documents/ju-housing-rent-web/src/context/context.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/error/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/login/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/SnackBar/Notification.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Controls.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Form/useForm.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileDetail.js",["339","340"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Popup from \"../../components/Controls/Popup\";\nimport ProfileForm from './ProfileForm'\nimport axios from \"axios\";\nimport {\n  Paper,\n  Grid,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n} from \"@material-ui/core\";\n\nfunction ProfileDetail(props) {\n\n  const [openPopup, setOpenPopup] = useState(false);\n  const [userData, setUserData] = useState([])\n  const [profileData, setProfileData] = useState([])\n  const [updateSignal, setUpdateSignal] = useState(null);\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  async function fetchProfile() {\n\n    try {\n      await axios\n        .get(\"/api/profile/\", AxiosHeader)\n        .then((res) => {\n          setUserData(res.data.user);\n          setProfileData(res.data)\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const updateProfile = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .put(`/api/profile/update/`, values, AxiosHeader)\n        .then((resp) => {\n          setUpdateSignal(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addOrEdit = (userData, setSubmitting) => {\n    updateProfile(userData, setSubmitting);\n    setOpenPopup(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  useEffect(() => {\n    fetchProfile();\n  }, [updateSignal]);\n\n\n  return (\n    <div>\n      <Paper\n        elevation={3}\n        square={false}\n        style={{ paddingTop: 6, margin: \"16px\" }}\n      >\n        <div>\n          <Grid container alignItems=\"flex-start\" spacing={5}>\n            <Grid item md={6} sm={12} xs={12}>\n              <Table>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>Name:</TableCell>\n                    <TableCell align=\"right\">{userData.get_full_name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Email:</TableCell>\n                    <TableCell align=\"right\">{userData.email}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Phone:</TableCell>\n                    <TableCell align=\"right\">{userData.phone}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Birthday:</TableCell>\n                    <TableCell align=\"right\">{userData.birthday}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>NID:</TableCell>\n                    <TableCell align=\"right\">{userData.nid}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Passport:</TableCell>\n                    <TableCell align=\"right\">{userData.passport}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Married Status:</TableCell>\n                    <TableCell align=\"right\">{userData.married_status_name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Occupation:</TableCell>\n                    <TableCell align=\"right\">{userData.occupation}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Grid>\n            <Grid item md={6} sm={12} xs={12}>\n                <Table>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell>Occupation Institution:</TableCell>\n                      <TableCell align=\"right\">{userData.occupation_institution}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Education Qualification:</TableCell>\n                      <TableCell align=\"right\">{userData.education_qualification}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Religion:</TableCell>\n                      <TableCell align=\"right\">{userData.religion_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Present Address:</TableCell>\n                      <TableCell align=\"right\">{userData.present_address}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Permanent Address:</TableCell>\n                      <TableCell align=\"right\">{userData.permanent_address}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Previous House Owner:</TableCell>\n                      <TableCell align=\"right\">{profileData.previous_house_owner}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Present House Owner:</TableCell>\n                      <TableCell align=\"right\">{profileData.present_house_owner}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Rent Of Date:</TableCell>\n                      <TableCell align=\"right\">{profileData.rent_of_date}</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item md={4} sm={4} xs={4}></Grid>\n            <Grid item md={4} sm={4} xs={4} style={{'text-align': 'center'}}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"mr-4 py-2\"\n                  style={{marginBottom: \"5px\"}}\n                  onClick={() => {\n                    setOpenPopup(true);\n                  }}\n                >\n                  Update\n                </Button>\n            </Grid>\n            <Grid item md={4} sm={4} xs={4}>\n              <Popup title=\"Profile update\" openPopup={openPopup} setOpenPopup={setOpenPopup}>\n                <ProfileForm addOrEdit={addOrEdit} userData={userData}/>\n              </Popup>\n            </Grid>\n          </Grid>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default ProfileDetail;\n","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/Profile.js",["341"],"/home/alim/Documents/ju-housing-rent-web/src/components/Layout/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Footer/Footer.js",["342"],"import React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"../Layout/styles\";\n\n\n\nexport default function Footer({ theme }) {\n  var classes = useStyles();\n\n  return (\n    <Box width={1}>\n      <div\n        className={`footer flex flex-middle ${classnames(classes.fixedBottom)}`}\n      >\n        <div className=\"flex flex-middle container px-sm-30 w-100\">\n            <p className=\"m-0\">PMSCS Batch:  \n            <Button variant=\"contained\" color=\"Primary\">\n              26\n            </Button>\n            </p>\n            \n          <span className=\"m-auto\"></span>\n          <p className=\"m-0\" style={{textAlign: 'right'}}>\n            Design and Developed by{\" \"}\n            <a href=\"https://www.linkedin.com/in/md-abdul-alim-milon/\" target=\"_blank\">\n              <Button variant=\"contained\" color=\"secondary\">\n                Md. Abdul Alim\n              </Button>\n            </a>\n          </p>\n        </div>\n      </div>\n    </Box>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/charts/Charts.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/maps/Maps.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/tables/Tables.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/Notifications.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/typography/Typography.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/icons/Icons.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomImage.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/ActionButton.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Button.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Select.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Autocomplete.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/CustomAutocomplete.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/Sidebar.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/DatePicker.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/Dashboard.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Header/Header.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Popup.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/FullScreenPopup/FullScreenPopup.js",[],["343","344"],"/home/alim/Documents/ju-housing-rent-web/src/components/FormDialog/FormDialog.js",[],"/home/alim/Documents/ju-housing-rent-web/src/utils/AxiosHeader.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/BreadCrumb/BreadCrumb.jsx",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/typography/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Wrappers/Wrappers.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Widget/Widget.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/PageTitle.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/notifications/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/icons/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Header/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Notification/Notification.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/mock.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/Table/Table.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/BigStat.js",[],["345","346"],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/Dot.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/UserAvatar.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/maps/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexHeatmap.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/PageTitle/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Widget/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Notification/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/dashboard/components/BigStat/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/UserAvatar/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/charts/components/ApexLineChart.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Upload.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileUpdateForm.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/ProfileForm.js",["347","348"],"import React, { useState, useEffect } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialFValues = {\n  id: 0,\n  first_name: \"\",\n  last_name: \"\",\n  email: \"\",\n  phone: \"\",\n  nid: \"\",\n  passport: \"\",\n  password: \"\",\n  password2: \"\",\n  present_address: \"\",\n  permanent_address: \"\",\n  birthday: new Date(),\n  married_status: \"\",\n  occupation: \"\",\n  occupation_institution: \"\",\n  religion: \"\",\n  education_qualification: \"\",\n};\n\nconst duplicateUserNameCheck = (list, value, own_email)=> {\n  var check = true\n  if(list.length === 0){\n    return check\n  }else{\n    for (let i=0; i< list.length; i ++){\n        if(value === list[i].email && value !=own_email){       \n          return check = false\n        }\n      }\n    }\n    return check;\n}\n\n\nconst ProfileForm = (props) => {\n\n  const [userList, setUserList] = useState([]);\n  const [religions, setReligions] = useState([]);\n  const [marriedStatus, setMarriedStatuses] = useState([]);\n\n\n  const {addOrEdit, userData } = props;\n\n  const validationSchema = yup.object().shape({\n    email: yup.string().required(\"Email is required\")\n    .test(\"Unique\", \"Email already exist.Try other.\", (values) => {\n      return duplicateUserNameCheck(userList, values, userData['email'])\n    }),\n    password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length'),\n    password2: yup\n    .string('Enter your password')\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n  });\n\n  \n\n  const classes = style();  \n\n  const formik = useFormik({\n    initialValues: initialFValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting }) => {\n        setSubmitting(false);\n        addOrEdit(values, setSubmitting);\n    },\n  });\n\n  useEffect(() => {\n    async function getReligions() {\n      const response = await fetch(\"/api/married/status/list\");\n      const body = await response.json();\n      setReligions(body);\n    }\n    getReligions();\n    async function getMarriedStatuses() {\n      const response = await fetch(\"/api/religion/list\");\n      const body = await response.json();\n      setMarriedStatuses(body);\n    }\n    getMarriedStatuses();\n    async function getUsers() {\n      const response = await fetch(\"/api/user/list\");\n      const body = await response.json();\n      setUserList(body);\n    }\n    getUsers();\n\n    if (userData != null)\n      userData['password'] = '';\n      userData['password2'] = '';\n      formik.setValues({\n        ...userData,\n      });\n  }, [userData]);\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={1}>\n      <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"First Name\"\n            name=\"first_name\"\n            value={formik.values.first_name}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.first_name && Boolean(formik.errors.first_name)}\n            helperText={formik.touched.first_name && formik.errors.first_name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Input\n            label=\"Last Name\"\n            name=\"last_name\"\n            value={formik.values.last_name}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n            helperText={formik.touched.last_name && formik.errors.last_name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            type='number'\n            error={formik.touched.phone && Boolean(formik.errors.phone)}\n            helperText={formik.touched.phone && formik.errors.phone}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.DatePicker\n              label=\"Birthday\"\n              name=\"birthday\"\n              value={formik.values.birthday}\n              onChange={value => {\n                formik.setFieldValue(\"birthday\", value)\n              }}\n              onBlur={formik.handleBlur}\n              fullWidth\n            />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"NID\"\n            name=\"nid\"\n            value={formik.values.nid}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.nid && Boolean(formik.errors.nid)}\n            helperText={formik.touched.nid && formik.errors.nid}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Passport\"\n            name=\"passport\"\n            value={formik.values.passport}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.passport && Boolean(formik.errors.passport)}\n            helperText={formik.touched.passport && formik.errors.passport}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Select\n              label=\"Married Status\"\n              name=\"married_status\"\n              value={formik.values.married_status}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={marriedStatus}\n              error={formik.touched.married_status && Boolean(formik.errors.married_status)}\n              helperText={formik.touched.married_status && formik.errors.married_status}\n            />\n        </Grid>\n        <Grid item md={3} sm={4} xs={6}>\n          <Controls.Select\n              label=\"Religion\"\n              name=\"religion\"\n              value={formik.values.religion}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={religions}\n              error={formik.touched.religion && Boolean(formik.errors.religion)}\n              helperText={formik.touched.religion && formik.errors.religion}\n            />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Occupation\"\n            name=\"occupation\"\n            value={formik.values.occupation}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.occupation && Boolean(formik.errors.occupation)}\n            helperText={formik.touched.occupation && formik.errors.occupation}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Occupation Institution\"\n            name=\"occupation_institution\"\n            value={formik.values.occupation_institution}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.occupation_institution && Boolean(formik.errors.occupation_institution)}\n            helperText={formik.touched.occupation_institution && formik.errors.occupation_institution}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={3} sm={4} xs={12}>\n          <Controls.Input\n            label=\"Education Qualification\"\n            name=\"education_qualification\"\n            value={formik.values.education_qualification}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.education_qualification && Boolean(formik.errors.education_qualification)}\n            helperText={formik.touched.education_qualification && formik.errors.education_qualification}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            type=\"password\"\n            onBlur={formik.handleBlur}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Confirm Password\"\n            name=\"password2\"\n            value={formik.values.password2}\n            onChange={formik.handleChange}\n            type=\"password\"\n            onBlur={formik.handleBlur}\n            error={formik.touched.password2 && Boolean(formik.errors.password2)}\n            helperText={formik.touched.password2 && formik.errors.password2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Present Address\"\n            name=\"present_address\"\n            value={formik.values.present_address}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.present_address && Boolean(formik.errors.present_address)}\n            helperText={formik.touched.present_address && formik.errors.present_address}\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={6} sm={6} xs={12}>\n          <Controls.Input\n            label=\"Permanent Address\"\n            name=\"permanent_address\"\n            value={formik.values.permanent_address}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.permanent_address && Boolean(formik.errors.permanent_address)}\n            helperText={formik.touched.permanent_address && formik.errors.permanent_address}\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={12} sm={12} xs={12} >\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Update\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default ProfileForm;\n","/home/alim/Documents/ju-housing-rent-web/src/components/Controls/Input.js",[],"/home/alim/Documents/ju-housing-rent-web/src/components/Table/useTable.js",[],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMember.js",["349"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/FamilyMemberForm.js",["350","351"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContact.js",["352"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/EmergencyContactForm.js",["353","354"],"/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HouseCleanerForm.js",["355"],"import React, { useEffect, useState } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialValues = {\n  id: 0,\n  unit: \"\",\n  name: \"\",\n};\n\n\n\nconst HouseCleanerForm = (props) => {\n\n  const { addOrEdit, recordForEdit, lineNameList } = props;\n\n  const [units, setUnits] = useState([]);\n  const [ errorMessage, setErrorMessage ] = useState(\"\")\n  \n  // console.log(lineNameList)\n\n  const validationSchema = yup.object().shape({\n    unit: yup.string().required(\"Unit is required\"),\n    name: yup.string().required(\"Name is required\"),\n  });\n\n  const classes = style();\n\n  function duplicateUnitLineNameCheck(values){\n    for(let i=0; i < lineNameList.length; i++){\n      if(values.unit === lineNameList[i].unit & values.name === lineNameList[i].name){\n        return false\n      }\n    }\n    return true\n  }\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      if(duplicateUnitLineNameCheck(values)){\n        setErrorMessage(\"\")\n        addOrEdit(values, resetForm, setSubmitting);\n      }else{\n        setErrorMessage(\"Unit & Line name must be unique.\")\n        setSubmitting(false);\n      }\n    },\n  });\n\n  useEffect(() => {\n    async function getUnits() {\n      const response = await fetch(\"/api/unit/name/list/\", {headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },});\n      const body = await response.json();\n      setUnits(body);\n    }\n    getUnits();\n}, []);\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      formik.setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item md={12} sm={12} xs={12}>\n          <Controls.Select\n              label=\"Unit\"\n              name=\"unit\"\n              value={formik.values.unit}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={units}\n              error={formik.touched.unit && Boolean(formik.errors.unit)}\n              helperText={formik.touched.unit && formik.errors.unit}\n            />\n        </Grid>\n        <Grid item md={12} sm={12} xs={12}>\n          <Controls.Input\n            label=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={12} sm={12} xs={12}>\n          <p style={{fontSize: \"15px\", margin: \"0px\", color: \"red\"}}>{errorMessage.length > 0 ? errorMessage : null}</p>\n        </Grid>\n        <Grid item style={{ marginTop: 16 }}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={(e)=>{\n                setErrorMessage(\"\")\n                formik.resetForm(e)\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport {\n  HouseCleanerForm,\n}","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/DriverForm.js",["356"],"import React, { useEffect, useState } from \"react\";\nimport { Form } from \"../../components/Form/useForm\";\nimport Controls from \"../../components/Controls/Controls\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst style = makeStyles({\n  wrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n});\n\nvar initialValues = {\n  id: 0,\n  unit: \"\",\n  name: \"\",\n};\n\n\n\nconst DriverForm = (props) => {\n\n  const { addOrEdit, recordForEdit, lineNameList } = props;\n\n  const [units, setUnits] = useState([]);\n  const [ errorMessage, setErrorMessage ] = useState(\"\")\n  \n  // console.log(lineNameList)\n\n  const validationSchema = yup.object().shape({\n    unit: yup.string().required(\"Unit is required\"),\n    name: yup.string().required(\"Name is required\"),\n  });\n\n  const classes = style();\n\n  function duplicateUnitLineNameCheck(values){\n    for(let i=0; i < lineNameList.length; i++){\n      if(values.unit === lineNameList[i].unit & values.name === lineNameList[i].name){\n        return false\n      }\n    }\n    return true\n  }\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      if(duplicateUnitLineNameCheck(values)){\n        setErrorMessage(\"\")\n        addOrEdit(values, resetForm, setSubmitting);\n      }else{\n        setErrorMessage(\"Unit & Line name must be unique.\")\n        setSubmitting(false);\n      }\n    },\n  });\n\n  useEffect(() => {\n    async function getUnits() {\n      const response = await fetch(\"/api/unit/name/list/\", {headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },});\n      const body = await response.json();\n      setUnits(body);\n    }\n    getUnits();\n});\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      formik.setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Grid container alignItems=\"flex-start\" spacing={2}>\n        <Grid item md={12} sm={12} xs={12}>\n          <Controls.Select\n              label=\"Unit\"\n              name=\"unit\"\n              value={formik.values.unit}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              options={units}\n              error={formik.touched.unit && Boolean(formik.errors.unit)}\n              helperText={formik.touched.unit && formik.errors.unit}\n            />\n        </Grid>\n        <Grid item md={12} sm={12} xs={12}>\n          <Controls.Input\n            label=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            fullWidth\n          />\n        </Grid>\n        <Grid item md={12} sm={12} xs={12}>\n          <p style={{fontSize: \"15px\", margin: \"0px\", color: \"red\"}}>{errorMessage.length > 0 ? errorMessage : null}</p>\n        </Grid>\n        <Grid item style={{ marginTop: 16 }}>\n          <div className={classes.wrapper}>\n            <Controls.Button\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              text=\"Submit\"\n            />\n            {formik.isSubmitting && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={(e)=>{\n                setErrorMessage(\"\")\n                formik.resetForm(e)\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport {\n  DriverForm,\n}","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HomeDriver.js",["357"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popup from \"../../components/Controls/Popup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport {DriverForm} from \"./DriverForm\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  iconButtonColor: {\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"#0000ff\",\n    },\n  },\n}));\n\nexport default function HomeDriver() {\n  const classes = useStyles();\n  const [lineNameList, setLineNameList] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [fabricTypeRecord, setFabricTypeRecord] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n\n\n\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const getMuiTheme = () =>\n  createMuiTheme({\n    overrides: {\n      MUIDataTableToolbar: {\n        root: {\n          backgroundColor: \"#50d07d\",\n          color: \"#fff\",\n        },\n        icon: {\n          color: \"#fff\",\n          \"&:hover\": {\n            color: \"#0000ff\",\n          },\n        },\n      },\n      MuiTableCell: {\n        root: {  //This can be referred from Material UI API documentation. \n            padding: '6px',\n        },\n      },\n    },\n    typography: {\n      \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n      \"fontSize\": 14,\n      \"fontWeightLight\": 300,\n      \"fontWeightRegular\": 400,\n      \"fontWeightMedium\": 500\n     }\n  });\n\n  async function fetchFabricTypes() {\n\n    try {\n      await axios\n        .get(\"/api/line/name/list/\", AxiosHeader)\n        .then((res) => {\n          setLineNameList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const postFabricType = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .post(\"/api/line/name/create/\", values, AxiosHeader)\n        .then((resp) => {\n          setFabricTypeRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateFabricType = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .put(`/api/line/name/update/${values.id}/`, values, AxiosHeader)\n        .then((resp) => {\n          setFabricTypeRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchFabricTypes();\n  }, [fabricTypeRecord]);\n\n  const openInPopup = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"unit_name\",\n      label: \"Unit\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabricType) {\n            if (fabricType.id === tableMeta.rowData[0])\n              return (item = fabricType);\n          });\n          return (\n            <>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  openInPopup(item);\n                }}\n              >\n                <EditIcon fontSize=\"default\" />\n              </IconButton>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  const addOrEdit = (fabricType, resetForm, setSubmitting) => {\n    if (fabricType.id === 0) postFabricType(fabricType, setSubmitting);\n    else updateFabricType(fabricType, setSubmitting);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    customToolbar: () => {\n      return (\n        <Tooltip title={\"Add New\"}>\n          <IconButton className={classes.iconButtonColor}\n            onClick={() => {\n              setOpenPopup(true);\n              setRecordForEdit(null);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n      );\n    },\n    print: false,\n    download: false,\n  };\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme()}>\n    <div>\n      <MUIDataTable\n        title={\"Home Drivers\"}\n        data={lineNameList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n      <Popup\n        title=\"Home Driver Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <DriverForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} lineNameList={lineNameList} />\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n    </MuiThemeProvider>\n  );\n}\n","/home/alim/Documents/ju-housing-rent-web/src/pages/profile/HomeCleaner.js",["358"],"import React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popup from \"../../components/Controls/Popup\";\nimport Notification from \"../../components/SnackBar/Notification\";\nimport { makeStyles, Tooltip } from \"@material-ui/core\";\nimport {HouseCleanerForm} from \"./HouseCleanerForm\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  iconButtonColor: {\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"#0000ff\",\n    },\n  },\n}));\n\nexport default function HomeCleaner() {\n  const classes = useStyles();\n  const [lineNameList, setLineNameList] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [fabricTypeRecord, setFabricTypeRecord] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n\n\n\n\n  const AxiosHeader = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n    },\n  }\n\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\",\n  });\n\n  const getMuiTheme = () =>\n  createMuiTheme({\n    overrides: {\n      MUIDataTableToolbar: {\n        root: {\n          backgroundColor: \"#50d07d\",\n          color: \"#fff\",\n        },\n        icon: {\n          color: \"#fff\",\n          \"&:hover\": {\n            color: \"#0000ff\",\n          },\n        },\n      },\n      MuiTableCell: {\n        root: {  //This can be referred from Material UI API documentation. \n            padding: '6px',\n        },\n      },\n    },\n    typography: {\n      \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n      \"fontSize\": 14,\n      \"fontWeightLight\": 300,\n      \"fontWeightRegular\": 400,\n      \"fontWeightMedium\": 500\n     }\n  });\n\n  async function fetchFabricTypes() {\n\n    try {\n      await axios\n        .get(\"/api/line/name/list/\", AxiosHeader)\n        .then((res) => {\n          setLineNameList(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const postFabricType = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .post(\"/api/line/name/create/\", values, AxiosHeader)\n        .then((resp) => {\n          setFabricTypeRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateFabricType = async (values, setSubmitting) => {\n\n    try {\n      await axios\n        .put(`/api/line/name/update/${values.id}/`, values, AxiosHeader)\n        .then((resp) => {\n          setFabricTypeRecord(resp.data);\n          setSubmitting(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetchFabricTypes();\n  }, [fabricTypeRecord]);\n\n  const openInPopup = (item) => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const columns = [\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      },\n    },\n    {\n      name: \"unit_name\",\n      label: \"Unit\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let item;\n          tableMeta.tableData.forEach(function (fabricType) {\n            if (fabricType.id === tableMeta.rowData[0])\n              return (item = fabricType);\n          });\n          return (\n            <>\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  openInPopup(item);\n                }}\n              >\n                <EditIcon fontSize=\"default\" />\n              </IconButton>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  const addOrEdit = (fabricType, resetForm, setSubmitting) => {\n    if (fabricType.id === 0) postFabricType(fabricType, setSubmitting);\n    else updateFabricType(fabricType, setSubmitting);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setNotify({\n      isOpen: true,\n      message: \"Submitted Successfully\",\n      type: \"success\",\n    });\n  };\n\n  const options = {\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    responsive: \"standard\",\n    customToolbar: () => {\n      return (\n        <Tooltip title={\"Add New\"}>\n          <IconButton className={classes.iconButtonColor}\n            onClick={() => {\n              setOpenPopup(true);\n              setRecordForEdit(null);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n      );\n    },\n    print: false,\n    download: false,\n  };\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme()}>\n    <div>\n      <MUIDataTable\n        title={\"Home Cleaners\"}\n        data={lineNameList}\n        columns={columns}\n        options={options}\n        className={classes.pageContent}\n      />\n      <Popup\n        title=\"Home Cleaner Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <HouseCleanerForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} lineNameList={lineNameList} />\n      </Popup>\n      <Notification notify={notify} setNotify={setNotify} />\n    </div>\n    </MuiThemeProvider>\n  );\n}\n",{"ruleId":"359","replacedBy":"360"},{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","severity":1,"message":"364","line":1,"column":10,"nodeType":"365","messageId":"366","endLine":1,"endColumn":22},{"ruleId":"367","severity":1,"message":"368","line":241,"column":17,"nodeType":"369","messageId":"370","endLine":241,"endColumn":87,"fix":"371"},{"ruleId":"372","severity":1,"message":"373","line":299,"column":53,"nodeType":"374","messageId":"375","endLine":299,"endColumn":54},{"ruleId":"372","severity":1,"message":"373","line":475,"column":56,"nodeType":"374","messageId":"375","endLine":475,"endColumn":57},{"ruleId":"363","severity":1,"message":"376","line":22,"column":10,"nodeType":"365","messageId":"366","endLine":22,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":79,"column":6,"nodeType":"379","endLine":79,"endColumn":20,"suggestions":"380"},{"ruleId":"363","severity":1,"message":"381","line":3,"column":8,"nodeType":"365","messageId":"366","endLine":3,"endColumn":25},{"ruleId":"367","severity":1,"message":"368","line":28,"column":13,"nodeType":"369","messageId":"370","endLine":28,"endColumn":88,"fix":"382"},{"ruleId":"359","replacedBy":"383"},{"ruleId":"361","replacedBy":"384"},{"ruleId":"359","replacedBy":"385"},{"ruleId":"361","replacedBy":"386"},{"ruleId":"387","severity":1,"message":"388","line":52,"column":45,"nodeType":"389","messageId":"390","endLine":52,"endColumn":47},{"ruleId":"377","severity":1,"message":"391","line":122,"column":6,"nodeType":"379","endLine":122,"endColumn":16,"suggestions":"392"},{"ruleId":"377","severity":1,"message":"393","line":145,"column":6,"nodeType":"379","endLine":145,"endColumn":27,"suggestions":"394"},{"ruleId":"363","severity":1,"message":"395","line":1,"column":28,"nodeType":"365","messageId":"366","endLine":1,"endColumn":36},{"ruleId":"377","severity":1,"message":"391","line":66,"column":6,"nodeType":"379","endLine":66,"endColumn":21,"suggestions":"396"},{"ruleId":"377","severity":1,"message":"393","line":145,"column":6,"nodeType":"379","endLine":145,"endColumn":27,"suggestions":"397"},{"ruleId":"363","severity":1,"message":"395","line":1,"column":28,"nodeType":"365","messageId":"366","endLine":1,"endColumn":36},{"ruleId":"377","severity":1,"message":"391","line":66,"column":6,"nodeType":"379","endLine":66,"endColumn":21,"suggestions":"398"},{"ruleId":"377","severity":1,"message":"391","line":92,"column":6,"nodeType":"379","endLine":92,"endColumn":21,"suggestions":"399"},{"ruleId":"377","severity":1,"message":"391","line":92,"column":6,"nodeType":"379","endLine":92,"endColumn":21,"suggestions":"400"},{"ruleId":"377","severity":1,"message":"401","line":128,"column":6,"nodeType":"379","endLine":128,"endColumn":24,"suggestions":"402"},{"ruleId":"377","severity":1,"message":"401","line":128,"column":6,"nodeType":"379","endLine":128,"endColumn":24,"suggestions":"403"},"no-native-reassign",["404"],"no-negated-in-lhs",["405"],"no-unused-vars","'initialState' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"406","text":"407"},"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'notify' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProfile'. Either include it or remove the dependency array.","ArrayExpression",["408"],"'ProfileUpdateForm' is defined but never used.",{"range":"409","text":"407"},["404"],["405"],["404"],["405"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["410"],"React Hook useEffect has a missing dependency: 'fetchFamilyMembers'. Either include it or remove the dependency array.",["411"],"'useState' is defined but never used.",["412"],["413"],["414"],["415"],["416"],"React Hook useEffect has a missing dependency: 'fetchFabricTypes'. Either include it or remove the dependency array.",["417"],["418"],"no-global-assign","no-unsafe-negation",[6382,6382]," rel=\"noreferrer\"",{"desc":"419","fix":"420"},[843,843],{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"423","fix":"427"},{"desc":"425","fix":"428"},{"desc":"425","fix":"429"},{"desc":"425","fix":"430"},{"desc":"431","fix":"432"},{"desc":"431","fix":"433"},"Update the dependencies array to be: [fetchProfile, updateSignal]",{"range":"434","text":"435"},"Update the dependencies array to be: [formik, userData]",{"range":"436","text":"437"},"Update the dependencies array to be: [familyMembersRecord, fetchFamilyMembers]",{"range":"438","text":"439"},"Update the dependencies array to be: [formik, recordForEdit]",{"range":"440","text":"441"},{"range":"442","text":"439"},{"range":"443","text":"441"},{"range":"444","text":"441"},{"range":"445","text":"441"},"Update the dependencies array to be: [fabricTypeRecord, fetchFabricTypes]",{"range":"446","text":"447"},{"range":"448","text":"447"},[1804,1818],"[fetchProfile, updateSignal]",[2962,2972],"[formik, userData]",[3738,3759],"[familyMembersRecord, fetchFamilyMembers]",[1397,1412],"[formik, recordForEdit]",[3750,3771],[1401,1416],[2223,2238],[2213,2228],[3201,3219],"[fabricTypeRecord, fetchFabricTypes]",[3214,3232]]